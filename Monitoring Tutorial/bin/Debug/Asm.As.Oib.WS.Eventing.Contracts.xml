<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASM.AS.OIB.WS.Eventing.Contracts</name>
    </assembly>
    <members>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.AddEventSourceRequest">
            <summary>
            Request for adding an EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.AddEventSourceRequest.EventSource">
            <summary>
            EventSource to be added
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.AddEventSourceRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.AddEventSourceResponse">
            <summary>
            Service Response from adding an EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.AddEventSourceResponse.EventSourceWasAdded">
            <summary>
            EventSource that had been added
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.AddEventSourceResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource">
            <summary>
            EventSource which sends notifications over MSMQ
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource.SenderIdentifier">
            <summary>
            Full Type Name as a string or other identifier (e.g. GUID)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource.ComputerName">
            <summary>
            Computer Name of the EventSource (sender)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource.NotifyEndpoint">
            <summary>
            NotifyEndpoint where this EventSource is registered
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource.IsSecureEndpoint">
            <summary>
            Returns true if the endpoint is secure
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource.EventTopics">
            <summary>
            List of EventTopics for this EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource.EventTopicsList">
            <summary>
            List of EventTopics as a comma separated list of strings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.EventSource.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointRequest">
            <summary>
            Service Request for getting the least used Notification Endpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointRequest.IsSecure">
            <summary>
            Determines if the returned Endpoint should be secure or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointRequest.ProtocolTypes">
            <summary>
            Filter for specific protocol types only
            Flags:
            0 = MSMQ (default, net.msmq endpoints),
            1 = TCP (net.tcp endpoints),
            2 = HTTP (http endpoints),
            3 = IPC (net.pipe endpoints),
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointRequest.Reliability">
            <summary>
            Determines if the returned Endpoint should be reliable or not
            0 = Any (reliable and unreliable endpoints),
            1 = Reliable (reliable endpoints only),
            2 = Unreliable (unreliable endpoints only)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointRequest.InterfaceType">
            <summary>
            Determines the NotificationManager interface implemented by the Endpoint
            0 = Any,
            1 = Synchronous (only endpoints that implement INotificationManagerSynchronous),
            2 = Asynchronous (only endpoints that implement INotificationManager, but not INotificationManagerSynchronous)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateEventSourceRequest">
            <summary>
            Service Request for updating of an EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateEventSourceRequest.EventSource">
            <summary>
            Updated EventSource that needs to be changed in the database
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateEventSourceRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateEventSourceResponse">
            <summary>
            Service Response from updating of an EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateEventSourceResponse.EndpointWasFoundAndUpdated">
            <summary>
            True if updating was successful
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateEventSourceResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequestType">
            <summary>
            Criteria for getting EventSources
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequestType.All">
            <summary>
            Getting all Event Sources
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequestType.BySenderIdentifier">
            <summary>
            Getting EventSources by sender identifier
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequestType.ByNotifyEndpoint">
            <summary>
            Getting EventSources by Endpoint address
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequest">
            <summary>
            Service Request for getting EventSource by a criteria
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequest.RequestType">
            <summary>
            Criteria for getting EventSources
            0 - All
            1 - By Sender Identifier
            2 - By Endpoint Address
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequest.EndpointAddress">
            <summary>
            Endpoint Address registered for the EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequest.SenderIdentifier">
            <summary>
            EventSource string identifier
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesResponse">
            <summary>
            Service Response from Getting EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesResponse.EventSources">
            <summary>
            Found EventSources
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetNotificationEndpointsRequest">
            <summary>
            Service Request for getting Notification Endpoints
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetNotificationEndpointsResponse">
            <summary>
            Service Response from getting NotificationEndpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetNotificationEndpointsResponse.NotifyEndpoints">
            <summary>
            Found NotifyEndpoints
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetNotificationEndpointsResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointResponse">
            <summary>
            Service Response from getting NotificationEndpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointResponse.AllNotifyEndpoints">
            <summary>
            All NotifyEndpoints sorted by number of EventSources
            registered for each endpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointResponse.LeastUsedNotifyEndpoint">
            <summary>
            The least used NotifyEndpoint
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetSecondaryServicesResult">
            <summary>
            Subscribe contains information to create a subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetSecondaryServicesResult.SecondaryNodes">
            <summary>
            List of secondary nodes that are currently registered
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetSecondaryServicesResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.NotifyEndpoint">
            <summary>
            Endpoint for sending events over MSMQ
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.NotifyEndpoint.EndpointAddress">
            <summary>
            Address of the endpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.NotifyEndpoint.IsSecure">
            <summary>
            True if secure MSMQ is used
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.NotifyEndpoint.UsedByNumberOfSenders">
            <summary>
            Number of senders that registered to this endpoint.
            Is only filled in case GetLeastUsedEndpoint() method is called.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.NotifyEndpoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticReport">
            <summary>
            The State of a Queue
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticReport.Host">
            <summary>
            The host of QueueStatisticReport.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticReport.QueueStatistic">
            <summary>
            The queue statistic from secondary sent to Primary.
            Key is the endpoint to lower
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticReport.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticResult">
            <summary>
            The Status of a Queue
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticResult.IsAccepted">
            <summary>
            The value indicating whether appropriate request is done accomplished on an other side of communication.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticResult.CoreProcessId">
            <summary>
            The process Id of the OIB Core service. Can be used to detect if core was restarted.
            In that case, the secondary node needs to resynchronize the Subscriptions.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveNotificationEndpointRequest">
            <summary>
            Service Request for removing of NotificationEndpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveNotificationEndpointRequest.EndpointAddress">
            <summary>
            Address of the endpoint to be removed
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveNotificationEndpointRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveNotificationEndpointResponse">
            <summary>
            Service Response from removing NotificationEndpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveNotificationEndpointResponse.EndpointWasFoundAndRemoved">
            <summary>
            True, if the endpoint was found in the database and was removed.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveNotificationEndpointResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode">
            <summary>
            The implementation of SecondaryNode class
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode.AbsoluteUri">
            <summary>
            The absolute URI of a secondary node.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode.IsConnected">
            <summary>
            True, if this node is currently connected, otherwise false.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode.NotificationManagerEndpoints">
            <summary>
            Notification Manager Endpoints
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode.HostName">
            <summary>
            The host name part in the AbsoluteUri
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume">
            <summary>
            Resume defines the new expiration of  subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Resume)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume" /> class.
            </summary>
            <param name="resume">The resume.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume" /> class.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="subscriptionTopic">The Subscription Topic associated with event data</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume.Identifier">
            <summary>
            Special Message Header that contains the Unique Identifier associated with a Subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume.SubscriptionTopic">
            <summary>
            The Subscription Topic associated with event data. The subscription topic is the main structure for publishing and
            receiving event data.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.Resume)">
            <summary>
            Copies the specified Resume.
            </summary>
            <param name="resume">The Resume data.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Resume.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult">
            <summary>
            ResumeResult contains the Message response containing the resume information of a subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult)">
            <summary>
            Copies the specified result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult">
            <summary>
            PauseResult contains the Message response containing the expiration information of a subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult)">
            <summary>
            Copies the specified result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause">
            <summary>
            Pause a subscription for an indefinite period of time. To continue the subscription, must call Resume
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Pause)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause" /> class.
            </summary>
            <param name="pause">The pause data.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause" /> class.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="subscriptionTopic">The Subscription Topic associated with event data</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause.Identifier">
            <summary>
            Special Message Header that contains the Unique Identifier associated with a Subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause.SubscriptionTopic">
            <summary>
            The Subscription Topic associated with event data. The subscription topic is the main structure for publishing and
            receiving event data.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.Pause)">
            <summary>
            Copies the specified Pause.
            </summary>
            <param name="pause">The Pause data.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Pause.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery">
            <summary>
            The Class defining the Delivery aspects of a WS-Eventing message
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery" /> class.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery" /> class.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery" /> class.
            </summary>
            <param name="mode">The mode.</param>
            <param name="notifyTo">The notify to.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery" /> class.
            </summary>
            <param name="mode">The mode.</param>
            <param name="notifyTo">The notify to.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.#ctor(System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery" /> class.
            </summary>
            <param name="notifyTo">The notify to.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery" /> class.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.DeliveryMode">
            <summary>
            The Delivery Mode. Specifies for example Push, PushWithAck, etc
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.EndpointSerialiazable">
            <summary>
            The Endpoint for the Message (in a serializable form) to be delivered to.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.IsSecure">
            <summary>
            If true, the event receiver WCF service has security enabled.
            Only transport security is supported. That means: https and net.tcp using a certificate.
            Msmq and http endpoints using security are not supported.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.NotifyTo">
            <summary>
            The Endpoint for the Message to be delivered to.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.DeliveryModeType">
            <summary>
            The Delivery Mode. Specifies for example Push, PushWithAck, etc
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.IsWithAck">
            <summary>
            This is a delivery with ack (has a db queue)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.IsReliableEndpoint">
            <summary>
            The client claims to have a reliable endpoint
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.IsBatched">
            <summary>
            The client wants a batched subscription
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType">
            <summary>
            This defines the Delivery mode for the eventing
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.Undefined">
            <summary>
            Mode is not defined
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.Push">
            <summary>
            Push the message with fire and forget methods
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.PushWithAck">
            <summary>
            Push the message and wait for the response, reliable endpoint assumed
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.Wrapped">
            <summary>
            Wrapped the methods
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.PushReliable">
            <summary>
            Standard Push but with a Reliable Endpoint
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.PushWithAckBatch">
            <summary>
            Push with ack and batch mode for the messages and wait for the response, reliable endpoint assumed
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.PushWithAckBatchUnreliable">
            <summary>
            Push with ack and batch mode for the messages and wait for the response, unreliable endpoint assumed
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType.PushWithAckUnreliable">
            <summary>
            Push the message and wait for the response, unreliable endpoint assumed
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires">
            <summary>
            The Class whose purpose is to define the expiration of a subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires" /> class.
            </summary>
            <param name="dt">The expiry date.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires" /> class.
            </summary>
            <param name="duration">The duration.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires.Value">
            <summary>
            The DateTime value of the Subscription Expiration.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires.IsValidTime(System.Boolean)">
            <summary>
            Ensure the Time contained is valid.
            </summary>
            <param name="throwex">Throw an exception if invalid.</param>
            <returns>True if valid, false otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Expires.IsDurationTime(System.Boolean)">
            <summary>
            Checks if the value is a Timespan value or not.
            </summary>
            <param name="throwex">Throw an exception if invalid.</param>
            <returns>True if timespan value, false otherwise.</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier">
            <summary>
            Identifier is the unique identifier for Subscription topics, etc.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.#ctor(System.Xml.UniqueId)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier" /> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier" /> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier" /> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.#ctor(System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier" /> class.
            </summary>
            <param name="epa">The endpoint address.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.Value">
            <summary>
            The Unique Id
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.GuidString">
            <summary>
            The Unique Id in the form of a GUID String
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.AddressHeader">
            <summary>
            Returns an Address header from a given Identifier
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.CompareTo(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Compares this instance with a specified Identifier object and indicates whether this instance precedes, follows,
            or appears in the same position in the sort order as the specified Identifier.
            </summary>
            <param name="other">The Identifier to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same
            position in the sort order as the value parameter.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.Equals(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Determines whether the specified Identifier is equal to this instance.
            </summary>
            <param name="other">The Identifier to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified Identifier is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.op_Equality(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.op_Inequality(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage">
            <summary>
            Queued Message contains properties/methods associated with a WS-Eventing Message. A QueuedMessage is created initially
            when an event is sent with acknowledgment.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.DebugMessageId">
            <summary>
            DebugMessageId
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.Id">
            <summary>
            The Unique Id for this message
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.TimeStamp">
            <summary>
            The TimStamp for when this Message was created.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.Endpoint">
            <summary>
            The endpoint where this message is intended to be delivered.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.SubscriptionId">
            <summary>
            The Unique Subscription Id associated with this Message
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.IsCompressed">
            <summary>
            Whether the Message is compressed or not. For large Message Data, this message may be compressed.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.MessageBytes">
            <summary>
            The Actual Message Data to be sent to the consumer.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.MessageText">
            <summary>
            The Message Text (Body) of the Message to be sent.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.Stamp">
            <summary>
            The Stamp for when this Message was created.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.Unsubscribed">
            <summary>
            Replaced by ReceiverQueue.Unsubscribed
            </summary>
            <value>True, If the Subscription is in the Unsubscribed state. False otherwise..</value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.Stamp2">
            <summary>
            The Stamp for when this Message was created.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.Id_Long">
            <summary>
            The Unique Id for this message
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatus">
            <summary>
            The Status of a Queue
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatus.Active">
            <summary>
            The queue is active and running
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatus.Disabled">
            <summary>
            The queue is disabled and can not send messages.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue">
            <summary>
            ReceiverQueue contains the data associated with WS-Eventing PushWithAck Messages.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue" /> class.
            Used for creating an artificial ReceiverQueue instance in case of multi-eventing scenario
            </summary>
            <param name="primaryQueue">The primary queue which will be used to initialize this parent queue with.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue" /> class.
            </summary>
            <param name="createEvent">if set to <c>true</c> [create event].</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Endpoint">
            <summary>
            The Endpoint associated with the Messages to be delivered.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Status">
            <summary>
            The Queue Status whether the Queue is running or disabled.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Subscriptions">
            <summary>
            List of Subscriptions associated with the Endpoint.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Messages">
            <summary>
            A Queue of (ordered) Messages to be delivered to an endpoint.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.HasQueue">
            <summary>
            If true then the Queue contains subscriptions the require data to be stored in the OIB db for reliability.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MessageCount">
            <summary>
            The number of messages stored in the OIB db.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.LastSuccessfulSend">
            <summary>
            Timestamp of the last successful publish of a message.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.LastReceivedMessage">
            <summary>
            Timestamp of the last message received.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.LastResult">
            <summary>
            Success or error message of the last publish to a client.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Paused">
            <summary>
            Whether this Queue is in a Paused State.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.IncomingMessageCount">
            <summary>
            Incoming Messages for this subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.OutgoingMessageCount">
            <summary>
            Outgoing (sent) messages this subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ErrorCount">
            <summary>
            Error count for this subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MaxMessageSizeQuota">
            <summary>
            Quota for the maximum message size (valid for all incoming messages)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MaxMessageCountForSubscriptionQuota">
            <summary>
            Quota for the maximum message count for one PushWithAck / PushWithAckUnreliable subscriptions
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MaxMessageCountForAllSubscriptionsQuota">
            <summary>
            Quota for the maximum message count for all PushWithAck / PushWithAckUnreliable subscriptions
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ExceptionReason">
            <summary>
            Exception Reason Code.
            For details, please also <see cref="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.LastResult"/>.
            <list type="table">
            <listheader>
            <term>Value</term><description>Description</description>
            </listheader>
            <item>
            <term>"0"</term>
            <description>
            OIB Eventing got an un-categorized exception when sending the message. Please see LastResult for details.
            </description>
            </item>
            <item>
            <term>"1"</term>
            <description>
            OIB Eventing could not reach the specified endpoint. Please check if the application is running.
            </description>
            </item>
            <item>
            <term>"2"</term>
            <description>
            OIB Eventing got a timeout exception. Please check if the application is running and is processing messages correctly. The reason for such an exception
            could be a buggy application, heave load on the OIB Core computer, the application computer or the network.
            </description>
            </item>
            <item>
            <term>"3"</term>
            <description>
            OIB Eventing could not connect to the client computer in a timely manner. Please check if the network is under heavy load.
            </description>
            </item>
            <item>
            <term>"100"</term>
            <description>OIB Eventing was able to deliver the message to the receiving application, but the application has an internal problem
            and threw an exception back to OIB Eventing. Please check with the application development team for details. The exception text can be found in the LastResult property.
            </description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.LastUnsuccessfulSentMessage">
            <summary>
            Timestamp of the last unsuccessful publish of a message.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ServiceStartTime">
            <summary>
            Timestamp of the last unsuccessful publish of a message.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ReliableBinding">
            <summary>
            Whether the client endpoint uses a reliable binding
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.IsOibInternalQueue">
            <summary>
            True, if this is a subscription that is only used internally
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MaxMessageCountForPushSubscriptionQuota">
            <summary>
            Quota for the maximum message count for Push / PushReliable subscriptions
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MaxMegabytesForPushSubcriptionQuota">
            <summary>
            Quota for the maximum MB count for one Push / PushReliable subscription (protects memory for Core Host process)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MaxMegabytesForAllPushSubcriptionsQuota">
            <summary>
            Quota for the maximum MB count for all Push / PushReliable subscriptions (protects memory for Core Host process)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MaxRemainingDataQuota">
            <summary>
            Quota for remaining message count for all PushWithAck / PushWithAckUnreliable subscriptions
            If this is 0, then Eventing will discard (throw away messages)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MessagesThrownAwaySinceLastRestart">
            <summary>
            Number of messages that have been thrown away for this subscription since the last service restart
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.TotalStoredMessageCount">
            <summary>
            Total count of all messages that are currently buffered in the DB for PushWithAck / PushWithAckUnreliable subscriptions
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.DatabaseInstance">
            <summary>
            Gets the name of the computer with the OIB database.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ClientAppName">
            <summary>
            The name of the client application.
            Use this to specify a human readable application name. The application name can be seen in Subscription Administration
            Studio Plugin.
            Example: Process.GetCurrentProcess().ProcessName
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
            <value>
            The name of the client application.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ClientProcessInfo">
            <summary>
            Information about the client process
            </summary>
            <remarks>Max number of characters is 1000. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.DatabaseName">
            <summary>
            Gets the name of the OIB database.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MultiEventingReceiverQueues">
            <summary>
            If secondary nodes are registered, this property is non-null.
            In this case the IsMultiEventingQueue is true and this list contains the real ReceiverQueues from the primary as well as
            all registered secondary nodes.
            The key is the host name of the eventing service, value is the ReceiverQueue instance belonging to the primary or one
            of the secondaries.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.IsPrimary">
            <summary>
            If true, this ReceiverQueue is a queue from the primary Eventing Service
            OR it is the artificial parent queue (IsMultiEventingQueue=true).
            False, if it is from the secondary .
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.EventingHostName">
            <summary>
            The computer name of the eventing node that this ReceiverQueue belongs to.
            If it belongs to the primary, it is the name of the  oib core service computer.
            If it belongs to a secondary (IsPrimary == false), then it is the computer name of the secondary service.
            If this is an artificial parent queue, the name is "*MultiEventingService*"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.IsSubQueue">
            <summary>
            True, if this queue is a sub queue of an artificial parent queue.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.IsMultiEventingQueue">
            <summary>
            If true, this is an artificial ReceiverQueue instance that represents the sum of the
            sub-instances
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.FinishedProcessingEvent">
            <summary>
            Internally used ManualResetEvent
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Unsubscribed">
            <summary>
            Unsubscribed flag. True, If the Subscription is in the Unsubscribed state. False otherwise.
            </summary>
            <value>True, If the Subscription is in the Unsubscribed state. False otherwise..</value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.EndpointOfSubscriptionsString">
            <summary>
            Gets the endpoint of subscriptions.
            </summary>
            <value>
            The endpoint of subscriptions.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.EndpointOfSubscriptions">
            <summary>
            Returns Endpoint property if not null, otherwise takes the FirstSubscription?.Delivery.EndpointSerializable
            </summary>
            <value>
            The endpoint of subscriptions.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.EndpointOfSubscriptionsEP">
            <summary>
            Gets the endpoint of subscriptions.
            </summary>
            <value>
            The endpoint of subscriptions.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ClientApplicationVersion">
            <summary>
            The version of the client application.
            </summary>
            <remarks>Max number of characters is 50. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ClientApplicationCompany">
            <summary>
            The company name of the client application.
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ClientApplicationCopyright">
            <summary>
            The copyright statement of the client application.
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ClientApplicationProductName">
            <summary>
            The product name of the client application.
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.IsAsmClient">
            <summary>
            Information if the client application is an asm application or not.
            If null, it cannot be determined. 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.FirstSubscription">
            <summary>
            Returns the first subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.SubscriptionsById">
            <summary>
            Subscriptions by Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.MessagesInternal">
            <summary>
            To be used internally
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.SetMessages(System.Collections.Generic.Queue{Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage})">
            <summary>
            To be used internally
            </summary>
            <param name="messages">The messages</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.AddSubscription(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Adds the subscription.
            </summary>
            <param name="sub">The sub.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.GetSubscription(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Gets the subscription.
            </summary>
            <param name="subscriptionId">The subscription id.</param>
            <returns>Subscription</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.GetSubscription">
            <summary>
            Gets the subscription.
            </summary>
            <returns>Subscription</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue" /> class.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetSecondaryServicesRequest">
            <summary>
            Subscribe contains information to create a subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetSecondaryServicesRequest.ActiveOnly">
            <summary>
            If null, gets all registered nodes, if true gets only the currently reachable nodes.
            If false only gets the inactive nodes.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetSecondaryServicesRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription">
            <summary>
            Subscription contains all the details of a WS-Eventing based subscription.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Flushed">
            <summary>
            This Subscription was already flushed
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.LastSentMessage">
            <summary>
            The Last successfully sent message
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe,Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager,Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription" /> class.
            </summary>
            <param name="subscribe">The subscribe.</param>
            <param name="manager">The manager.</param>
            <param name="sd">The SubscriptionDescriptor.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription" /> class.
            </summary>
            <param name="copy">The copy.</param>
            <exception cref="T:System.ArgumentNullException">copy</exception>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.EndpointSerializable">
            <summary>
            Specifies where to send a SubscriptionEnd message if the subscription is terminated unexpectedly. Not implemented.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Delivery">
            <summary>
            The Delivery mode of a Message
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Expires">
            <summary>
            The expiration of a subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Filter">
            <summary>
            The Filtering of a Subscription topic.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Manager">
            <summary>
            The Data containing information for managing a subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.IsReadOnly">
            <summary>
            If the subscription is Read-only
            </summary>
            <remarks>Not implemented in OIB 1.1. Reserved for future use.</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.EndTo">
            <summary>
            Specifies where to send a SubscriptionEnd message if the subscription is terminated unexpectedly. Not implemented.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Topic">
            <summary>
            The Topic that the Subscription is for.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Paused">
            <summary>
            Whether this subscription is paused or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.IsDeadQueue">
            <summary>
            Whether this subscription is dead (not processing)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.ClientAppName">
            <summary>
            The name of the client application. 
            Use this to specify a human readable application name. The application name can be seen in Subscription Administration Studio Plugin.
            Example: Process.GetCurrentProcess().ProcessName
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
            <value>
            The name of the client application.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.ClientProcessInfo">
            <summary>
            Client application name process info (if it could be determined)
            <remarks>Max number of characters is 1000. (Will be truncated automatically)</remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.ClientApplicationVersion">
            <summary>
            The version of the client application.
            </summary>
            <remarks>Max number of characters is 50. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.ClientApplicationCompany">
            <summary>
            The company name of the client application. 
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.ClientApplicationCopyright">
            <summary>
            The copyright statement of the client application. 
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.ClientApplicationProductName">
            <summary>
            The product name of the client application. 
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.IsAsmClient">
            <summary>
            Information if the client application is an asm application or not.
            If null, it cannot be determined. 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.IsExpired">
            <summary>
            Gets a value indicating whether this instance is expired.
            </summary>
            <value>
            <c>true</c> if this instance is expired; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.IsOibInternalQueue">
            <summary>
            Gets a value indicating whether this instance is an oib internal queue.
            </summary>
            <value>
            <c>true</c> if this instance is oib internal queue; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Equals(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Determines whether the specified Subscription is equal to this instance.
            </summary>
            <param name="other">The Subscription to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified Subscription is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.op_Equality(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription,Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.op_Inequality(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription,Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor">
            <summary>
            SubscriptionDescriptor contains all the information describing a Subscription.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.DataContractName">
            <summary>
            Data contract name of the subscription descriptor
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(System.Xml.UniqueId)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
            <param name="id">The subscription id.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(System.Xml.UniqueId,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
            <param name="id">The subscription id.</param>
            <param name="expires">The expiry date.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(System.Xml.UniqueId,System.String,System.ServiceModel.EndpointAddressAugust2004)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
            <param name="id">The subscription id.</param>
            <param name="strTopic">The subscription topic.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(System.Xml.UniqueId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
            <param name="id">The subscription id.</param>
            <param name="strTopic">The subscription topic.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(System.ServiceModel.EndpointAddressAugust2004,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
            <param name="ea">The ea.</param>
            <param name="strTopic">The subscription topic.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
            <param name="strTopic">The subscription topic.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(System.Xml.UniqueId,System.DateTime,System.String,System.ServiceModel.EndpointAddressAugust2004)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            </summary>
            <param name="id">The subscription id.</param>
            <param name="expires">The expiry date.</param>
            <param name="strTopic">The subscription topic.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor" /> class.
            Copies all values from the passed in SubscriptionDescriptor.
            </summary>
            <param name="rd">The SubscriptionDescriptor.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.Id">
            <summary>
            Unique Id in the system
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.Name">
            <summary>
            The name of the Subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.Topic">
            <summary>
            The Subscription Topic
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.Expires">
            <summary>
            The expiration of the topic.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.Created">
            <summary>
            The date/time the subscription was created
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.Updated">
            <summary>
            The Time the Subscription was updated
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.Endpoint">
            <summary>
            The serializable end point.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.XmlQualifiedName">
            <summary>
            Gets the name of the XML qualified string.
            </summary>
            <value>The name of the XML qualified string.</value>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd">
            <summary>
            SubscriptionEnd contains information about a subscription that has been canceled.
            </summary>
            <remarks>
            Not implemented in OIB 1.1. Reserved for future use.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd" /> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager,Asm.As.Oib.WS.Eventing.Types.SubscriptionEndCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd" /> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="code">The code.</param>
            <param name="reason">The reason.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager,Asm.As.Oib.WS.Eventing.Types.SubscriptionEndCode,System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd" /> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="code">The code.</param>
            <param name="reason">The reason.</param>
            <param name="cultureinfo">The culture info.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.SubscriptionManager">
            <summary>
            The Subscription details.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.Code">
            <summary>
            The root cause of the cancellation
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.CultureInfo">
            <summary>
            Special Culture Information regarding the Reason for canceling.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionEnd.Reason">
            <summary>
            The Reason this subscription has been canceled.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager">
            <summary>
            This is the Subscription manager class which is bundling the functionality to manage subscriptions in the
            WS framework from the OIB.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager" /> class.
            </summary>
            <param name="copy">The copy.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.#ctor(System.Uri,Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager" /> class.
            </summary>
            <param name="address">The address.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager" /> class.
            </summary>
            <param name="address">The address.</param>
            <param name="headers">The headers.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.EndpointSerializeable">
            <summary>
            Gets or sets the SubscriptionManager endpoint that was used when the subscription was created.
            (e.g. "http://localhost:1405/Asm.As.Oib.WS.Eventing.Services/SubscriptionManager")
            </summary>
            <value>The endpoint address.</value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.Endpoint">
            <summary>
            Gets or sets the SubscriptionManager endpoint that was used when the subscription was created
            (e.g. "http://localhost:1405/Asm.As.Oib.WS.Eventing.Services/SubscriptionManager")
            </summary>
            <value>The endpoint.</value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.Identifier">
            <summary>
            Special Message Header that contains the Unique Identifier associated with a Subscription
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.Equals(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager)">
            <summary>
            Determines whether the specified SubscriptionManager is equal to this instance.
            </summary>
            <param name="other">The other.</param>
            <returns>
            <c>true</c> if the specified SubscriptionManager is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.op_Equality(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager,Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.op_Inequality(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager,Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult">
            <summary>
            The mediator data type for services
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.#ctor(System.Boolean,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult" /> class.
            </summary>
            <param name="useSubscriptionExpiry">if set to <c>true</c> [use subscription expiry].</param>
            <param name="maxSubscriptionExpiry">The maximum subscription expiry.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.UseSubscriptionExpiry">
            <summary>
            Is SubscriptionExpiry in use. Only if this is true, MaxSubscriptionExpiry is used for checking the expiry.
            Gets or sets a value indicating whether [use subscription expiry].
            </summary>
            <value>
              <c>true</c> if [use subscription expiry]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.MaxSubscriptionExpiry">
            <summary>
            The maximum allowed subscription expiry in days in case the user defined it.
            Minimum Value is 1 day.
            </summary>
            <value>
            The maximum subscription expiry.
            </value>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.Equals(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SynchronizeResultType">
            <summary>
            The SynchronizeResultType defines the eventing instances synchronization result.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.SynchronizeResultType.Undefined">
            <summary>
            A synchronization result is not defined
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.SynchronizeResultType.NotFound">
            <summary>
            A synchronization target not found
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.SynchronizeResultType.AlreadyEqual">
            <summary>
            A synchronization target is already equal
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.SynchronizeResultType.SetToEqual">
            <summary>
            A synchronization target set to equal to synchronization source
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Contracts.Data.SynchronizeResultType.Added">
            <summary>
            A synchronization target was added
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryRegistrationResult">
            <summary>
            The implementation of SecondaryRegistrationResult class
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryRegistrationResult.RegistrationStatusChanged">
            <summary>
            True, if the status of the registration has changed
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryRegistrationResult.IsRegisteredNow">
            <summary>
            True, if the node is registered now.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryRegistrationResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest">
            <summary>
            WS-Eventing UpdateSubscriptionRequest class
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.GuidString">
            <summary>
            The Unique Id of the subscription in the form of a GUID String.
            Must always be provided to find the subscription.
            You can pass in the string that you get from the Subscription.Manager.Identifier.GuidString property.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.EndpointAddress">
            <summary>
            The new endpoint of the subscription for the messages to be delivered to.
            Only set this value in case you want to modify the subscription's endpoint.
            If left empty, EndpointAddress will not be modified!
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.Filter">
            <summary>
            The new xpath filter for a subscription.
            If left empty, the Filter will not be modified.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.DeliveryMode">
            <summary>
            The new Delivery Mode.
            Can be either PushWithAck or PushWithAckUnreliable
            If left empty, DeliveryMode will not be modified
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.ClearFilter">
            <summary>
            Set this to true in case you want to clear the existing filter of the subscription.
            </summary>
            <value>
            <c>true</c> if you want to clear the filter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.ClientAppName">
            <summary>
            The name of the client application. 
            Use this to specify a human readable application name. The application name can be seen in Subscription Administration Studio Plugin.
            Example: Process.GetCurrentProcess().ProcessName
            </summary>
            <remarks>Max number of characters is 250. (Will be truncated automatically)</remarks>
            <value>
            The name of the client application.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.IsSecure">
            <summary>
            If true, the event receiver WCF service has security enabled.
            Only transport security is supported. That means: https and net.tcp using a certificate.
            Msmq and http endpoints using security are not supported.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.DeliveryModeType">
            <summary>
            The Delivery Mode. Specifies for example Push, PushWithAck, etc
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.DeliveryModeSet">
            <summary>
            Gets a value indicating whether the DeliveryMode property was set or left empty.
            </summary>
            <value>
            <c>true</c> if the DeliveryMode property was set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.FilterSet">
            <summary>
            Gets a value indicating whether the Filter property was set or left empty.
            </summary>
            <value>
            <c>true</c> if the Filter property was set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.EndpointAddressSet">
            <summary>
            Gets a value indicating whether the EndpointAddress property was set or left empty.
            </summary>
            <value>
            <c>true</c> if EndpointAddress property was set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.IsWithAck">
            <summary>
            This is a delivery with ack (has a db queue)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionResponse">
            <summary>
            WS-Eventing UpdateSubscriptionResponse class
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionResponse.UpdatedSubscription">
            <summary>
            The updated subscription
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary">
            <summary>
            The mediator data type for services
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary.#ctor(System.Boolean,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary" /> class.
            </summary>
            <param name="useSubscriptionExpiry">if set to <c>true</c> [use subscription expiry].</param>
            <param name="maxSubscriptionExpiry">The maximum subscription expiry.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary" /> class.
            </summary>
            <param name="subscriptionSettings">The subscription settings request result.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionSecondaryRequest">
            <summary>
            WS-Eventing UpdateSubscriptionTransactionalRequest class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionSecondaryRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionSecondaryRequest" /> class.
            </summary>
            <param name="updatedSubscription">The updated subscription.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionSecondaryRequest.UpdatedSubscriptionFromPrimary">
            <summary>
            The updated subscription from primary. Just take over the values on secondary.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus">
            <summary>
            GetStatus describes information about a Status Request.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus" /> class.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus)">
            <summary>
            Copies the specified status.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult">
            <summary>
            GetStatusResult contains information of a Subscription Expiration.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Expires)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult" /> class.
            </summary>
            <param name="expires">The expires.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult" /> class.
            </summary>
            <param name="subscription">The Subscription.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult.Expires">
            <summary>
            The Expiration if a subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult.Subscription">
            <summary>
            The subscription which contains the status (IsDeadQueue, Paused, Expires, etc.) as well
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult)">
            <summary>
            Copies the specified result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew">
            <summary>
            Renew defines the new expiration of  subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Renew)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew" /> class.
            </summary>
            <param name="renew">The renew.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Expires)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew" /> class.
            </summary>
            <param name="expires">The expires.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew.Expires">
            <summary>
            The Expiration of a subscription. If you pass in a null object,
            a default expiry time of 7 days is used.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.Renew)">
            <summary>
            Copies the specified renew.
            </summary>
            <param name="renew">The renew.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Renew.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult">
            <summary>
            RenewResult contains the Message response containing the expiration information of a subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Expires)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult" /> class.
            </summary>
            <param name="expires">The expires.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Expires,Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult" /> class.
            </summary>
            <param name="expires">The expires.</param>
            <param name="subscription">The subscription.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.Expires">
            <summary>
            The Expiration of a Subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.Subscription">
            <summary>
            Gets or sets the subscription.
            </summary>
            <value>
            The subscription.
            </value>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult)">
            <summary>
            Copies the specified result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe">
            <summary>
            Subscribe contains information to create a subscription
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe" /> class.
            </summary>
            /// <param name="clientAppName">The name of the client application</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe" /> class.
            </summary>
            <param name="delivery">The delivery.</param>
            <param name="endTo">The end to.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery,System.ServiceModel.EndpointAddress,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe" /> class.
            </summary>
            <param name="delivery">The delivery.</param>
            <param name="endTo">The end to.</param>
            <param name="clientAppName">The name of the client application</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe" /> class.
            </summary>
            <param name="subscribe">The subscribe.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.EndpointSerializable">
            <summary>
            Specifies where to send a SubscriptionEnd message if the subscription is terminated unexpectedly. Not implemented.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.Delivery">
            <summary>
            The Delivery mode of a Message
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.Expires">
            <summary>
            The expiration of a subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.Filter">
            <summary>
            The Filtering of a Subscription topic.
            </summary>
            <remarks>Not implemented in OIB 1.1. Reserved for future use.</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.FilterDialect">
            <summary>
            The filtering dialect. For example XPathDialect.
            </summary>
            <remarks>Not implemented in OIB 1.1. Reserved for future use.</remarks>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.EndTo">
            <summary>
            Specifies where to send a SubscriptionEnd message if the subscription is terminated unexpectedly. Not implemented.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.ClientAppName">
            <summary>
            The name of the client application. 
            Use this to specify a human readable application name. The application name can be seen in Subscription Administration Studio Plugin.
            Example: Process.GetCurrentProcess().ProcessName
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe)">
            <summary>
            Copies the specified subscribe token.
            </summary>
            <param name="subscribe">The subscribe token.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult">
            <summary>
            SubscribeResult contains the data for that results in creating a new subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager,Asm.As.Oib.WS.Eventing.Contracts.Data.Expires,System.Boolean,Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult" /> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="expires">The expires.</param>
            <param name="bAlreadyExists">if set to <c>true</c> [b already exists].</param>
            <param name="delivery">The delivery.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionManager,Asm.As.Oib.WS.Eventing.Contracts.Data.Expires,System.Boolean,Asm.As.Oib.WS.Eventing.Contracts.Data.Delivery,Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult" /> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="expires">The expires.</param>
            <param name="bAlreadyExists">if set to <c>true</c> [b already exists].</param>
            <param name="delivery">The delivery.</param>
            <param name="subscription">The subscription.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.SubscriptionManager">
            <summary>
            Details about the Subscription for managing it later.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.Expires">
            <summary>
            The expiration of the subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.AlreadyExists">
            <summary>
            Already Exists Flag. True is the Subscription was previously created, False if the topic/endpoint requested DNE and was
            created.
            In the Subscription Already Exists, it will return the existing Id (not create another subscription). Under normal
            conditions, this should return
            False.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.Delivery">
            <summary>
            The Delivery mode of a Message
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.Subscription">
            <summary>
            Gets or sets the subscription.
            </summary>
            <value>
            The subscription.
            </value>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult)">
            <summary>
            Copies the specified result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe">
            <summary>
            Unsubscribe contains information about unsubscribing from WSEventing events.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe" /> class.
            </summary>
            <param name="unsubscribe">The unsubscribe.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe.Copy(Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe)">
            <summary>
            Copies the specified unsubscribe token.
            </summary>
            <param name="unsubscribe">The unsubscribe token.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveEventSourceRequest">
            <summary>
            Service Request for removing of an EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveEventSourceRequest.SenderIdentifier">
            <summary>
            EventSource string identifier
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveEventSourceRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveEventSourceResponse">
            <summary>
            Service Response from removing of an EventSource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveEventSourceResponse.EventSourceWasFoundAndRemoved">
            <summary>
            True if removing was successful
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveEventSourceResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.BatchSendRequest">
            <summary>
            BatchSendRequest message
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.BatchSendRequest.SubscriptionTopic">
            <summary>
            Gets or sets the subscription topic.
            </summary>
            <value>
            The subscription topic.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.BatchSendRequest.Messages">
            <summary>
            A List of (ordered) Messages to be delivered to an endpoint.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.BatchSendResponse">
            <summary>
            BatchSendResponse message
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest">
            <summary>
            WS-Eventing RenewSecondaryRequest request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest" /> class.
            </summary>
            <param name="subscription">The subscription.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest.Subscription">
            <summary>
            The Subscription that was renewed
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryResponse">
            <summary>
            WS-Eventing RenewSecondaryResponse message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryResponse" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryResponse"/> class.
            </summary>
            <param name="renewResponse">The renew response.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest">
            <summary>
            WS-Eventing SubscribeSecondaryRequest request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription,Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest" /> class.
            </summary>
            <param name="subscription">The Subscription .</param>
            <param name="subscribeRequest">The subscribe request.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest.Subscription">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryResponse">
            <summary>
            WS-Eventing SubscribeSecondaryResponse message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryResponse" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryResponse"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest">
            <summary>
            WS-Eventing SynchronizeSubscriptions request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest"/> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest.#ctor(System.Collections.Generic.IEnumerable{Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue},System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest" /> class.
            </summary>
            <param name="synchronizeSubscriptions">The ReceiverQueue collection to synchronize.</param>
            <param name="computerName">Originating computer name</param>
            <param name="immediateCall">
            If true, this means that the call was done immediately (either by secondary to push a dead queue state to primary or
            by primary to synchronize a dead or active state to secondaries).
            I this is false, it means that a previous call failed and this call was now issued by a timer.
            </param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest.Body">
            <summary>
            Gets or sets the SynchronizeSubscriptions.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest.OriginatingComputerName">
            <summary>
            Gets or sets the SynchronizeSubscriptions.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest.ImmediateCall">
            <summary>
            If true, this means that the call was done immediately (either by secondary to push a dead queue state to primary or
            by primary to synchronize a dead or active state to secondaries).
            I this is false, it means that a previous call failed and this call was now issued by a timer.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest.Settings">
            <summary>
            The current SubscriptionSettings (filled in case this request is filled on a primary service)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse">
            <summary>
            WS-Eventing SynchronizeSubscriptions response message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest"/> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse.#ctor(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue}},Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse" /> class.
            </summary>
            <param name="synchronizeResult">The synchronization result.</param>
            <param name="settings">Settings (only filled for startup synchronization of secondary node)</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse.SynchronizeResult">
            <summary>
            The result of synchronization.
            This is an endpoint/SynchronizeResultType dictionary. For possible result's values see <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Data.SynchronizeResultType"/> enum.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse.Settings">
            <summary>
            The current SubscriptionSettings (filled in case this response is filled on a primary service)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse.CoreProcessId">
            <summary>
            The process Id of the OIB Core service. Can be used to detect if core was restarted.
            In that case, the secondary node needs to resynchronize the Subscriptions.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest">
            <summary>
            WS-Eventing UnsubscribeSecondaryRequest message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest" /> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest" /> class.
            </summary>
            <param name="id">The id.</param>
            <param name="unsubscribe">The unsubscribe.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,System.String,System.ServiceModel.EndpointAddressAugust2004)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="subscriptionTopic">The subscription topic.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest"/> class.
            </summary>
            <param name="unsubscribeRequest">The unsubscribe request.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryResponse">
            <summary>
            WS-Eventing UnsubscribeSecondaryResponse request message class
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeRequest">
            <summary>
            WS-Eventing UtcTime request message class
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeResponse">
            <summary>
            WS-Eventing UtcTime response message class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeResponse.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeResponse" /> class.
            </summary>
            <param name="utcTime">The Utc Time.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeResponse.UtcTime">
            <summary>
            The UtcTime
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeOneWayRequest">
            <summary>
            This message will create a Resume request, which can be send with the fire and forget method.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseOneWayRequest">
            <summary>
            This message will create a Pause request, which can be send with the fire and forget method.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest">
            <summary>
            WS-Eventing Resume request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Resume)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest" /> class.
            </summary>
            <param name="renew">The renew.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest.Body">
            <summary>
            Information containing the Resume information.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeResponse">
            <summary>
            WS-Eventing Resume response message class.
            </summary>
            <remarks>
            This is just a standard response message with no additional data. If an error occurs, then the service method will
            through an exception (fault).
            Otherwise, the service method will return this standard response message.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.ResumeResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeResponse" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeResponse.Body">
            <summary>
            The Information containing the Resume result. Currently no additional information.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseResponse">
            <summary>
            WS-Eventing Pause response message class
            </summary>
            <remarks>
            This is just a standard response message with no additional data. If an error occurs, then the service method will
            through an exception (fault).
            Otherwise, the service method will return this standard response message.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.PauseResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseResponse" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseResponse.Body">
            <summary>
            The Information containing the Pause result. Currently no additional information.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest">
            <summary>
            WS-Eventing Pause request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Pause)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest" /> class.
            </summary>
            <param name="pause">The pause.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest.Body">
            <summary>
            Information containing the Pause information.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase">
            <summary>
            The base class for the event description.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase" /> class.
            </summary>
            <param name="subscriptionTopic">The subscription topic.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase.SubscriptionTopic">
            <summary>
            The Subscription Topic associated with event data. The subscription topic is the main structure for publishing and
            receiving event data.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase.MessageId">
            <summary>
            An id string that can be used for debugging and identification purposes.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.EventContractBase.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.FireSubscriptionResponse">
            <summary>
            WS-Eventing FireSubscription response message class. This class currently contains no data.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest">
            <summary>
            WS-Eventing GetStatus request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Overloaded constructor
            </summary>
            <param name="id">The Unique Identifier associated with a subscription.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus)">
            <summary>
            Overloaded constructor
            </summary>
            <param name="id">The Unique Identifier</param>
            <param name="status">The Status of the Subscription.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest.Identifier">
            <summary>
            Special Message Header that contains the Unique Identifier associated with a Subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest.Body">
            <summary>
            The Main Message Body containing the Status information to be queried for.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusResponse">
            <summary>
            WS-Eventing GetStatus response message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatusResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusResponse" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusResponse.Body">
            <summary>
            The Message Body containing the Status Result
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewOneWayRequest">
            <summary>
            This message will create a renew request, which can be send with the fire and forget method.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest">
            <summary>
            WS-Eventing Renew request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.Renew)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest" /> class.
            </summary>
            <param name="id">The id.</param>
            <param name="renew">The renew.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.Renew,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="renew">The renew.</param>
            <param name="subscriptionTopic">The subscription topic.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest.Identifier">
            <summary>
            Special Message Header that contains the Unique Identifier associated with a Subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest.SubscriptionTopic">
            <summary>
            The Subscription Topic associated with event data. The subscription topic is the main structure for publishing and
            receiving event data.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest.Body">
            <summary>
            Information containing the Renew status. Currently, contains the Expiration (DateTime)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse">
            <summary>
            WS-Eventing Renew response message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.RenewResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse.Body">
            <summary>
            The Information containing the Renew result. Currently the Expiration (DateTime)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeOneWayRequest">
            <summary>
            This message will create a subscriptions request, which can be send with the fire and forget methodic.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest">
            <summary>
            WS-Eventing Subscribe request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest" /> class.
            </summary>
            <param name="subscribe">The subscribe.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest.Subscribe">
            <summary>
            Gets or sets the subscribe object.
            </summary>
            <value>The subscribe object.</value>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse">
            <summary>
            WS-Eventing Subscribe response message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscribeResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse.Body">
            <summary>
            The Message Body containing the Subscribe Response data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeOneWayRequest">
            <summary>
            This message will create a unsubscribe request, which can be send with the fire and forget methodic.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest">
            <summary>
            WS-Eventing Unsubscribe request message class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest" /> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.Unsubscribe)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest" /> class.
            </summary>
            <param name="id">The id.</param>
            <param name="unsubcribe">The unsubscribe.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,System.String,System.ServiceModel.EndpointAddressAugust2004)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest" /> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="subscriptionTopic">The subscription topic.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.Identifier">
            <summary>
            Special Message Header that contains the Unique Identifier associated with a Subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.SubscriptionTopic">
            <summary>
            The Subscription Topic associated with event data. The subscription topic is the main structure for publishing and
            receiving event data.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.Endpoint">
            <summary>
            The EndpointAddress that the subscriber is listening at.  Use this when the Identifier is unknown.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.Body">
            <summary>
            The Message Body containing the Unsubscribe data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeResponse">
            <summary>
            WS-Eventing Unsubscribe response message class. This class currently contains no data.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeResponse.SubscriptionFoundAndDeleted">
            <summary>
            The Message Body containing the Unsubscribe data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IBatchRequestResponse">
            <summary>
            Similar to the IOneWay Service contract except for one distinct difference. The interface expects a response back from
            the client callback
            for exceptions, communication failures, etc. It is primarily used for guaranteed delivery functions.
            </summary>
            <exclude/>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IBatchRequestResponse.RequestResponse(Asm.As.Oib.WS.Eventing.Contracts.Messages.BatchSendRequest)">
            <summary>
            Method for passing in a generic Message to the callback endpoint. It will block while processing to ensure the method
            was successfully returned.
            </summary>
            <param name="message">Generic Message that can represent any derived Message contract instance</param>
            <returns>BatchSendResponse</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper">
            <summary>
            Service Contract for Storing and Retrieving Endpoints for
            secure MSMQ Communication
            </summary>
            <exclude/>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper.AddEventSource(Asm.As.Oib.WS.Eventing.Contracts.Data.AddEventSourceRequest)">
            <summary>
            Add an EventSource to Database
            </summary>
            <param name="request">AddEventSourceRequest</param>
            <returns>AddEventSourceResponse</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper.GetEventSources(Asm.As.Oib.WS.Eventing.Contracts.Data.GetEventSourcesRequest)">
            <summary>
            Get EventSources from database with criteria specified in the request
            </summary>
            <param name="request">GetEventSourcesRequest</param>
            <returns>GetEventSourcesResponse</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper.GetNotificationEndpoints(Asm.As.Oib.WS.Eventing.Contracts.Data.GetNotificationEndpointsRequest)">
            <summary>
            Get all NotifyEndpoints from database
            </summary>
            <param name="request">GetNotificationEndpointsRequest</param>
            <returns>GetNotificationEndpointsResponse</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper.GetLeastUsedEndpoint(Asm.As.Oib.WS.Eventing.Contracts.Data.GetLeastUsedEndpointRequest)">
            <summary>
            Get the least used NotifyEndpoints from database.
            It is the one that has the least number of EventSources
            registered with it.
            </summary>
            <param name="request">GetLeastUsedEndpointRequest</param>
            <returns>GetLeastUsedEndpointResponse</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper.RemoveEventSource(Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveEventSourceRequest)">
            <summary>
            Delete an EventSource from Database
            </summary>
            <param name="request">RemoveEventSourceRequest</param>
            <returns>RemoveEventSourceResponse</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper.RemoveNotificationEndpoint(Asm.As.Oib.WS.Eventing.Contracts.Data.RemoveNotificationEndpointRequest)">
            <summary>
            Delete a NotifyEndpoint from Database if no EventSource is using it
            </summary>
            <param name="request">RemoveNotificationEndpointRequest</param>
            <returns>RemoveNotificationEndpointResponse</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEndpointKeeper.UpdateEventSource(Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateEventSourceRequest)">
            <summary>
            Updates an EventSource record in database
            </summary>
            <param name="request">UpdateEventSourceRequest</param>
            <returns>UpdateEventSourceResponse</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingRouter">
            <summary>
            Service Contract for the EventingRouter Service
            </summary>
            <exclude/>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingRouter.RegisterSecondaryService(Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode)">
            <summary>
            Registers the secondary service by primary WS.Eventing.
            </summary>
            <param name="request">The SecondaryNode description.</param>
            <returns>SecondaryRegistrationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingRouter.UnregisterSecondaryService(Asm.As.Oib.WS.Eventing.Contracts.Data.SecondaryNode)">
            <summary>
            Unregisters the secondary service by primary WS.Eventing.
            </summary>
            <param name="request">The SecondaryNode description.</param>
            <returns>SecondaryRegistrationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingRouter.GetSecondaryServices(Asm.As.Oib.WS.Eventing.Contracts.Data.GetSecondaryServicesRequest)">
            <summary>
            Gets the secondary services collection.
            </summary>
            <param name="request">The request, optionally only request active or inactive nodes.</param>
            <returns>A list of SecondaryNodes including their status</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingSynchronization">
            <summary>
            Service Contract for the EventingSynchronization Service
            </summary>
            <exclude/>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingSynchronization.SynchronizeSubscriptions(Asm.As.Oib.WS.Eventing.Contracts.Messages.SynchronizeSubscriptionsRequest)">
            <summary>
            The method implements two scenarios:
            1. Synchronizes from Primary to all Secondaries two subscriptions states: "isDead == true" and "isDead == false" as well.
            2. Synchronizes from Secondary to Primary the subscriptions with "isDead == true" state only,
            the state "isDead == false" get out itself by timer on Primary but not on Secondary.
            </summary>
            <param name="synchronizeSubscriptionsRequest">The synchronize subscription state request.</param>
            <returns>SynchronizeSubscriptionsResponse</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingSynchronization.ReportQueueStatisticToPrimary(Asm.As.Oib.WS.Eventing.Contracts.Data.QueueStatisticReport)">
            <summary>
            A Secondary reports to Primary the queue's statistic of all locally owned queues. The queue is bound to subscription by endpoint. 
            </summary>
            <param name="queueStatisticReport">The queue statistic report.</param>
            <returns>QueueStatisticResult</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IMsmqPing">
            <summary>
            Service Contract for the Subscription Manager Service with only one way messages for support of MSMQ binding.
            </summary>
            <exclude/>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IMsmqPing.Ping">
            <summary>
            Ping the MSMQ service to ensure it is running
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration">
            <summary>
            The Eventing Administration Service contract exposes methods for managing queues used with WS-Eventing
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.CheckAlive">
            <summary>
            Ping method to check if Service is alive
            </summary>
            <returns>Process Id of the Service Process</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.GetAllQueues">
            <summary>
            Get all the Queues in the system
            </summary>
            <returns>
            Dictionary of Queues with the key as a unique Endpoint and the Receiver queue which contains a list of queues
            associated with the Endpoint
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.GetLiveQueues">
            <summary>
            Get Live (Active) queues
            </summary>
            <returns>
            Dictionary of Queues with the key as a unique Endpoint and the Receiver queue which contains a list of queues
            associated with the Endpoint
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.GetReceiverQueue(System.String)">
            <summary>
            Get a specific ReceiverQueue for an endpoint.
            </summary>
            <param name="strEndpoint">The STR endpoint.</param>
            <returns>ReceiverQueue</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.PauseQueue(Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue)">
            <summary>
            Pause a particular queue. This will trigger the system to stop sending messages until a Resume is called.
            </summary>
            <param name="queue">The queue.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.RemoveMessage(Asm.As.Oib.WS.Eventing.Contracts.Data.QueuedMessage)">
            <summary>
            Not to be used. Was initially designed to remove a particular message from a queue. 
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.RestartQueue(Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue)">
            <summary>
            Restart a particular queue. This will trigger the system to start sending messages again to the associated endpoint.
            </summary>
            <param name="queue">The queue.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IEventingAdministration.ResumeQueue(Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue)">
            <summary>
            Resume a particular queue (from a previous Pause). This will trigger the system to start sending messages again to the
            associated endpoint.
            </summary>
            <param name="queue">The queue.</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.INotificationManager">
            <summary>
            The Service Contact is the main interface for publishing data to consumers.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.INotificationManager.CancelSubscription(System.Uri,System.String,System.String)">
            <summary>
            Operation NOT implemented... Explicit cancellation of a subscription. This means, any published data will not be sent
            to the subscriber's endpoint any more.
            </summary>
            <remarks>This method is currently not implemented and is reserved for future use.</remarks>
            <param name="code">Not documented. Reserved for future use.</param>
            <param name="reason">Not documented. Reserved for future use.</param>
            <param name="culturename">Not documented. Reserved for future use.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.INotificationManager.FireSubscription(System.ServiceModel.Channels.Message)">
            <summary>
            This is the main method for publishing data to event subscribers. It takes a Message contract with a SubscriptionTopic
            header.
            The Eventing service then sends the data to all the subscription (subscriber) endpoints.
            </summary>
            <param name="message">The Message to be sent</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.INotificationManagerSynchronous">
            <summary>
            The Service Contact is the interface for publishing data to consumers. It supplies a synchronous
            Fire subscription if the client wants strict ordering of messages or handles exceptions.
            The default INotificationManager has a FireSubscription() with [IsOneWay = true]. This implies that the method is
            called
            and immediately returned. The problem with this is you can call this method and not ensure the messages will be sent in
            the
            exact order this method was called since it is up to the CPU slicing of threads when the data (Message) is finally
            stored to the database.
            </summary>
            <remarks>
            Use INotificationManagerSynchronous when you need exact ordering (FIFO) of Messages, otherwise use the more scalable
            version
            INotificationManager for send messages that have no strict order. In general using INotificationManager will have the
            correct order except
            for high speed publishing where the threading cycles maybe provide unreliable ordering.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.INotificationManagerSynchronous.FireSubscription(System.ServiceModel.Channels.Message)">
            <summary>
            This is the main method for publishing data to event subscribers. It takes a Message contract with a SubscriptionTopic
            header.
            The Eventing service then sends the data to all the subscription (subscriber) endpoints.
            </summary>
            <param name="message">Message containing content to send to subscribers</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IOneWay">
            <summary>
            Definition of a One Way call back interface. When working with Messages, this is the interface template for calling an
            unknown endpoint with a Message instance.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IOneWay.OneWay(System.ServiceModel.Channels.Message)">
            <summary>
            Generic (one way) Message callback method. As long as the client callback implements this signiture, a non return
            message of any time can be sent to it's endpoint.
            </summary>
            <param name="message">Generic Message that can represent any derived Message contract instance</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.IRequestResponse">
            <summary>
            Similar to the IOneWay Service contract except for one distinct difference. The interface expects a response back from
            the client callback
            for exceptions, communication failures, etc. It is primarily used for guaranteed delivery functions.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.IRequestResponse.RequestResponse(System.ServiceModel.Channels.Message)">
            <summary>
            Method for passing in a generic Message to the callback endpoint. It will block while processing to ensure the method
            was successfully returned.
            </summary>
            <param name="message">Generic Message that can represent any derived Message contract instance</param>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager">
            <summary>
            Service Contract for the Subscription Manager Service
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.CreateSubscriptionTopic(System.String)">
            <summary>
            Create an explicit topic for later use for Eventing
            </summary>
            <param name="strTopic">The unique named topic.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.GetAvailableSubscriptionTopics">
            <summary>
            Get all Subscription topics in the system
            </summary>
            <returns>List of named topics</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.GetServiceUtcTime(Asm.As.Oib.WS.Eventing.Contracts.Messages.UtcTimeRequest)">
            <summary>
            Get the Service UTC Time for clients to create a new subscription
            </summary>
            <param name="request">UTC date/time</param>
            <returns>Message Response containing the UTC Time information.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.GetStatus(Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest)">
            <summary>
            Get the Current status of a subscription. currently, the status is only the expiration date/time of the subscription.
            </summary>
            <remarks> Message based method call.</remarks>
            <param name="request">Request Message containing the Subscription Id.</param>
            <returns>GetStatusResponse message contract</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.GetSubscriptions(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor)">
            <summary>
            Get a list of Subscriptions based upon search criteria.
            </summary>
            <param name="searchCriteria">Search criteria based upon Id, Name , Topic, etc.</param>
            <returns> list of Subscriptions</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.Pause(Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest)">
            <summary>
            Pause a particular Subscription for an indefinite period of time (until a Resume is called).
            </summary>
            <param name="request">Message containing the Subscription Id with the new expiration date/time</param>
            <returns>Message Response containing the Pause information.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.Renew(Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest)">
            <summary>
            Renew a particular Subscription for a longer period of time (expiration).
            </summary>
            <param name="request">Message containing the Subscription Id with the new expiration date/time</param>
            <returns>Message Response containing the new Expiration.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.Resume(Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest)">
            <summary>
            Resume a particular Subscription from a previous Pause call.
            </summary>
            <param name="request">Message containing the Subscription Id with the new expiration date/time</param>
            <returns>Message Response containing the Pause information.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.Subscribe(Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest)">
            <summary>
            Message Based subscription request/response.
            </summary>
            <param name="request">SubscribeRequest message contract data</param>
            <returns>SubscribeResponse message contract</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.Unsubscribe(Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest)">
            <summary>
            Unsubscribe to a particular subscription.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id associated with the Unsubscribe request</param>
            <returns>Response Message. Currently an empty Message and reserved for future use.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.UpdateSubscription(Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest)">
            <summary>
            Updates the subscription.
            You can update the subscription's endpoint, xPath filter or Delivery Mode.
            You must pass in the subscription's GUID string (mandatory) and the updated endpoint and/or xPath filter and/or
            Delivery Mode.
            This method only works for PushWithAck or PushWithAckUnreliable subscriptions.
            </summary>
            <param name="request">The request containing the details about the update to be done.</param>
            <returns>The response containing the updated subscription</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.ReadSubscriptionSettings">
            <summary>
            Reads the subscription settings.
            This is the global server's settings, they affect all subscriptions
            </summary>
            <returns>The response contains SubscriptionSettingsRequestResult</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManager.UpdateSubscriptionSettings(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsRequestResult)">
            <summary>
            Updates the subscription settings.
            This is the global server's settings, they affect all subscriptions
            </summary>
            <param name="subscriptionSettings">The subscription settings.</param>
            <returns>True if update is successful, otherwise false.</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerOneWay">
            <summary>
            Service Contract for the Subscription Manager Service with only one way messages for support of MSMQ binding.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerOneWay.CreateSubscriptionTopic(System.String)">
            <summary>
            Create an explicit topic for later use for Eventing
            </summary>
            <param name="strTopic">The unique named topic.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerOneWay.Pause(Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseOneWayRequest)">
            <summary>
            Pause a particular Subscription for an indefinite period of time.
            </summary>
            <param name="request">Message containing the Subscription Id</param>
            <returns>Message Response containing the new Expiration.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerOneWay.Renew(Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewOneWayRequest)">
            <summary>
            Renew a particular Subscription for a longer period of time (expiration).
            </summary>
            <param name="request">Message containing the Subscription Id with the new expiration date/time</param>
            <returns>Message Response containing the new Expiration.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerOneWay.Resume(Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeOneWayRequest)">
            <summary>
            Resume a particular Subscription from a previous pause call
            </summary>
            <param name="request">Message containing the Subscription Id </param>
            <returns>Message Response containing the Resume information.</returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerOneWay.Subscribe(Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeOneWayRequest)">
            <summary>
            Message Based subscription request/response.
            </summary>
            <param name="request">SubscribeOneWayRequest Message contract data</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerOneWay.Unsubscribe(Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeOneWayRequest)">
            <summary>
            Unsubscribe to a particular subscription.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id associated with the Unsubscribe request</param>
            <returns>Response Message. Currently an empty Message and reserved for future use.</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary">
            <summary>
            The service Contract for the ISubscriptionManagerSecondary Service
            Is only implemented on secondary ws eventing services
            </summary>
            <exclude/>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.CreateSubscriptionTopic(System.String)">
            <summary>
            Create an explicit topic for later use for Eventing
            </summary>
            <param name="strTopic">The unique named topic.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.Pause(Asm.As.Oib.WS.Eventing.Contracts.Data.Pause)">
            <summary>
            Pause a particular Subscription for an indefinite period of time (until a Resume is called).
            </summary>
            <param name="request">Message containing the Subscription Id with the new expiration date/time</param>
            <returns>
            Message Response containing the Pause information.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.Renew(Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewSecondaryRequest)">
            <summary>
            Renew a particular Subscription for a longer period of time (expiration).
            </summary>
            <param name="request">Message containing the Subscription Id with the new expiration date/time</param>
            <returns>
            Message Response containing the new Expiration.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.RestartQueue(Asm.As.Oib.WS.Eventing.Contracts.Data.ReceiverQueue)">
            <summary>
            Restart an inactive Queue.
            </summary>
            <param name="queue">ReceiverQueue that should be restarted</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.Resume(Asm.As.Oib.WS.Eventing.Contracts.Data.Resume)">
            <summary>
            Resume a particular Subscription from a previous Pause call.
            </summary>
            <param name="request">Message containing the Subscription Id with the new expiration date/time</param>
            <returns>
            Message Response containing the Pause information.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.Unsubscribe(Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeSecondaryRequest)">
            <summary>
            Unsubscribe from a particular subscription.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id associated with the Unsubscribe request</param>
            <returns>
            Response Message. Currently an empty Message and reserved for future use.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.UpdateSubscription(Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionSecondaryRequest)">
            <summary>
            Updates the subscription.
            You can update the subscription's endpoint, xPath filter or Delivery Mode.
            You must pass in the subscription's GUID string (mandatory) and the updated endpoint and/or xPath filter and/or
            Delivery Mode.
            This method only works for PushWithAck or PushWithAckUnreliable subscriptions.
            </summary>
            <param name="request">The request containing the details about the update to be done.</param>
            <returns>
            The response containing the updated subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.UpdateSubscriptionSettings(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionSettingsSecondary)">
            <summary>
            Updates the subscription settings.
            This is the global server's settings, they affect all subscriptions
            </summary>
            <param name="subscriptionSettings">The subscription settings.</param>
            <returns>
            True if update is successful, otherwise false.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Contracts.Service.ISubscriptionManagerSecondary.SubscribeOnSecondary(Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeSecondaryRequest)">
            <summary>
            Subscribes on the secondary service.
            This method is relevant for multi Eventing Services configuration only.
            </summary>
            <param name="request">The request.</param>
            <returns>SubscribeTransactionalResponse</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.SupportedDeliveryMode">
            <summary>
            Data Contract that provides details on the Supported delivery modes.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Faults.SupportedDeliveryMode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Faults.SupportedDeliveryMode" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Faults.SupportedDeliveryMode.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Faults.SupportedDeliveryMode" /> class.
            </summary>
            <param name="modes">The modes.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Faults.SupportedDeliveryMode.Modes">
            <summary>
            List of possible modes (push, PushWithAck, etc)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Faults.SupportedDeliveryMode.IsSupported(System.String,System.Boolean)">
            <summary>
            Whether a particular mode is supported.
            </summary>
            <param name="mode">The named mode.</param>
            <param name="throwex">Throw an exception if mode isn't supported.</param>
            <returns>True if mode is supported.</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect">
            <summary>
            Class that manages the supported dialects.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect" /> class.
            </summary>
            <param name="dialects">The dialects.</param>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect" /> class.
            </summary>
            <param name="dialects">The dialects.</param>
        </member>
        <member name="P:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect.Dialects">
            <summary>
            The supported dialects used for filtering of subscriptions.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.WS.Eventing.Faults.SupportedDialect.IsSupported(System.String,System.Boolean)">
            <summary>
            Check if the dialect is supported or not. For instance, XPath filtering...
            </summary>
            <param name="dialect">The dialect to check.</param>
            <param name="throwex">Throw an exception if not supported.</param>
            <returns>True if supported, false otherwise</returns>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.DeliveryModeRequestedUnvailable">
            <summary>
            Subscribe fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.DeliveryModeRequestedUnvailable.SubCode">
            <summary>
            This the fault sub code for the incorrect delivery request
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.DeliveryModeRequestedUnvailable.Reason">
            <summary>
            This the  fault reason code for the incorrect delivery request
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.EventSourceUnableToProcess">
            <summary>
            Subscribe fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.EventSourceUnableToProcess.SubCode">
            <summary>
            This the fault sub code for the incorrect source descriptor
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.FilteringNotSupported">
            <summary>
            Subscribe fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.FilteringNotSupported.SubCode">
            <summary>
            This is the fault sub code for an incorrect filtering request.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.FilteringNotSupported.Reason">
            <summary>
            This is the fault reason code for an incorrect filtering request.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.FilteringRequestedUnavailable">
            <summary>
            Subscribe fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.FilteringRequestedUnavailable.SubCode">
            <summary>
            This the fault sub code for the incorrect filtering request
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.FilteringRequestedUnavailable.Reason">
            <summary>
            This the fault reason code for the incorrect filtering request
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.InvalidExpirationType">
            <summary>
            Subscribe fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.InvalidExpirationType.SubCode">
            <summary>
            This the fault sub code for the incorrect expiration request
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.InvalidExpirationType.Reason">
            <summary>
            This the fault reason code for the incorrect expiration request
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.UnableToRenew">
            <summary>
            Renew fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.UnableToRenew.SubCode">
            <summary>
            This is the fault sub code for a not performable un-subscribe request.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.UnsupportedExpirationType">
            <summary>
            Subscribe fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.UnsupportedExpirationType.SubCode">
            <summary>
            This the fault sub code for the incorrect expiration request
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.UnsupportedExpirationType.Reason">
            <summary>
            This the  fault reason code for the incorrect expiration request
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Faults.Types.UnsupportedEndpointAndBindingType">
            <summary>
            Subscribe fault
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.UnsupportedEndpointAndBindingType.SubCode">
            <summary>
            This the fault sub code for the incorrect expiration request
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Faults.Types.UnsupportedEndpointAndBindingType.Reason">
            <summary>
            This the  fault reason code for the incorrect expiration request
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Types.SubscriptionEndCode">
            <summary>
            Reason code for ending a subscription
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Types.SubscriptionEndCode.DeliveryFailure">
            <summary>
            DeliveryFailure
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Types.SubscriptionEndCode.SourceShuttingDown">
            <summary>
            SourceShuttingDown
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Types.SubscriptionEndCode.SourceCanceling">
            <summary>
            SourceCanceling
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Types.SubscriptionEndCode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Globals.WSEventing">
            <summary>
            Helper class for defining all names space string s for the Eventing interfaces.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.NamespaceUri">
            <summary>
            Name space for eventing
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.SubscribeAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.SubscribeOnSecondaryAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.SubscribeResponseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.UnsubscribeAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.UnsubscribeResponseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.RenewAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.RenewResponseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.GetStatusAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.GetStatusResponseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.SubscriptionEndAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PushDeliveryMode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PushWithAckDeliveryMode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PushWithAckBatchDeliveryMode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PushWithAckBatchUnreliableDeliveryMode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PushWithAckUnreliableDeliveryMode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.WrappedDeliveryMode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PushReliableDeliveryMode">
            <summary>
            Push (no ack) but with a Reliable endpoint
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.XPathDialect">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.DeliveryFailure">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.SourceShuttingDown">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.SourceCanceling">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PauseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.PauseResponseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ResumeAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.UtcTimeAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ResumeResponseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.UtcTimeResponseAction">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Code">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Delivery">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Dialect">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.EndTo">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Eventing">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.EventSource">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Expires">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Filter">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.GetStatus">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.GetStatusBody">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.GetStatusResponse">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Identifier">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Mode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.NotifyTo">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Reason">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Renew">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.RenewResponse">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Status">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Subscribe">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SubscribeOnSecondary">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SubscriptionEnd">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SubscriptionManager">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SubscribeResponse">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Unsubscribe">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.UnsubscribeBody">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.UnsubscribeResponse">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SupportedDeliveryMode">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SupportedDialect">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Subscription">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.EventTopic">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.PauseResponse">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.ResumeResponse">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.UtcTimeResponse">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.UtcTimeResult">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Resume">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.Pause">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.UtcTime">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.BatchSend">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.BatchDataBody">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SynchronizeSubscriptions">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.ElementNames.SynchronizeResult">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="T:Asm.As.Oib.WS.Eventing.Globals.WSEventing.Extension">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.Extension.SubscriptionTopic">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.Extension.MessageId">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.Extension.NamespaceUriData">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.Extension.NamespaceUriMessage">
            <summary>
            WSDL action description
            </summary>
        </member>
        <member name="F:Asm.As.Oib.WS.Eventing.Globals.WSEventing.Extension.NamespaceUriService">
            <summary>
            WSDL action description
            </summary>
        </member>
    </members>
</doc>
