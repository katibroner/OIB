<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASM.AS.OIB.FactoryCalendar.Proxy</name>
    </assembly>
    <members>
        <member name="T:Asm.As.Oib.FactoryCalendar.Common.Helper.DateTimeHelper">
            <summary>
            Helper class that contains functions related to DateTime
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.DateTimeHelper.NormalizeDateTime(System.DateTime)">
            <summary>
            Removes seconds and milliseconds from the provided DateTime value, because they are not relevant for the FactoryCalendar
            </summary>
            <param name="value">Original DateTime value</param>
            <returns>DateTime with second = 0 and millisecond = 0</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.DateTimeHelper.NormalizeDate(System.DateTime)">
            <summary>
            Removes milliseconds, seconds and minutes from the provided DateTime value
            This is needed when only the date is relevant (like for AppointmentExceptions)
            </summary>
            <param name="value">Original DateTime value</param>
            <returns>DateTime with minute = 0, second = 0 and millisecond = 0</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.DateTimeHelper.CheckTimesOverlap(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment,Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Checks whether two appointments overlap.
            Takes into account only the time periods of the appointments.
            Does not check whether they are assigned to the same factory layout element.
            </summary>
            <param name="appointment1">First appointment.</param>
            <param name="appointment2">Other appointment.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.DateTimeHelper.CheckTimesOverlap(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Checks whether two time periods overlap.
            </summary>
            <param name="start1">start of the first time period.</param>
            <param name="end1">end of the first time period.</param>
            <param name="start2">start of the second time period.</param>
            <param name="end2">end of the second time period.</param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper">
            <summary>
            Convert Times back and forth between UTC and assigned TimeZone
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper.CurrentTimeZoneInfo">
            <summary>
            CurrentTimeZoneInfo
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper.ConvertTimeFromUtc(System.DateTime)">
            <summary>
            Converts the time from UTC to local time.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <returns>The time as local time.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper.ConvertFromMovedTimeZone(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts from moved time zone. Can be used when a DateTime object needs to be converted from one TimeZone to the current one.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <param name="previousTimeZone">The previous time zone.</param>
            <returns>DateTime converted to current time zone</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the time to UTC.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <param name="timeZoneInfo">Time zone Info</param>
            <returns>The DateTime as UTC time.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper.ConvertTimeToUtc(System.DateTime)">
            <summary>
            Converts the time to UTC.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <returns>The DateTime as UTC time.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the time from UTC using a passed in TimeZoneInfo.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <param name="timeZoneInfo">Time zone Info. If null is passed in, uses the Local TimeZone.</param>
            <returns>The time converted to the passed in TimeZoneInfo</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Helper.TimeZoneHelper.GetTimeZoneFromId(System.String)">
            <summary>
            Gets the time zone from identifier.
            </summary>
            <param name="strId">The string identifier.</param>
            <returns>TimeZoneInfo or null</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator">
            <summary>
            Validates the recurrence settings of an Appointment
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator.ValidateAppointmentRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Validates the appointment recurrence.
            Throws an exception if a value is out of range.
            </summary>
            <param name="appointment">The appointment to check.</param>
            <exception cref="T:System.ArgumentException">
            The appointment data is inconsistent: appointment.Recurring is true but appointment.Recurrence is null.
            or
            The appointment data is incorrect: appointment.Recurring='{appointment.Recurring}' but appointment.Recurrence.RecurrenceStartDate={appointment.Recurrence.RecurrenceStartDate}.
            or
            The appointment data is incorrect: Recurrence.RangeLimitType='RangeEndDate' but appointment.Recurrence.RecurrenceStartDate={appointment.Recurrence.RangeEndDate}.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The appointment data is incorrect: Recurrence.FirstDayOfWeek='{appointment.Recurrence.FirstDayOfWeek}' but needs to be between 0 and 6.
            or
            The appointments recurrence data is incorrect: a negative value is not allowed! (Current value: {recurrence.RangeNumberOfOccurrences})
            or
            The duration of the appointment must be shorter than how frequently it occurs. Shorten the duration, or change the recurrence pattern.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator.ValidateDailyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Validates the daily recurrence settings of an appointment.
            </summary>
            <param name="appointment">The appointment.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The appointments recurrence data is incorrect: a negative value is not allowed! (Current value: {recurrenceSettings.RepeatInterval})</exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator.ValidateWeeklyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Validates the weekly recurrence settings of an appointment.
            </summary>
            <param name="appointment">The appointment.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The appointments recurrence data is incorrect: a negative value is not allowed! (Current value: {recurrenceSettings.RepeatInterval})
            or
            Invalid recurrence data: value must not be {DayOfWeekRecurrence.None}.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator.ValidateMonthlyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Validates the monthly recurrence settings of an appointment.
            </summary>
            <param name="appointment">The appointment.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The appointments recurrence data is incorrect: a negative value is not allowed! (Current value: {recurrenceSettings.RepeatInterval})
            or
            The appointments recurrence data is incorrect: current value is '{recurrenceSettings.RepeatOnDayOfMonth}' but must be between 1 and 31.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator.ValidateYearlyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Validates the yearly recurrence.
            </summary>
            <param name="appointment">The appointment.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The appointments recurrence data is incorrect: current value is '{recurrenceSettings.RepeatOnMonth}' but must be between 1 and 12.
            or
            The appointments recurrence data is incorrect: current value is '{recurrenceSettings.RepeatOnDayOfMonth}' but must be between 1 and 31.
            or
            The appointments recurrence data is incorrect: month is '{recurrenceSettings.RepeatOnMonth}' and day is '{recurrenceSettings.RepeatOnDayOfMonth}'
            </exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator.IsDurationBiggerThanRecurrencePattern(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Determines whether the duration of the appointment is bigger than the specified recurrence pattern.
            </summary>
            <param name="appointment">The appointment.</param>
            <returns>
              <c>true</c> if duration of the appointment is bigger than recurrence the pattern otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Common.Validation.RecurrenceValidator.GetMinimumDurationBetweenSelectedDays(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.DayOfWeekRecurrence)">
            <summary>
            Gets the amount of unselected days between the selected days.
            eDayOfWeekRecurrence.Monday | eDayOfWeekRecurrence.Wednesday will return 1 (Tuesday)
            eDayOfWeekRecurrence.Monday | eDayOfWeekRecurrence.Thursday will return 2 (Tuesday, Wednesday)
            eDayOfWeekRecurrence.Monday | eDayOfWeekRecurrence.Saturday will return 1 (Sunday)
            </summary>
            <param name="days">selected weekdays</param>
            <returns>amount of unselected days between the selected days</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase">
            <summary>
            Base class for persistable objects
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.IsDeleted">
            <summary>
            Check whether this object is deleted and you are working with an Orphaned object
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.Backup">
            <summary>
            Backup the state of the internal data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.CancelChanges">
            <summary>
            Cancels the Changes of the object in the database.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.Delete">
            <summary>
            Deletes the Object and Saves to the Database
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.Delete(System.Boolean)">
            <summary>
            Deletes the Object and waits for SaveChanges() to be called
            </summary>
            <param name="bPendingDelete">
            If true, waits for SaveChanges() to be called before the delete is executed. If false,
            SaveChanges() is called internally.
            </param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.Restore">
            <summary>
            Restore any changes that were made to the original version (Rollback)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.SaveChanges">
            <summary>
            Save the Changes of the object data to the database.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.OnBackup">
            <summary>
            Called when [backup].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.OnRestore">
            <summary>
            Called when [restore].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.OnDeleteObject">
            <summary>
            Called when [delete object].
            </summary>  
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ObjectUpdateBase.OnUpdateObject">
            <summary>
            Called when [update object].
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ServiceUnreachableEvent">
            <summary>
            Will be fired whenever the service cannot be reached
            </summary>
            <param name="strServiceEndpoint">Service Endpoint</param>
            <param name="strComment">Comment</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ServiceReconnectEvent">
            <summary>
            Will be fired whenever the service has reestablished connection and can be reached again
            </summary>
            <param name="strServiceEndpoint">Service Endpoint</param>
            <param name="strComment">Comment</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1">
            <summary>
            ProxyObjectBase
            </summary>
            <typeparam name="T">The type of the derived object</typeparam>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.Factory">
            <summary>
            The Channel Factory for this proxy object
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.#ctor">
            <summary>
            Default constructor.
            Uses the configured default endpoint in the application configuration file.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.#ctor(System.String)">
            <summary>
            Constructor using the configured endpoint name in the application configuration file.
            </summary>
            <param name="endpointConfigurationName">Endpoint Name</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.GetProxy">
            <summary>
            Gets the proxy.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.CheckDisposed">
            <summary>
            Checks the disposed.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.Configure(System.String,System.String)">
            <summary>
            For COM clients who need to be able to configure the endpoint dynamically
            </summary>
            <param name="strEndpoint">Endpoint address</param>
            <param name="strBinding">
            Binding name (optional). If this is not provided, a proper default binding is used for hosting the callback.
            Possible values are: "WSHttpBinding", "NetMsmqBinding", "NetNamedPipeBinding", "NetTcpBinding", or string.Empty or null
            </param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.Configure(System.String)">
            <summary>
            For COM clients who need to be able to configure the endpoint dynamically
            </summary>
            <param name="strEndpoinConfigurationName">Endpoint configuration Name</param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.EndpointAddress">
            <summary>
            Configured Endpoint Address
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Base.ProxyObjectBase`1.OnDispose">
            <summary>
            Called when the base class Dispose method called to ensure the super class is disposed as well.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.AssociationUpdateArgs">
            <summary>
            Base class for all association (collection) update arguments
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.AssociationUpdateArgs.AssociationId">
            <summary>
            Association Id
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListAddedArgs">
            <summary>
            Class containing data about List add operations
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListAddedArgs.Value">
            <summary>
            Value that got added
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListAddedArgs.Index">
            <summary>
            Index (position where the new object was inserted). If -1, object got added at the end (default)
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListRemovedArgs">
            <summary>
            Class containing information about list removes
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListRemovedArgs.Value">
            <summary>
            Value that got removed
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListSwappedArgs">
            <summary>
            Class containing data for List swap operations
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListSwappedArgs.IndexFrom">
            <summary>
            Index From (original index)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ListSwappedArgs.IndexTo">
            <summary>
            Index To (target index)
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs">
            <summary>
            Base Class for all Notification arguments
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ArgsType">
            <summary>
            Argument type (property or collection) update
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ArgsType.None">
            <summary>
            None, should not be used
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ArgsType.PropertyUpdate">
            <summary>
            Property update
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ArgsType.AssociationUpdate">
            <summary>
            Association (collection) update
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ArgsType.ObjectCreated">
            <summary>
            ObjectCreated 
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ArgsType.ObjectDeleted">
            <summary>
            ObjectCreated 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ParentObject">
            <summary>
            OID of parent object 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.Type">
            <summary>
            Type of arguments
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectCreatedArgs">
            <summary>
            Class containing data about List add operations
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectCreatedArgs.ObjectType">
            <summary>
            Object Type of created object
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectCreatedArgs.CreatedObject">
            <summary>
            Created object
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectCreatedArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectDeletedArgs">
            <summary>
            Class containing data about List add operations
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectDeletedArgs.ObjectType">
            <summary>
            Object Type of created object
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectDeletedArgs.DeletedObject">
            <summary>
            Object Type of created object
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.ObjectDeletedArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.PropertyUpdateArgs">
            <summary>
            Class containing data of Property Updates
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.PropertyUpdateArgs.NewValue">
            <summary>
            New Value
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.PropertyUpdateArgs.OldValue">
            <summary>
            Old Value
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.PropertyUpdateArgs.PID">
            <summary>
            Property Id
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.PropertyUpdateArgs.ObjectType">
            <summary>
            Object Type of updated object
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.PropertyUpdateArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.QueryDataChangedArgs">
            <summary>
            Class containing data sent to clients that subscribe for updates.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.QueryDataChangedArgs.Subscription">
            <summary>
            Subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.QueryDataChangedArgs.Isa95Object">
            <summary>
            The Configuration Manager object associated with the CalendarItem the was updated.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.QueryDataChangedArgs.UpdatedCalendarItems">
            <summary>
            The list of CalendarItems that have been modified since the last event was fired.  The list is only the items that are linked to the subscribed
            Configuration Manager object.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.QueryDataChangedArgs.CurrentNormailizedList">
            <summary>
            The updated normalized list of CalendarItems specified by the Subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.QueryDataChangedArgs.AdditionalQueryItems">
            <summary>
            The additional items returns fro the query defined in the subscription.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.TransactionCommittedArgs">
            <summary>
            Class containing data for transaction commits
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription">
            <summary>
            UpdateSubscription
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType">
            <summary>
            Enumerator indicating the provided key for the subscription.  Possible values are FactoryLayoutElementId, StationPath, LinePath.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType.FactoryLayoutElementId">
            <summary>
            Indicates that the subscription was created with the OID of the ConfigurationManager Isa95 object.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType.StationPath">
            <summary>
            Indicates that the subscription was created with the FullPath of SiplacePro Station object.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType.LinePath">
            <summary>
            Indicates that the subscription was created with the FullPath of SiplacePro Line object.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.#ctor(System.Int32,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription"/> class.
            </summary>
            <param name="factoryLayoutElementId">The Isa object id that should be the scope of your subscription.</param>
            <param name="includeInheritance">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.#ctor(System.Int32,System.Boolean,System.DateTime,System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[])">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription"/> class.
            </summary>
            <param name="factoryLayoutElementId">The Isa object id that should be the scope of your subscription.</param>
            <param name="includeInheritance">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="additionalQueryTypes">The additional query items to check for updates.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.#ctor(System.String,Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType,System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription"/> class.
            </summary>
            <param name="strPath">The SIPLACE Pro Station or Line Identity Path that should be the scope of your subscription.</param>
            <param name="nType">The SubscriptionType value that defines if the strPath parameter is a Line or Station path.</param>
            <param name="includeInheritance">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.#ctor(System.String,Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType,System.Boolean,System.DateTime,System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[])">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription" /> class.
            </summary>
            <param name="strPath">The SIPLACE Pro Station or Line Identity Path that should be the scope of your subscription.</param>
            <param name="nType">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="includeInheritance">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="additionalQueryTypes">The additional query items to check for updates.</param>
            <exception cref="T:System.ArgumentException">
            UpdateSubscription.SIPLACEProStationPath can not be found in Configuration Manager.
            or
            UpdateSubscription.SIPLACEProLinePath can not be found in Configuration Manager.
            or
            The SubscriptionType  passed in is not valid for this constructor.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.#ctor(System.String,Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType,System.String,System.Boolean,System.DateTime,System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[])">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription" /> class.
            </summary>
            <param name="strPath">The SIPLACE Pro Station or Line Identity Path that should be the scope of your subscription.</param>
            <param name="nType">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="deviceType">Type of the device.</param>
            <param name="includeInheritance">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="additionalQueryTypes">The additional query items to check for updates.</param>
            <exception cref="T:System.ArgumentException">
            UpdateSubscription.SIPLACEProStationPath can not be found in Configuration Manager.
            or
            UpdateSubscription.SIPLACEProLinePath can not be found in Configuration Manager.
            or
            The SubscriptionType  passed in is not valid for this constructor.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.#ctor(System.String,System.String,Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionType,System.String,System.Boolean,System.DateTime,System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[])">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription" /> class.
            </summary>
            <param name="lineOrStationPath">The SIPLACE Pro Station or Line Identity Path that should be the scope of your subscription.</param>
            <param name="siplaceProDatabaseId">The siplace pro database identifier.</param>
            <param name="nType">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="deviceType">Type of the device.</param>
            <param name="includeInheritance">If this is true, then the subscription include the parent items of the object with the id = factoryLayoutElementId.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="additionalQueryTypes">The additional query items to check for updates.</param>
            <exception cref="T:System.ArgumentException">UpdateSubscription.SIPLACEProStationPath can not be found in Configuration Manager.
            or
            UpdateSubscription.SIPLACEProLinePath can not be found in Configuration Manager.
            or
            The SubscriptionType  passed in is not valid for this constructor.</exception>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubscriptionId">
            <summary>
            SubscriptionId
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.FactoryLayoutElementId">
            <summary>
            FactoryLayoutElementId
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SIPLACEProStationPath">
            <summary>
            The SIPLACE Pro Station Identity Path that should be the scope of your subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SIPLACEProDatabaseId">
            <summary>
            The SIPLACE Pro DatabaseId in case it was provided that should be the scope of your subscription.
            Default is null.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SIPLACEProDeviceType">
            <summary>
            The SIPLACE Pro device type of the 'station'.
            This can be set to 'Station', 'Printer' or 'GenericLineDevice' in case a SIPLACEProStationPath is provided.
            If SIPLACEProStationPath is provided 'Station' is the default value.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SIPLACEProLinePath">
            <summary>
            The SIPLACE Pro Line Identity Path that should be the scope of your subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.StartTime">
            <summary>
            StartTime
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.EndTime">
            <summary>
            EndTime
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.SubsType">
            <summary>
            Subscription Type
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.IncludeInheritance">
            <summary>
            If true, indicates that parent Configuration Manager object will be monitored for updates.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.AdditionalQueryTypes">
            <summary>
            The list of additional Calendar Item types that will be monitored for updates.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.LastQueryResult">
            <summary>
            The updated normalized list of Calendar Items resulting from the query defined by the subscription.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription.LastAdditionalQueryItems">
            <summary>
            The updated list of additional Calendar Items resulting from the query defined by the subscription.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Services.TransactionNotificationCallback">
            <summary>
            Implements ITransactionNotificationDuplex
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Services.TransactionNotificationCallback.StartProcessingUpdateMessages">
            <summary>
            Starts the processing update messages.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Services.TransactionNotificationCallback.StopProcessingUpdateMessages">
            <summary>
            Stops the processing update messages.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Services.TransactionNotificationCallback.TransactionComplete(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.UpdateNotificationMessage)">
            <summary>
            Transactions the complete.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Services.TransactionNotificationCallback.TransactionCompleteOneWay(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.UpdateNotificationMessage)">
            <summary>
            Transactions the complete one way.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection">
            <summary>
            Represents subset of appointments collection.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection._startDate">
            <summary>
            The start time UTC of the appointment we are testing against all other appointments
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection._endDate">
            <summary>
            The end time UTC of the appointment we are testing against all other appointments
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection._proxyTestAppointment">
            <summary>
            The appointment we are testing against all other appointments
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel,System.DateTime,System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Constructor for testing Overlaps of Appointments
            </summary>
            <param name="calendar">The Main Factory Calendar Object that contains all the appointments</param>
            <param name="start">The start time of the appointment we are testing against all other appointments</param>
            <param name="end">The end time of the appointment we are testing against all other appointments</param>
            <param name="proxyTestAppointment">The appointment we are testing against all other appointments</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Special Constructor for testing the Recursive appointment overlaps
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the AppointmentSubsetCollection class with appointments between given start and end date.
            </summary>
            <param name="calendar"></param>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.#ctor(System.DateTime,System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Constructor for building up a temporary list of Calendar Items for an appointment
            </summary>
            <param name="start">The start time of the appointment</param>
            <param name="end">The end time of the appointment</param>
            <param name="proxyTestAppointment">The appointment we are making calendar Items with</param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.Items">
            <summary>
            List of Calendar Items that have been build from the Query parameters.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.Calendar">
            <summary>
            Gets the calendar collection is associated with this collection.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.PopulateCollection(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            This method get the Appointment Instances for the date time range.
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.GetDay(System.DateTime)">
            <summary>
            Gets reference to the Day object which represents day in calendar.
            </summary>
            <param name="date">Date to retrieve day for.</param>
            <returns>Returns reference to Day object.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.NormalizeDateTime(System.DateTime)">
            <summary>
            Removes seconds and milliseconds from the provided DateTime value, because they are not relevant for the FactoryCalendar
            </summary>
            <param name="value">Original DateTime value</param>
            <returns>DateTime with second = 0 and millisecond = 0</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.CheckOverlapRelativeTimes(System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment},Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Check the Overlap times for a Recursive appointment against all the other appointments for a first pass to find conflicts
            </summary>
            <remarks>
            Only check the Time not the date
            </remarks>
            <param name="listPossibleCandidateAppointments">The List of possible overlaps for further checking</param>
            <param name="proxyTestAppointment">The Test appointment. This is the appointment to test for overlaps against all the other appointments</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.IsRelativeDateTimeAWholeDayAppointment(System.DateTime,System.DateTime)">
            <summary>
            Determines whether a relative date time is a whole day appointment.
            Only check times, Date 
            </summary>
            <param name="relativeStartTime">The relative start time.</param>
            <param name="relativeEndTime">The relative end time.</param>
            <returns>
              <c>true</c> if [is relative date time a whole day appointment] [the specified relative start time]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.CheckOverlapAgainstIndividualAppointments(System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment},Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Check the Overlap times for a Recursive appointment against all individual appointments for a second pass to find conflicts (overlaps)
            </summary>
            <param name="listPossibleCandidateAppointments">The List of possible overlaps for further checking</param>
            <param name="proxyTestAppointment">The Test appointment. This is the appointment to test for overlaps against all the other appointments</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.CheckOverlapAgainstRecursiveAppointments(System.Collections.Generic.IEnumerable{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment},Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Check the Overlap times for a Recursive appointment against all other recursive appointments for a 3rd pass to find conflicts (overlaps)
            </summary>
            <param name="listPossibleCandidateAppointments">The List of possible overlaps for further checking</param>
            <param name="proxyTestAppointment">The Test appointment. This is the appointment to test for overlaps against all the other appointments</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.CheckOverlapAgainstRecursiveAppointmentsWithoutRange(System.Collections.Generic.IEnumerable{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment},Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Check the Overlap times for a Recursive appointment against all other recursive appointments for a 3rd pass to find conflicts (overlaps)
            </summary>
            <param name="listPossibleCandidateAppointments">The List of possible overlaps for further checking</param>
            <param name="proxyTestAppointment">The Test appointment. This is the appointment to test for overlaps against all the other appointments</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection.CheckOverlapAgainstRecursiveAppointmentsWithRange(System.Collections.Generic.IEnumerable{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment},Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Check the Overlap times for a Recursive appointment against all other recursive appointments for a 3rd pass to find conflicts (overlaps)
            </summary>
            <param name="listPossibleCandidateAppointments">The List of possible overlaps for further checking</param>
            <param name="proxyTestAppointment">The Test appointment. This is the appointment to test for overlaps against all the other appointments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper">
            <summary>
            The CalendarDateTimeHelper
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.BeginningOfDay(System.DateTime)">
            <summary>
            Returns the date/time that represents beginning of the day value.
            </summary>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.EndOfDay(System.DateTime)">
            <summary>
            Returns the date/time that represents end of the day value.
            </summary>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.SetRepeatOnDayOrGetPrevValidDayOfMonth(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets on the repeat day or get previous valid day of month.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="repeatOnDay">The repeat on day.</param>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.GetNextValidDayOfMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the next valid day of month.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.GetPreviousValidDayOfMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the previous valid day of month.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.IsDateValid(System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether [is date valid] [the specified year].
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <returns>
              <c>true</c> if [is date valid] [the specified year]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.IsSameDay(System.DateTime,System.DateTime)">
            <summary>
            Returns true if both dates are on same day and year.
            </summary>
            <param name="date1">First date</param>
            <param name="date2">Second date</param>
            <returns>true if dates are on same day and year</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.IsWeekendDay(System.DateTime)">
            <summary>
            Determines whether [is weekend day] [the specified current day].
            </summary>
            <param name="currentDay">The current day.</param>
            <returns>
            <c>true</c> if [is weekend day] [the specified current day]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.MaxDate(System.DateTime,System.DateTime)">
            <summary>
            Gets greater date between two dates.
            </summary>
            <param name="date1">Date 1</param>
            <param name="date2">Date 2</param>
            <returns>Greater date.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.MinDate(System.DateTime,System.DateTime)">
            <summary>
            Gets lesser date between two dates.
            </summary>
            <param name="date1">Date 1</param>
            <param name="date2">Date 2</param>
            <returns>Greater date.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.TotalDays(System.DateTime,System.DateTime,System.DayOfWeek)">
            <summary>
            Return total number of days specified by day parameter between two dates.
            </summary>
            <param name="startDate">Start date.</param>
            <param name="endDate">End date.</param>
            <param name="day">Day of week</param>
            <returns>Number of days between two dates</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.TotalNumberOfDays(System.DateTime,System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence)">
            <summary>
            Totals the number of days.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="daysOfWeek">The days of week.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.TotalWeekDays(System.DateTime,System.DateTime)">
            <summary>
            Returns number of weekdays (Monday-Friday) between two dates.
            </summary>
            <param name="startDateTime">Start date</param>
            <param name="endDateTime">End date</param>
            <returns>Total number of weekdays between two dates</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.HasDay(System.DayOfWeek,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence)">
            <summary>
            Determines whether the specified day of week has day.
            </summary>
            <param name="dayOfWeek">The day of week.</param>
            <param name="days">The days.</param>
            <returns>
            <c>true</c> if the specified day of week has day; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDateTimeHelper.GetLastDayOfWeek(System.DayOfWeek)">
            <summary>
            Returns the last day of week 
            </summary>
            <param name="firstDayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDay">
            <summary>
            Represents the calendar day.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDay.#ctor(System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel)">
            <summary>
            Initializes a new instance of the Day class.
            </summary>
            <param name="dayDate"></param>
            <param name="calendar"></param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDay.Appointments">
            <summary>
            Gets appointments that start on this day.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDay.DayDate">
            <summary>
            Gets the date this day represents.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarDay.Calendar">
            <summary>
            Gets the Calendar this day is part of.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarMonth">
            <summary>
            Represents the calendar month.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarMonth.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Month class.
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <param name="calendar"></param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarMonth.Days">
            <summary>
            Gets collection of days in this month.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarMonth.Year">
            <summary>
            Gets the month year.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarMonth.MonthOfYear">
            <summary>
            Gets the month.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarMonth.CalendarModel">
            <summary>
            Gets the Calendar this day is part of.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarYear">
            <summary>
            Represents the calendar year.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarYear.#ctor(System.Int32,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel)">
            <summary>
            Initializes a new instance of the Year class.
            </summary>
            <param name="year"></param>
            <param name="calendarModel"></param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.CalendarYear.Months">
            <summary>
            Returns read-only collection of months in year.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceEndTimeCalculator.GetDailyRecurrenceEndTime(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Gets date and time of last occurrence fo a daily recurring appointment.
            It is assumed that the appointment is recurring and range is set to a number of occurrences.
            </summary>
            <param name="recurrence">The recurrence.</param>
            <returns>End date and time of last occurrence fo a daily recurring appointment.</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator">
            <summary>
            Internal class for building the Recurrence appointments from the recurrence pattern.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GenerateDailyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Generates Daily recurring appointments. If appointment is assigned to calendar method must populate the Calendar.Appointments collection as well.
            </summary>
            <param name="subsetCollection">Collection to add generated recurrences to</param>
            <param name="recurrence">Recurrence description, must be of Daily recurrence type.</param>
            <param name="dtStartDateWindowUtc">Start date for generation [UTC].</param>
            <param name="dtEndDateWindowUtc">End date for generation [UTC].</param>
            <param name="bTempCollection">For building a temporary collection (not added to the internal calendar). Used for checking new appointments for conflicts.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GetNextDailyRecurrence(System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Gets the next daily recurrence.
            This consider if Every Weekday or only RepeatInterval is configured 
            </summary>
            <param name="startDateTime">The start date time.</param>
            <param name="recurrence">The Appointment Recurrence.</param>
            <returns>The next StartTime</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.IsIgnoredRecurrence(System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Check the Skipped Recurrences using UTC times.
            </summary>
            <param name="dtCurrentDayUtc">The current day to check [UTC]</param>
            <param name="recurrence">The Appointment Recurrence to check</param>
            <returns>True if it is ignored (Skipped), False otherwise</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GenerateWeeklyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Generates Weekly recurring appointments. If appointment is assigned to calendar method must populate the Calendar.Appointments collection as well.
            </summary>
            <param name="subsetCollection">Collection to add generated recurrences to</param>
            <param name="recurrence">Recurrence description, must be of Weekly recurrence type.</param>
            <param name="repeatOnDaysOfWeekNewAppointment">The Repeat on the Days of the week of the new (proposed) appointment </param>
            <param name="dtStartDateWindowUtc">Start date for generation.</param>
            <param name="dtEndDateWindowUtc">End date for generation.</param>
            <param name="bTempCollection">True if filling out a temporary collection</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GenerateMonthlyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Generates Monthly recurring appointments. If appointment is assigned to calendar method must populate the Calendar.Appointments collection as well.
            </summary>
            <param name="subsetCollection">Collection to add generated recurrences to</param>
            <param name="recurrence">Recurrence description, must be of Monthly recurrence type.</param>
            <param name="dtStartDateWindowUtc">Start date for generation.</param>
            <param name="dtEndDateWindowUtc">End date for generation.</param>
            <param name="bTempCollection">if set to <c>true</c> [b temp collection].</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GetNextMonthlyRecurrence(System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth,System.DayOfWeek,System.Int32,System.Int32)">
            <summary>
            Gets the next monthly recurrence.
            </summary>
            <param name="dtStartDateLocal">The dt start date local.</param>
            <param name="repeatOnRelativeDayInMonth">The repeat on relative day in month.</param>
            <param name="relativeDayOfWeek">The relative day of week.</param>
            <param name="repeatOnDayOfMonth">The repeat on day of month.</param>
            <param name="repeatInterval">The reaped interval.</param>
            <returns>Date Time in UTC format</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GetNextMonthlyRecurrenceForSpecialLastDays(System.DateTime,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTime@)">
            <summary>
            Gets the next monthly recurrence for special last days.
            </summary>
            <param name="dtStartDateLocal">The local start date.</param>
            <param name="repeatOnDayOfMonth">The repeat on day of month.</param>
            <param name="repeatInterval">The repeatInterval (every x month).</param>
            <param name="cal">The cal.</param>
            <param name="dtNextLocal">The next local recurrence date.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GenerateYearlyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.AppointmentSubsetCollection,Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence,System.DateTime,System.DateTime)">
            <summary>
            Generates Yearly recurring appointments. If appointment is assigned to calendar method must populate the Calendar.Appointments collection as well.
            </summary>
            <param name="subsetCollection">Collection to add generated recurrences to</param>
            <param name="recurrence">Recurrence description, must be of Monthly recurrence type.</param>
            <param name="dtStartDateWindowUtc">Start date for generation.</param>
            <param name="dtEndDateWindowUtc">End date for generation.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GetNextYearlyRecurrence(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence,System.DateTime)">
            <summary>
            Get Next Yearly Recurrence. 
            </summary>
            <param name="recurrence"></param>
            <param name="dtStartDateLocal"></param>
            <remarks>We need to compare with Local Time since we are comparing Day or the Month, etc.</remarks>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.FindTheNthSpecificWeekday(System.Int32,System.Int32,System.Int32,System.DayOfWeek)">
            <summary>
            Finds the NTH specific weekday.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="nth">The NTH.</param>
            <param name="dayOfTheWeek">The day of the week.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> 
            if the nth relative day not exist in this Month 
            or
            Invalid " + @"month value.
            or
            Invalid" + "d nth value.
            or
            </exception>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.RecurrenceGenerator.GetCorrectNextRelativeDayDate(System.DateTime,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth,System.DayOfWeek)">
            <summary>
            Gets the correct next relative day date.
            </summary>
            <param name="dtStartDateLocal">The dt start date local.</param>
            <param name="repeatOnRelativeDayInMonth">The repeat on relative day in month.</param>
            <param name="relativeDayOfWeek">The relative day of week.</param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.TimeZoneHelper">
            <summary>
            Convert Times back and forth between UTC and assigned TimeZone
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.TimeZoneHelper.CurrentTimeZoneInfo">
            <summary>
            CurrentTimeZoneInfo
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.TimeZoneHelper.ConvertTimeFromUtc(System.DateTime)">
            <summary>
            Converts the time from UTC to local time.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <returns>The time as local time.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.TimeZoneHelper.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the time from UTC using a passed in TimeZoneInfo.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <param name="timeZoneInfo">Time zone Info. If null is passed in, uses the Local TimeZone.</param>
            <returns>The time converted to the passed in TimeZoneInfo</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.TimeZoneHelper.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts the time to UTC.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <param name="timeZoneInfo">Time zone Info</param>
            <returns>The DateTime as UTC time.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.TimeZoneHelper.ConvertTimeToUtc(System.DateTime)">
            <summary>
            Converts the time to UTC.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <returns>The DateTime as UTC time.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Helper.TimeZoneHelper.ConvertFromMovedTimeZone(System.DateTime,System.TimeZoneInfo)">
            <summary>
            Converts from moved time zone. Can be used when a DateTime object needs to be converted from one TimeZone to the current one.
            </summary>
            <param name="dateTimeFrom">The date time from.</param>
            <param name="previousTimeZone">The previous time zone.</param>
            <returns>DateTime converted to current time zone</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.IBaseObject">
            <summary>
            IBaseObject
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.IBaseObject.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.INamedObject">
            <summary>
            INamedObject
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.INamedObject.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.INamedObject.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.IObjectUpdate.SaveChanges">
            <summary>
            Save the Changes of the object data to the database.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.IObjectUpdate.CancelChanges">
            <summary>
            Cancels the Changes of the object in the database.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.IObjectUpdate.Delete">
            <summary>
            Delete the object data to the database.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Interfaces.IObjectUpdate.IsDeleted">
            <summary>
            Delete the object data to the database.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment">
            <summary>
            The main class than contains appointment information.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.#ctor">
            <summary>
            Called when creating a new Appointment
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment)">
            <summary>
            Called when loading a new Appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.IsDirty">
            <summary>
            Flag whether the object has changes to be saved or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Name">
            <summary>
            The Name of the Appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Description">
            <summary>
            Detailed Description of the appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.StartTime">
            <summary>
            The Start Time in UTC of the appointment.
            </summary>
            <remarks>Stored in UTC time to the database.</remarks>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.LocalStartTime">
            <summary>
            The Start Time of the appointment in the Local Time Zone.
            </summary>
            <remarks>Stored in UTC time to the database.</remarks>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.EndTime">
            <summary>
            The End Time of the appointment.
            </summary>
            <remarks>Stored in UTC time to the database.</remarks>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.LocalEndTime">
            <summary>
            The End Time of the appointment in the Local Time Zone.
            </summary>
            <remarks>Stored in UTC time to the database.</remarks>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.AppointmentType">
            <summary>
            The Appointment Type based upon the SIM/E10 states
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.State">
            <summary>
            The State of the appointment. In other words, the E10 states
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.CustomState">
            <summary>
            The CustomState associated with the Appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.UseCustomState">
            <summary>
            True, if custom state should be used instead of state
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.GroupReason">
            <summary>
            The CustomState associated with the Appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Recurring">
            <summary>
            Whether this Appointment has a recurrence pattern.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.OverrideInheritance">
            <summary>
            Whether this Appointment is using the Default Inheritance rather than overridden inheritance
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Isa95Id">
            <summary>
            The Isa95 Factory Layout Id associated with the Configuration Manager object
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.TimeZone">
            <summary>
            The Originated Time Zone (The Time Zone where this appointment was created)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Id">
            <summary>
            The Appointment Unique Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Team">
            <summary>
            The Team associated with the Appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.AppointmentExceptions">
            <summary>
            The Array of AppointmentExceptions
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Recurrence">
            <summary>
            The Detailed Recurrence information.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.HasAppointmentReccurenceOccured">
            <summary>
            Check whether this appointment has recurrence appointments that have already occurred in the past.
            </summary>
            <returns>True if this appointment has any Recurrence dates that have already occurred in the past</returns>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.RootAppointment">
            <summary>
            The Root Appointment from a normalized (flatted) created appointment. Used by the Query Engine
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Create(Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            The default method for creating an Appointment which initializes it correctly.
            </summary>
            <param name="type">The appointment type</param>
            <param name="isa95Id">The associated isa 95 object id</param>
            <param name="name">Appointment Name (optional)</param>
            <param name="description">Appointment Description (optional)</param>
            <param name="startTime">Appointment StartTime (optional)</param>
            <param name="endTime">Appointment EndTime (optional)</param>
            <returns>Appointment instance</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.CreateAppointmentException">
            <summary>
            Create an Appointment Exception
            </summary>
            <returns>New instance of an AppointmentException</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.CopyTo(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Copies content of this appointment to the target appointment
            </summary>
            <param name="targetAppointment">The target appointment to fill out</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.ClearAppointmentExceptions">
            <summary>
            Clears all the AppointmentExceptions
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.DeleteAppointmentException(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException)">
            <summary>
            Deletes the Appointment Exception from the Appointment
            </summary>
            <param name="appointmentException">The AppointmentException to be removed form the Appointment</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Equals(System.Object)">
            <summary>
            Equal Operator for specialized comparison
            </summary>
            <param name="obj">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Equals(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Equal Operator for specialized comparison that takes an Appointment object type
            </summary>
            <param name="other">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.GetHashCode">
            <summary>
            Get the Hash code of the object instance used for object comparison/uniqueness
            </summary>
            <returns>The unique hash code</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Create">
            <summary>
            The default method for creating an Appointment which initializes it correctly.
            </summary>
            <returns>Appointment instance</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.SetDirty(System.Boolean)">
            <summary>
            Set the Dirty state of the object (usually will be cleaning the state after a Save()
            </summary>
            <param name="bDirty">Set the State to Dirty or not dirty</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.GetAppointmentException(System.Int32,System.Int32)">
            <summary>
            Get the AppointmentException given the SymbolicId and/or Id
            </summary>
            <param name="nSymbolicId">The Symbolic Id that was given before the database Id was created</param>
            <param name="nId">the real database Id</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.Copy">
            <summary>
            Creates an copy of the appointment.
            </summary>
            <returns>Appointment copy.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.OnDeleteObject">
            <summary>
            Called when [delete object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.OnUpdateObject">
            <summary>
            Called when [update object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.OnBackup">
            <summary>
            Backup the state of the internal data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment.OnRestore">
            <summary>
            Restore any changes that were made to the original version (Rollback)
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence">
            <summary>
            The Recurrence pattern for each appointment
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Called when creating a new Appointment
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment,Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentRecurrence)">
            <summary>
            Called from the Loading of Appointments
            </summary>
            <param name="appointment">The Appointment being loaded</param>
            <param name="dcAppointmentRecurrence">The Appointment Recurrence being loaded</param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.Appointment">
            <summary>
            The Recurrence Appointment this Recurrence belongs to.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.IsDirty">
            <summary>
            Flag whether the object has changes to be saved or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.Id">
            <summary>
            The Recurrence unique Identifier.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.RangeLimitType">
            <summary>
            The recurrence range limit type.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.RangeNumberOfOccurrences">
            <summary>
            The RangeNumberOfOccurrences.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.RecurrenceStartDate">
            <summary>
            The Recurrence start Date/Time. This actually returns the Appointment StartTime which is in UTC
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.RecurrenceLocalStartDate">
            <summary>
            The Recurrence start Date/Time. This actually returns the Appointment StartTime using the Local Time Zone
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.RangeEndDate">
            <summary>
            The End Date of the Recurrence (in UTC Time)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.RangeLocalEndDate">
            <summary>
            The End Date of the Recurrence (using local Time Zone)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.RecurrenceType">
            <summary>
            The Recurrence pattern.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.Daily">
            <summary>
            The Daily Recurrence data
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.Weekly">
            <summary>
            TThe Weekly Recurrence data
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.Monthly">
            <summary>
            The Monthly Recurrence data
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.Yearly">
            <summary>
            The Yearly Recurrence data
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.SkippedRecurrences">
            <summary>
            Gets or set the list of dates on which the recurrences are skipped.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.FirstDayOfWeek">
            <summary>
            First Days of Week used when creating the recurrence.
            Default is Sunday (if not set explicitly). This impacts the recurrence pattern for weekly recurrences.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.CopyTo(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Copies content of this AppointmentRecurrence to the target appointment recurrence
            </summary>
            <param name="targetAppointmentRecurrence">The target appointment recurrence to fill out</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.CreateDataContractBackup">
            <summary>
            Create a Backup of the DataContract
            </summary>
            <returns>The Backup of the DataContract</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.Restore(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentRecurrence)">
            <summary>
            Restore the DataContract from a CancelChanges operation (error)
            </summary>
            <param name="dcRestore">The Data contract to Restore</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence.SetDirty(System.Boolean)">
            <summary>
            Set the Dirty state of the object (usually will be cleaning the state after a Save()
            </summary>
            <param name="bDirty">Set the State to Dirty or not dirty</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem">
            <summary>
            Calendar Item represents a normalized Appointment when calling the FactoryCalendarQuery methods.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem)">
            <summary>
            Constructor for use by the FactoryCalendarQuery class to create a Copy of the Data
            </summary>
            <param name="copyFrom"></param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Constructor for use by the FactoryCalendarQuery class
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment,System.DateTime,System.DateTime)">
            <summary>
            Constructor for use by the FactoryCalendarQuery class
            </summary>
            <param name="appointment">Appointment</param>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.OriginalAppointment">
            <summary>
            Gets the original appointment that this CalendarItem was created from.
            Can be used to link back split CalendarItems that refer to the same Shift for instance.
            </summary>
            <value>
            The original appointment.
            </value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Id">
            <summary>
            The Appointment Unique Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Name">
            <summary>
            The Name of the Appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Description">
            <summary>
            Detailed Description of the appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.StartTime">
            <summary>
            The Start Time of the appointment.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.EndTime">
            <summary>
            The End Time of the appointment.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.AppointmentType">
            <summary>
            The Appointment Type based upon the SIM/E10 states
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.State">
            <summary>
            The State of the appointment. In other words, the E10 states
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.CustomState">
            <summary>
            The State of the appointment. In other words, the E10 states.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.GroupReason">
            <summary>
            The Group Reason of the appointment corresponding to the E10 states.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Recurring">
            <summary>
            Whether this Appointment has a recurrence pattern.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.OverrideInheritance">
            <summary>
            Whether this Appointment has overridden inheritance.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Isa95Id">
            <summary>
            The Ida95 Factory Layout Id associated with the Configuration Manager object
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Team">
            <summary>
            The Ida95 Factory Layout Id associated with the Configuration Manager object
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.LocalStartTime">
            <summary>
            Local Start Time
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.LocalEndTime">
            <summary>
            Local End Time
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.E58Code">
            <summary>
            The E58 ARAMS state code
            The value is filled for Appointments of type: Non-Scheduled Time, Scheduled Downtime
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Isa95Object">
            <summary>
            The Isa95 Object associated with this Calendar Item
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Equals(System.Object)">
            <summary>
            Equal Operator for specialized comparison
            </summary>
            <param name="obj">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.Equals(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem)">
            <summary>
            Equal Operator for specialized comparison that takes a CalendarItem object type
            </summary>
            <param name="other">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.GetHashCode">
            <summary>
            Get the Hash code of the object instance used for object comparison/uniqueness
            </summary>
            <returns>The unique hash code</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel">
            <summary>
            The Calendar Model containing all the appointments and options
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.#ctor">
            <summary>
            Protected Constructor so clients can't use it.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.Id">
            <summary>
            The Calendar Model Id
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.Name">
            <summary>
            The Name of the Model
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.Description">
            <summary>
            The Description of the Model
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.Appointments">
            <summary>
            The List of Appointments
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.AppointmentsReadOnly">
            <summary>
            The List of Appointments read only. This is a faster accessor to the list if the intent is just iterating through the
            list.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.AppointmentsReadOnlyCopy">
            <summary>
            Copy of the List of Appointments read only. This is a faster accessor to the list if the intent is just iterating through the
            list from multiple threads.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.Options">
            <summary>
            The Options for the Model
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.ToString">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarModel.GetCalendar">
            <summary>
            Get the Default Calendar used by the CurrentCulture
            </summary>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarOptions">
            <summary>
            Contains the Calendar Options such as the Factory Work Days, etc.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarOptions.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of week.
            </summary>
            <value>The first day of week.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarOptions.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarOptions.WorkDays">
            <summary>
            Gets the work days.
            </summary>
            <value>The work days.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarOptions.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException">
            <summary>
            The main class than contains appointment information.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.#ctor">
            <summary>
            New Appointment Exception created
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.Id">
            <summary>
            The AppointmentException Unique Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.LocalStartTime">
            <summary>
            The Local Start Time of the appointment.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.LocalStartDate">
            <summary>
            The Local Start Date of the appointment.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.StartTime">
            <summary>
            The Start Time of the appointment.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.SymbolicId">
            <summary>
            The AppointmentException Symbolic Id for handling new objects
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.Equals(System.Object)">
            <summary>
            Equal Operator for specialized comparison
            </summary>
            <param name="obj">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.Equals(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException)">
            <summary>
            Equal Operator for specialized comparison that takes an AppointmentException object type
            </summary>
            <param name="other">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.GetHashCode">
            <summary>
            Get the Hash code of the object instance used for object comparison/uniqueness
            </summary>
            <returns>The unique hash code</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.Copy">
            <summary>
            Creates an copy of the appointment.
            </summary>
            <returns>AppointmentException copy.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.Backup">
            <summary>
            Backup the state of the internal data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentException.OnRestore">
            <summary>
            Restore any changes that were made to the original version (Rollback)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.ContraintChecker.CheckRange(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Check the Range of a property
            </summary>
            <param name="nValue"></param>
            <param name="nLowRange"></param>
            <param name="nHighRange"></param>
            <param name="strProperty"></param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState">
            <summary>
            A Sub State for the "Scheduled Downtime" and "Non-Scheduled Time" appointment types
            defines the cause of the downtime in more detail
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.Name">
            <summary>
            The Name of the CustomState
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.Id">
            <summary>
            The CustomState Unique Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.Description">
            <summary>
            The Description of the CustomState
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.Value">
            <summary>
            The Value of the CustomState
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.IsDeactivated">
            <summary>
            The IsDeactivated of the CustomState
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.Create(System.String,System.String)">
            <summary>
            Default method for creating a CustomState
            </summary>
            <param name="strDescription">The description</param>
            <param name="strValue">The value</param>
            <returns>New CustomState than can be updated.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.Equals(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState)">
            <summary>
            Equal Operator for specialized comparison that takes a CustomState object type
            </summary>
            <param name="other">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.Equals(System.Object)">
            <summary>
            Equal Operator for specialized comparison
            </summary>
            <param name="obj">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.GetHashCode">
            <summary>
            Get the Hash code of the object instance used for object comparison/uniqueness
            </summary>
            <returns>The unique hash code</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.OnBackup">
            <summary>
            Backup the state of the internal data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.OnRestore">
            <summary>
            Restore any changes that were made to the original version (Rollback)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.OnDeleteObject">
            <summary>
            Called when [delete object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState.OnUpdateObject">
            <summary>
            Called when [update object].
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings">
            <summary>
            DailyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Called when creating a new Appointment
            </summary>
            <param name="appointmentRecurrence">The new Appointment Recurrence just instantiated</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.DailyRecurrenceSettings)">
            <summary>
            Called when loading an Appointment
            </summary>
            <param name="dcDailyRecurrenceSettings"></param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.IsDirty">
            <summary>
            Flag whether the object has changes to be saved or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.RepeatInterval">
            <summary>
            Gets or sets the repeat interval.
            </summary>
            <value>The repeat interval.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.RepeatOnDaysOfWeek">
            <summary>
            Gets or sets the repeat on days of week.
            </summary>
            <value>The repeat on days of week.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.CopyTo(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings)">
            <summary>
            Copies content of this DailyRecurrenceSettings to the target DailyRecurrenceSettings
            </summary>
            <param name="targetDailyRecurrenceSettings">The target DailyRecurrenceSettings to fill out</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.CreateDataContractBackup">
            <summary>
            Create a Backup of the DataContract
            </summary>
            <returns>The Backup of the DataContract</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.Restore(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.DailyRecurrenceSettings)">
            <summary>
            Restore the DataContract from a CancelChanges operation (error)
            </summary>
            <param name="dcRestore">The Data contract to Restore</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.DailyRecurrenceSettings.SetDirty(System.Boolean)">
            <summary>
            Set the Dirty state of the object (usually will be cleaning the state after a Save()
            </summary>
            <param name="bDirty">Set the State to Dirty or not dirty</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.PropertyUpdateEvent">
            <summary>
            Fired when a property was updated
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">PropertyUpdate arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.ObjectCreatedEvent">
            <summary>
            Fired when an object was created
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">PropertyUpdate arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.ObjectDeletedEvent">
            <summary>
            Fired when an object was deleted
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">PropertyUpdate arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.ListAddedEvent">
            <summary>
            Fired when an object was added to a list
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">ListAdded arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.ListRemovedEvent">
            <summary>
            Fired when an object was removed from a list
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">ListRemovedArgs arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.ListSwappedEvent">
            <summary>
            Fired when two objects in a list were swapped.
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">ListSwappedArgs arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.TransactionCommitEvent">
            <summary>
            Will be fired when a transaction is committed.
            Use this in case you do not need the specific information in all the other events.
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">TransactionCommittedArgs arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.SubscribedChangeEvent">
            <summary>
            Will be fired when a change that has been subscribed for is received.
            You must call SubscribeForCalendarItems before this is fired.
            </summary>
            <param name="sender">The FactoryCalendar class</param>
            <param name="args">QueryDataChangedArgs arguments</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar">
            <summary>
            Class that implements IFactoryCalendar interface
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar._syncContext">
            <summary>
            Current SynchronizationContext when constructing this class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.#ctor">
            <summary>
            Default constructor.
            Uses the configured default endpoint in the application configuration file.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.#ctor(System.String)">
            <summary>
            Constructor using the configured endpoint name in the application configuration file.
            </summary>
            <param name="endpointConfigurationName">Endpoint Name</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
            <summary>
            Constructor used when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.Boolean,System.ServiceModel.EndpointAddress,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters)">
            <summary>
            Constructor used when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="useSecureCm">If set to true, uses the secure CM endpoint</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <param name="callbackParameters">Used for specifying if the callback services should be secure and what certificate should be used. Is valid for CM callback and FC callback. For FC callback this only
            works in case the protocol is net.tcp</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.Boolean,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters)">
            <summary>
            Constructor used when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="useSecureCm">If set to true, uses the secure CM endpoint</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <param name="callbackParameters">Used for specifying if the callback services should be secure and what certificate should be used. Is valid for CM callback and FC callback. For FC callback this only
            works in case the protocol is net.tcp</param>
            <param name="clientSecurityParameters">Used for specifying if client credentials and what certificate should be used for authentication.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.String,System.Int32,System.ServiceModel.EndpointAddress,System.Int32,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.Boolean,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters)">
            <summary>
            Constructor used when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="gatewayComputer">The Gateway through which the actual callback endpoint can be reached (in a cluster environment)</param>
            <param name="fcCallbackGatewayPort">The port of the gateway through which the actual callback endpoint can be reached (in a cluster environment)</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmCallbackGatewayPort">The port of the gateway through which the actual ConfigurationManager callback endpoint can be reached (in a cluster environment)</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="useSecureCm">If set to true, uses the secure CM endpoint</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <param name="callbackParameters">Used for specifying if the callback services should be secure and what certificate should be used. Is valid for CM callback and FC callback. For FC callback this only
            works in case the protocol is net.tcp</param>
            <param name="clientSecurityParameters">Used for specifying if client credentials and what certificate should be used for authentication.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
            <summary>
            Constructor used when no configuration file is present AND you do not want to subscribe to updates!
            
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetInstance">
            <summary>
            Default getter.
            Uses the configured default endpoint in the application configuration file.
            </summary>
            <returns>A new factory calendar instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetInstance(System.String)">
            <summary>
            Getter using the configured endpoint name in the application configuration file.
            </summary>
            <param name="endpointConfigurationName">Endpoint Name</param>
            <returns>A new factory calendar instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
            <summary>
            Gets the current instance of this class when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <returns>A new factory calendar instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.Boolean,System.ServiceModel.EndpointAddress,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters)">
            <summary>
            Gets the current instance of this class when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="useSecureCm">If set tp true, uses the secure CM endpoint</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <param name="callbackParameters">Used for specifying if the callback services should be secure and what certificate should be used. Is valid for CM callback and FC callback.
            For FC callback this only works in case the protocol is net.tcp</param>
            <returns>A new factory calendar instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.String,System.Int32,System.ServiceModel.EndpointAddress,System.Int32,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.Boolean,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters)">
            <summary>
            Gets the current instance of this class when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="gatewayComputer">The Gateway through which the actual callback endpoint can be reached (in a cluster environment)</param>
            <param name="fcCallbackGatewayPort">The port of the gateway through which the actual callback endpoint can be reached (in a cluster environment)</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmCallbackGatewayPort">The port of the gateway through which the actual ConfigurationManager callback endpoint can be reached (in a cluster environment)</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="useSecureCm">If set tp true, uses the secure CM endpoint</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <param name="callbackParameters">Used for specifying if the callback services should be secure and what certificate should be used. Is valid for CM callback and FC callback.
            For FC callback this only works in case the protocol is net.tcp</param>
            <param name="clientSecurityParameters">Used for specifying if client credentials and what certificate should be used for authentication.</param>
            <returns>A new factory calendar instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.Boolean,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters)">
            <summary>
            Gets the current instance of this class when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the FC service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="useSecureCm">If set tp true, uses the secure CM endpoint</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <param name="callbackParameters">Used for specifying if the callback services should be secure and what certificate should be used. Is valid for CM callback and FC callback.
            For FC callback this only works in case the protocol is net.tcp</param>
            <param name="clientSecurityParameters">Used for specifying if client credentials and what certificate should be used for authentication.</param>
            <returns>A new factory calendar instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
            <summary>
            Gets the current instance of this class when no configuration file is present.
            This constructor is used by the Health Check service since it will not create a subscription
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="cmCallbackEndpoint">EndpointAddress of the hosted service in the client that receives notifications from the CM service.</param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <returns>A new factory calendar instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.Finalize">
            <inheritdoc />
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ServiceUnreachable">
            <summary>
            Will be fired whenever the service cannot be reached
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ServiceReconnect">
            <summary>
            Will be fired whenever the service has reestablished connection and can be reached again
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.TransactionCommit">
            <summary>
            Occurs when [transaction commit].
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ListSwapped">
            <summary>
            Occurs when [list swapped].
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ListRemoved">
            <summary>
            Occurs when [list removed].
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ListAdded">
            <summary>
            Occurs when [list added].
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.PropertyUpdate">
            <summary>
            Occurs when [property update].
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ObjectDeleted">
            <summary>
            Occurs when [object deleted].
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ObjectCreated">
            <summary>
            Occurs when [object created].
            </summary>
        </member>
        <member name="E:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.SubscribedChange">
            <summary>
            Occurs when [subscribed change].
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.MarshalEventsToObjectCreatorThread">
            <summary>
            If true, all Events will be fired on the thread that created this Session.
            This is helpful if you use the Events to update the UI.
            In order for that to work correctly, you need a SynchronizationContext.Current
            when the Session is created (if this was done on the UI thread, then the SynchronizationContext.Current
            is there by default.
            The default value of this property is true.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.TimerFrequency">
            <summary>
            Subscription Update Frequency in milliseconds
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ClientApplicationName">
            <summary>
            Gets or sets the name of your client application.
            This is used when the subscription for event is made and then can be seen in SubscriptionAdmin.
            It is initialized with the current process name, but can be set by the application so it contains
            a more human-readable value.
            </summary>
            <value>
            The name of the client application.
            </value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentCallbackEndpoint">
            <summary>
            Current Callback Endpoint base address. Used for notifications from CM service to this proxy.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentCallbackEndpointGateway">
            <summary>
            Address of the Gateway through which the actual callback endpoint can be reached (in a cluster environment).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ProvidedCallbackEndpoint">
            <summary>
            Provided Callback Endpoint base address. A GUID is attached to that base address before hosting the callback.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ProvidedCallbackEndpointGateway">
            <summary>
            Gateway address through which the actual callback endpoint can be reached (in a cluster environment).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentSubscriptionManagerEndpoint">
            <summary>
            Current Core computer name
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentSubscriptionIdentifier">
            <summary>
            Current SubscriptionIdentifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentConfigurationManagerCallbackEndpoint">
            <summary>
            Current Callback Endpoint base address. Used for notifications from CM service to this proxy.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentGatewayComputer">
            <summary>
            Current gateway (computer name or IP) through which the actual callback endpoint can be reached (Used for notifications from CM service to this proxy in a cluster environment).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentConfigurationManagerCallbackGatewayPort">
            <summary>
            Current gateway port through which the actual callback endpoint can be reached (Used for notifications from CM service to this proxy in a cluster environment).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentConfigurationManagerEndpoint">
            <summary>
            Current Endpoint address of the Configuration Manager. Used for communicating with the CM service.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ReliableNotifications">
            <summary>
            If ReliableNotifications is true, all notification packets will be spooled on the WS Eventing side
            in case the client is down. To specify the time for spooling, use the NotificationTimeSpan property.
            By default, this is disabled.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.NotificationTimeSpan">
            <summary>
            Timeout TimeSpan for NotificationUpdates. 
            If ReliableNotifications is set to true, setting this value to 1 day will result in that events will be spooled in Eventing
            for 1 day if your application is not up and running (default is 2 hours)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CurrentFactoryCalendarEndpoint">
            <summary>
            Current Endpoint of FactoryCalendar service
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.OpenTimeout">
            <summary>
            Gets or sets the open timeout.
            </summary>
            <value>
            The open timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CloseTimeout">
            <summary>
            Gets or sets the close timeout.
            </summary>
            <value>
            The close timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.Resources">
            <summary>
            The List of Resources
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CalendarModel">
            <summary>
            Gets the Calendar Model and loads it if it hasn't been loaded yet
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ReloadCalendarModel">
            <summary>
            Reloads the Calendar Model 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.Teams">
            <summary>
            The List of Teams
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CustomStates">
            <summary>
            The List of CustomStates
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GroupReasons">
            <summary>
            The List of GroupReasons
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ServiceAlive">
            <summary>
            Gets a value indicating whether the FC service is alive.
            </summary>
            <value>
              <c>true</c> if the FC service is alive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.CallbackEndpointAddress">
            <summary>
            The callback endpoint address for the update event subscription
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.SymbolicId">
            <summary>
            Symbolic Id for Sub objects (AppointmentException, etc)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.SetCertificateForCallback(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.X509FindType,System.Security.Cryptography.X509Certificates.StoreName,System.String)">
            <summary>
            Sets the certificate for the callback service which is used for both the FC and CM callback
            </summary>
            <param name="storeLocation">The store location.</param>
            <param name="findType">Type of the find.</param>
            <param name="storeName">Name of the store.</param>
            <param name="findValue">The find value.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.SetCertificateForClientAuthentication(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.X509FindType,System.Security.Cryptography.X509Certificates.StoreName,System.String)">
            <summary>
            Sets the certificate parameters that are used as client credentials to connect to the service
            </summary>
            <param name="storeLocation">The store location.</param>
            <param name="findType">Type of the find.</param>
            <param name="storeName">Name of the store.</param>
            <param name="findValue">The find value.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.SubscribeForCalendarItems(Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription)">
            <summary>
            Subscribes for calendar items.
            </summary>
            <param name="subscription">The subscription.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.UnsubscribeForCalendarItems(Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.UpdateSubscription)">
            <summary>
            Unsubscribe for calendar items.
            </summary>
            <param name="subscription">The subscription.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.SaveOptions">
            <summary>
            Save the Factory Calendar options back to the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ForceCheckAlive">
            <summary>
            Forces a check alive call towards the service.
            </summary>
            <returns>True, in case the service could be reached and is alive.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetDataString">
            <summary>
            Returns a string representation of the whole model including all other properties
            </summary>
            <returns>A string representation of the whole model including all other properties</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.UpdateCustomState(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CustomState)">
            <summary>
            Update the CustomState to the Database
            </summary>
            <param name="proxyCustomState">The CustomState to Update</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.AddResource(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource)">
            <summary>
            Add the Resource to the Database
            </summary>
            <param name="proxyResource">The Resource to Add</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.UpdateResource(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource)">
            <summary>
            Update the Resource to the Database
            </summary>
            <param name="proxyResource">The Resource to Update</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.DeleteResource(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource)">
            <summary>
            Delete the Resource from the Database
            </summary>
            <param name="proxyResource">The Resource to Delete</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.AddTeam(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team)">
            <summary>
            Add the Team to the Database
            </summary>
            <param name="proxyTeam">The Team to Add</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.UpdateTeam(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team)">
            <summary>
            Update the Team to the Database
            </summary>
            <param name="proxyTeam">The Team to Update</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.DeleteTeam(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team)">
            <summary>
            Delete the Team from the Database
            </summary>
            <param name="proxyTeam">The Team to Delete</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.AddAppointment(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Add the Appointment to the Database
            </summary>
            <param name="proxyAppointment">The Appointment to Add</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.DeleteAppointment(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Delete the Appointment from the Database
            </summary>
            <param name="proxyAppointment">The Appointment to Delete</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.UpdateAppointment(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Appointment)">
            <summary>
            Update the Appointment to the Database
            </summary>
            <param name="proxyAppointment">The Appointment to Update</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.NotifyCalendarModelUpdated">
            <summary>
            Updates the CalendarModel instance from ObjectCache
            (It seems like the CalendarModel is still not updated after the object in the ObjectCache was updated) 
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.PrepareSubscribedUpdateEvent(Asm.As.Oib.FactoryCalendar.Proxy.Architecture.Notifications.NotificationBaseArgs)">
            <summary>
            Prepares the subscribed update event.
            </summary>
            <param name="args">The arguments.</param>
            <remarks> Send Update Event if result from GetCalendarItems() different from result last time </remarks>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.GetCalendarModelInstance">
            <summary>
            Get the Calendar Model and loads it if it hasn't been loaded yet
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.ReloadCalendarModelInstance">
            <summary>
            Get the Calendar Model and loads it if it hasn't been loaded yet
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.StartCheckAliveTimer">
            <summary>
            Starts the check alive timer.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendar.OnDispose">
            <summary>
            Called when the base class Dispose method called to ensure the super class is disposed as well.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery">
            <summary>
            Query Engine for Factory Calendar Items
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.#ctor">
            <summary>
            Default constructor.
            Uses the configured default endpoint in the application configuration file.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
            <summary>
            Constructor used when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">
            EndpointAddress of the hosted service in the client that receives notifications from
            the FC service.
            </param>
            <param name="cmCallbackEndpoint">
            EndpointAddress of the hosted service in the client that receives notifications from
            the CM service.
            </param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetInstance">
            <summary>
            Get the current instance of this class
            </summary>
            <returns>A new factory calendar query instance if it does not exist yet or the existing one.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
            <summary>
            Gets the current instance of this class when no configuration file is present.
            </summary>
            <param name="fcEndpointAddress">EndpointAddress of the Factory Calendar service.</param>
            <param name="fcCallbackEndpoint">
            EndpointAddress of the hosted service in the client that receives notifications from
            the FC service.
            </param>
            <param name="cmCallbackEndpoint">
            EndpointAddress of the hosted service in the client that receives notifications from
            the CM service.
            </param>
            <param name="cmEndpoint">EndpointAddress of the Configuration Manager service.</param>
            <param name="subscriptionManagerEndpoint">EndpointAddress of the Subscription Manager service.</param>
            <returns>Instance of the Factory Calendar Query object.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetCalendarItems(System.DateTime,System.DateTime)">
            <summary>
            Method to get all appointments within the Start/End Time considering the Recurrence pattern as well.
            </summary>
            <param name="dtStartTimeUtc">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTimeUtc">The End Time range to return the Calendar Items for</param>
            <returns>All appointments within the Start/End Time considering the Recurrence pattern as well</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.Int32)">
            <summary>
            Gets the Calendar Items in the range of a time for a given Factory Layout Element
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="nFactoryLayoutElementId">The Isa95 Factory Layout Id associated with the Configuration Manager object</param>
            <returns>The Calendar Items for the Factory Layout Element</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.Int32,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[],System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}}@)">
            <summary>
            Gets the Calendar Items in the range of a time for a given Factory Layout Element
            Overloaded for Additional Appointment Types to include
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="nFactoryLayoutElementId">The Isa95 Factory Layout Id associated with the Configuration Manager object</param>
            <param name="addtionalAppointmentTypesInclusive">The Additional Appointment Types to return lists for.</param>
            <param name="dictAdditionalCalendarItems">
            Dictionary of Additional Calendar Items with each AppointmentType having its
            associated List of Calendar Items
            </param>
            <returns>The Calendar Items for the Factory Layout Element</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetStationCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String)">
            <summary>
            Get the Calendar Items given a Station Path
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="strStationPath">
            The SIPLACE Pro Station Identity Path  of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Station Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetStationCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[],System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}}@)">
            <summary>
            Get the Calendar Items given a Station Path. Overloaded for Additional Appointment Types to include
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="strStationPath">
            The SIPLACE Pro Station Identity Path  of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <param name="addtionalAppointmentTypesInclusive">The Additional Appointment Types to return lists for.</param>
            <param name="dictAdditionalCalendarItems">
            Dictionary of Additional Calendar Items with each AppointmentType having its
            associated List of Calendar Items
            </param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Station Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetStationCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String,System.String)">
            <summary>
            Get the Calendar Items given a Station Path
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="strStationPath">
            The SIPLACE Pro Device (Station, Printer, GenericLineDevice) Identity Path  of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <param name="deviceType">Type of the device. 'Station', 'Printer' and 'GenericLineDevice' are supported</param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Station Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetStationCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String,System.String,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[],System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}}@)">
            <summary>
            Get the Calendar Items given a Station Path. Overloaded for Additional Appointment Types to include
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="strStationPath">
            The SIPLACE Pro Device (Station, Printer, GenericLineDevice) Identity Path  of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <param name="addtionalAppointmentTypesInclusive">The Additional Appointment Types to return lists for.</param>
            <param name="dictAdditionalCalendarItems">
            Dictionary of Additional Calendar Items with each AppointmentType having its
            associated List of Calendar Items
            </param>
            <param name="deviceType">Type of the device. 'Station', 'Printer' and 'GenericLineDevice' are supported</param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Station Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetStationCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String,System.String,System.String,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[],System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}}@)">
            <summary>
            Get the Calendar Items given a Station Path. Overloaded for Additional Appointment Types to include
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="strStationPath">
            The SIPLACE Pro Device (Station, Printer, GenericLineDevice) Identity Path  of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <param name="deviceType">Type of the device. 'Station', 'Printer' and 'GenericLineDevice' are supported</param>
            <param name="siplaceProDatabaseId">The siplace pro database identifier.</param>
            <param name="addtionalAppointmentTypesInclusive">The Additional Appointment Types to return lists for.</param>
            <param name="dictAdditionalCalendarItems">
            Dictionary of Additional Calendar Items with each Appointment Type having its
            associated List of Calendar Items
            </param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Station Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetLineCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String)">
            <summary>
            Get the Calendar Items given a Line Path.
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="strLinePath">
            The SIPLACE Pro Line Identity Path of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Line Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetLineCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[],System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}}@)">
            <summary>
            Get the Calendar Items given a Line Path. Overloaded for Additional Appointment Types to include
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="strLinePath">
            The SIPLACE Pro Line Identity Path of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="addtionalAppointmentTypesInclusive">The Additional Appointment Types to return lists for.</param>
            <param name="dictAdditionalCalendarItems">
            Dictionary of Additional Calendar Items with each AppointmentType having its
            associated List of Calendar Items
            </param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Line Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetLineCalendarItems(System.DateTime,System.DateTime,System.Boolean,System.String,System.String,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[],System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}}@)">
            <summary>
            Get the Calendar Items given a Line Path. Overloaded for Additional Appointment Types to include
            </summary>
            <param name="dtStartTime">The Start Time range to return the Calendar Items for</param>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="bIncludeInheritence">
            True to include the inherited Isa95 Objects appointments, false only the Calendar
            Items for this Isa95 object.
            </param>
            <param name="strLinePath">
            The SIPLACE Pro Line Identity Path of the Factory Layout object associated with the
            Configuration Manager object
            </param>
            <param name="siplaceProDatabaseId">The siplace pro database identifier.</param>
            <param name="addtionalAppointmentTypesInclusive">The Additional Appointment Types to return lists for.</param>
            <param name="dictAdditionalCalendarItems">
            Dictionary of Additional Calendar Items with each AppointmentType having its
            associated List of Calendar Items
            </param>
            <returns>The Calendar Items for a Factory Layout Element that matches the given a Line Path</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetChildIsa95ObjectIdsFromId(System.Int32)">
            <summary>
            Gets the child isa95 object OIDs from given OID including his own OID.
            </summary>
            <param name="nId">The OID from witch you would like to get the child OIds.</param>
            <returns> List of child object OIds</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetSiblingIsa95ObjectIdsFromId(System.Int32)">
            <summary>
            Gets the sibling isa95 object OIDs from the OID.
            </summary>
            <param name="nId">The OID.</param>
            <returns> List of sibling object OIds</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetIsa95IdFromSiProFullPath(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Returns the Isa95 OID from a given path.
            </summary>
            <param name="strSiProFullPath">The SIPLACE Pro full path of the station or line.</param>
            <param name="bIsStation">if set to <c>true</c> we look for a station, otherwise a line.</param>
            <param name="deviceType">Type of the device.</param>
            <param name="siplaceProDatabaseId">The siplace pro database identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.SortCalendarItemsByInheritanceRules(System.Collections.Generic.List{System.Int32},System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}})">
            <summary>
            Sort the Calendar Items when considering the Override Precedence rules
            </summary>
            <param name="listIsa95Objects">The List of Inheritance Isa95 Objects</param>
            <param name="dictCalendarItemsParsedByType">The Calendar Items associated with all the Isa95 Objects</param>
            <returns>The sorted Calendar Items when considering the Override Precedence rules</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetCalendarItemsApplyingPrecedenceRules(System.DateTime,System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}},Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType[])">
            <summary>
            Apply the Business Rules for flattening out the Calendar Items
            Precedence
            1)	Holiday
            2)	ScheduledDowntime
            3)	Shift
            </summary>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="dictCalendarItemsParsedByType">Parsed Dictionary of Calendar Items</param>
            <param name="appointmentTypePrecedences">The Appointment Types to check against.</param>
            <returns>Flattened list of Calendar Items after applying the business rules.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.ExistsOneItemWithSameDateTime(System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem},Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem)">
            <summary>
            Exists the one item with same date time in the List.
            </summary>
            <param name="listCalendarItems">The list of calendar items.</param>
            <param name="calendarItemToFind">The calendar item to find.</param>
            <returns>We need this function that only compare the Start and EndTime (Date,Hour,Minute,Second) </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.ExistsOverlappingItem(System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem},Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem)">
            <summary>
            Exists the one item that overlaps one item in the list
            </summary>
            <param name="listCalendarItems">The list of calendar items.</param>
            <param name="calendarItemToFind">The calendar item to find.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetCalendarItemsPerAppointmentType(System.DateTime,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem})">
            <summary>
            Get the Appointment Types for a particular Appointment Type
            </summary>
            <param name="dtEndTime">The End Time range to return the Calendar Items for</param>
            <param name="listParsedCalendarItems">Parsed List of Calendar Items</param>
            <returns>Flattened list of Calendar Items after applying the business rules.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetCalendarItemAtTime(System.DateTime,System.DateTime,System.Collections.Generic.Dictionary{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType,System.Collections.Generic.List{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem}},System.Collections.Generic.IEnumerable{Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType})">
            <summary>
            Get the Calendar Item for the exact instance in time with applying the AppointmentType business rules.
            </summary>
            <param name="dtCurrentTime">The current Time which we are analyzing to see if there is an appointment for that time</param>
            <param name="dtEndTime">The EndTime specified for the Query</param>
            <param name="dictCalendarItemsParsedByType">The set of all Calendar Items for the initial time span</param>
            <param name="appointmentTypePrecedences">The Appointment Types to check against.</param>
            <returns>The current Calendar Item that matches the criteria</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetCalendarItemAtTime(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem})">
            <summary>
            Get the Calendar Item for the exact instance in time.
            </summary>
            <param name="dtCurrentTime">The current Time which we are analyzing to see if there is an appointment for that time</param>
            <param name="dtEndTime">The EndTime specified for the Query</param>
            <param name="listCalendarItemsParsedByType">
            The set of all Calendar Items for the initial time span per Appointment
            Type
            </param>
            <returns>The current Calendar Item that matches the criteria</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.FactoryCalendarQuery.GetSortedItems(System.Collections.Generic.IEnumerable{Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.CalendarItem})">
            <summary>
            Returns the Sorted Calendar Items from an Unsorted array
            </summary>
            <param name="unsortedItems">The unsorted array of Calendar Items.</param>
            <returns>The Sorted Array of Calendar Items.</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason">
            <summary>
            The group reason for the sub state for the "Scheduled Downtime" and "Non-Scheduled Time" appointment types
            defines the sub state in more detail
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.Name">
            <summary>
            The Name of the GroupReason
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.Id">
            <summary>
            The GroupReason Unique Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.Description">
            <summary>
            The Description of the GroupReason
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.Value">
            <summary>
            The Value of the GroupReason
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.CustomStateId">
            <summary>
            The GroupReason Unique Identifier
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.Create(System.String,System.String,System.Int32)">
            <summary>
            Default method for creating a GroupReason
            </summary>
            <param name="strDescription">The description</param>
            <param name="strValue">The value</param>
            <param name="customStateId">The custom state id that this group reason belongs to</param>
            <returns>New GroupReason than can be updated.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.Equals(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason)">
            <summary>
            Equal Operator for specialized comparison that takes a CustomState object type
            </summary>
            <param name="other">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.Equals(System.Object)">
            <summary>
            Equal Operator for specialized comparison
            </summary>
            <param name="obj">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.GetHashCode">
            <summary>
            Get the Hash code of the object instance used for object comparison/uniqueness
            </summary>
            <returns>The unique hash code</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.OnBackup">
            <summary>
            Backup the state of the internal data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.OnRestore">
            <summary>
            Restore any changes that were made to the original version (Rollback)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.OnDeleteObject">
            <summary>
            Called when [delete object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.GroupReason.OnUpdateObject">
            <summary>
            Called when [update object].
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings">
            <summary>
            MonthlyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Called when creating a new Appointment
            </summary>
            <param name="appointmentRecurrence">The new Appointment Recurrence just instantiated</param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.IsDirty">
            <summary>
            Flag whether the object has changes to be saved or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.RecurrenceUsage">
            <summary>
            Gets the current Recurrence Usage for the current pattern settings.
            </summary>
            <value>The recurrence usage.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.RelativeDayOfWeek">
            <summary>
            Gets or sets the relative day of week.
            </summary>
            <value>The relative day of week.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.RepeatInterval">
            <summary>
            Gets or sets the repeat interval.
            </summary>
            <value>The repeat interval.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.RepeatOnDayOfMonth">
            <summary>
            Gets or sets the repeat on day of month.
            </summary>
            <value>The repeat on day of month.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.RepeatOnRelativeDayInMonth">
            <summary>
            Gets or sets the repeat on relative day in month.
            </summary>
            <value>The repeat on relative day in month.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.CopyTo(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings)">
            <summary>
            Copies content of this MonthlyRecurrenceSettings to the target MonthlyRecurrenceSettings
            </summary>
            <param name="targetMonthlyRecurrenceSettings">The target MonthlyRecurrenceSettings to fill out</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.CreateDataContractBackup">
            <summary>
            Create a Backup of the DataContract
            </summary>
            <returns>The Backup of the DataContract</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.Restore(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.MonthlyRecurrenceSettings)">
            <summary>
            Restore the DataContract from a CancelChanges operation (error)
            </summary>
            <param name="dcRestore">The Data contract to Restore</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.MonthlyRecurrenceSettings.SetDirty(System.Boolean)">
            <summary>
            Set the Dirty state of the object (usually will be cleaning the state after a Save()
            </summary>
            <param name="bDirty">Set the State to Dirty or not dirty</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource">
            <summary>
            A resource consists of a person that can be assigned to a team
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.Id">
            <summary>
            The Resource Unique Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.FirstName">
            <summary>
            The First Name of the Resource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.LastName">
            <summary>
            The First Name of the Resource
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.Description">
            <summary>
            Detailed Description of the Resource
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.Create">
            <summary>
            Default method for creating a Resource
            </summary>
            <returns>New Resource than can be updated.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.Create(System.String,System.String,System.String)">
            <summary>
            Default method for creating a Resource
            </summary>
            <param name="strFirstName">First Name</param>
            <param name="strLastName">Last Name</param>
            <param name="strDescription">Description/Comment</param>
            <returns>New Resource with preset first name, last name and description</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.Equals(System.Object)">
            <summary>
            Equal Operator for specialized comparison
            </summary>
            <param name="obj">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.Equals(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource)">
            <summary>
            Equal Operator for specialized comparison that takes an Appointment object type
            </summary>
            <param name="other">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.GetHashCode">
            <summary>
            Get the Hash code of the object instance used for object comparison/uniqueness
            </summary>
            <returns>The unique hash code</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.OnDeleteObject">
            <summary>
            Called when [delete object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.OnUpdateObject">
            <summary>
            Called when [update object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.OnBackup">
            <summary>
            Backup the state of the internal data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource.OnRestore">
            <summary>
            Restore any changes that were made to the original version (Rollback)
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team">
            <summary>
            A team consists of 0 or more team members (Resources) that can be assigned to an appointment
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Id">
            <summary>
            The Team Unique Identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Name">
            <summary>
            The Name of the Team
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Description">
            <summary>
            Detailed Description of the Team
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Resources">
            <summary>
            The Array of Resources
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.AddResource(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource)">
            <summary>
            Adds the resource.
            </summary>
            <param name="resource">The resource.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.AddResource(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource,System.Int32)">
            <summary>
            Adds the resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="nIndex">Index of the n.</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.ClearResources">
            <summary>
            Clears all the Resources
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Create">
            <summary>
            Default method for creating a Team
            </summary>
            <returns>New Team than can be updated.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Create(System.String,System.String)">
            <summary>
            Default method for creating a Team
            </summary>
            <param name="strName">The name of the team</param>
            <param name="strDescription">The description of the team</param>
            <returns>New Team than can be updated.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.DeleteResource(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Resource)">
            <summary>
            Deletes the Resource from the Team
            </summary>
            <param name="resource">The Resource to be removed form the team</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Equals(System.Object)">
            <summary>
            Equal Operator for specialized comparison
            </summary>
            <param name="obj">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.Equals(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team)">
            <summary>
            Equal Operator for specialized comparison that takes an Appointment object type
            </summary>
            <param name="other">The Other object to compare to</param>
            <returns>True if Equal, False otherwise.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.GetHashCode">
            <summary>
            Get the Hash code of the object instance used for object comparison/uniqueness
            </summary>
            <returns>The unique hash code</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.OnDeleteObject">
            <summary>
            Called when [delete object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.OnUpdateObject">
            <summary>
            Called when [update object].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.OnBackup">
            <summary>
            Backup the state of the internal data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.Team.OnRestore">
            <summary>
            Restore any changes that were made to the original version (Rollback)
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings">
            <summary>
            WeeklyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Called when creating a new Appointment
            </summary>
            <param name="appointmentRecurrence">The new Appointment Recurrence just instantiated</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WeeklyRecurrenceSettings)">
            <summary>
            Called when loading an Appointment
            </summary>
            <param name="dcWeeklyRecurrenceSettings"></param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.IsDirty">
            <summary>
            Flag whether the object has changes to be saved or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.RepeatInterval">
            <summary>
            Gets or sets the repeat interval.
            </summary>
            <value>The repeat interval.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.RepeatOnDaysOfWeek">
            <summary>
            Gets or sets the repeat on days of week.
            </summary>
            <value>The repeat on days of week.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.CopyTo(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings)">
            <summary>
            Copies content of one WeeklyRecurrenceSettings to the other
            </summary>
            <param name="targetWeeklyRecurrenceSettings">The target WeeklyRecurrenceSettings to fill out</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.CreateDataContractBackup">
            <summary>
            Create a Backup of the DataContract
            </summary>
            <returns>The Backup of the DataContract</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.Restore(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WeeklyRecurrenceSettings)">
            <summary>
            Restore the DataContract from a CancelChanges operation (error)
            </summary>
            <param name="dcRestore">The Data contract to Restore</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WeeklyRecurrenceSettings.SetDirty(System.Boolean)">
            <summary>
            Set the Dirty state of the object (usually will be cleaning the state after a Save()
            </summary>
            <param name="bDirty">Set the State to Dirty or not dirty</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay">
            <summary>
            The Work Day definition for the Calendar Options
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.DayOfWeek">
            <summary>
            The Day of the Week
            <remarks>
            Calling the setter triggers an Exception.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Changing the value is not allowed.</exception>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.Active">
            <summary>
            Whether this work day is active
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.StartHour">
            <summary>
            The default starting time of the work day
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.StartMinute">
            <summary>
            The Starting Minute of the work day
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.EndHour">
            <summary>
            The Ending hour of the work day
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.EndMinute">
            <summary>
            The ending Minute of the work day
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.WorkDay.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings">
            <summary>
            YearlyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.AppointmentRecurrence)">
            <summary>
            Called when creating a new Appointment
            </summary>
            <param name="appointmentRecurrence">The new Appointment Recurrence just instantiated</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.#ctor(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.YearlyRecurrenceSettings)">
            <summary>
            Called when loading an Appointment
            </summary>
            <param name="dcYearlyRecurrenceSettings"></param>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.IsDirty">
            <summary>
            Flag whether the object has changes to be saved or not
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.RecurrenceUsage">
            <summary>
            Gets the current Recurrence Usage for the current pattern settings.
            </summary>
            <value>The recurrence usage.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.RelativeDayOfWeek">
            <summary>
            Gets or sets the relative day of week.
            </summary>
            <value>The relative day of week.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.RepeatOnDayOfMonth">
            <summary>
            Gets or sets the repeat on day of month.
            </summary>
            <value>The repeat on day of month.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.RepeatOnMonth">
            <summary>
            Gets or sets the repeat on month.
            </summary>
            <value>The repeat on month.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.RepeatOnRelativeDayInMonth">
            <summary>
            Gets or sets the repeat on relative day in month.
            </summary>
            <value>The repeat on relative day in month.</value>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.CopyTo(Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings)">
            <summary>
            Copies content of this YearlyRecurrenceSettings to the target YearlyRecurrenceSettings
            </summary>
            <param name="targetYearlyRecurrenceSettings">The target YearlyRecurrenceSettings to fill out</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.CreateDataContractBackup">
            <summary>
            Create a Backup of the DataContract
            </summary>
            <returns>The Backup of the DataContract</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.Restore(Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.YearlyRecurrenceSettings)">
            <summary>
            Restore the DataContract from a CancelChanges operation (error)
            </summary>
            <param name="dcRestore">The Data contract to Restore</param>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Objects.YearlyRecurrenceSettings.SetDirty(System.Boolean)">
            <summary>
            Set the Dirty state of the object (usually will be cleaning the state after a Save()
            </summary>
            <param name="bDirty">Set the State to Dirty or not dirty</param>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType">
            <summary>
            AppointmentType
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType.Holiday">
            <summary>
            Non-Scheduled Time (Holiday)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType.ScheduledDowntime">
            <summary>
            Scheduled Downtime
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType.EngineeringTime">
            <summary>
            Engineering Time
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType.Shift">
            <summary>
            Shift
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.AppointmentType.InheritanceBlocker">
            <summary>
            Inheritance Blocker
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrenceExtensions">
            <summary>
            Additional useful functions for DayOfWeekRecurrence enum
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrenceExtensions.CountDaysPerWeek(Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence)">
            <summary>
            Counts selected days per week.
            </summary>
            <param name="days">Selected days.</param>
            <returns>Amount of selected days in a week.</returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrenceExtensions.Contains(Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek)">
            <summary>
            Determines whether this instance includes the specified day of week.
            </summary>
            <param name="days">Selected days of week.</param>
            <param name="dayOfWeek">Day of week.</param>
            <returns>
              <c>true</c> if [contains] [the specified day of week]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrenceExtensions.Contains(Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence,System.DayOfWeek)">
            <summary>
            Determines whether this instance includes the specified day of week.
            </summary>
            <param name="days">Selected days of week.</param>
            <param name="dayOfWeek">Day of week.</param>
            <returns>
              <c>true</c> if [contains] [the specified day of week]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrenceExtensions.Contains(Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence,Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence)">
            <summary>
            Determines whether this instance includes the specified day of week.
            </summary>
            <param name="days">Selected days of week.</param>
            <param name="dayOfWeek">Day of week.</param>
            <returns>
              <c>true</c> if [contains] [the specified day of week]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrenceUsage">
            <summary>
            Specifies the recurrence usage for the monthly/yearly recurrences.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrenceUsage.RelativeDay">
            <summary>
            The Pattern is using the Relative Day settings. For example, The Fourth Wednesday of the Month
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrenceUsage.SpecificDay">
            <summary>
            The Pattern is using the Specific Day settings. For example, The 5th of the Month
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DailyRecurrenceRepeat">
            <summary>
            Specifies on which days daily recurrence is repeated.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DailyRecurrenceRepeat.All">
            <summary>
            Appointment is repeated on all days.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DailyRecurrenceRepeat.WeekDays">
            <summary>
            Appointment is repeated on week-days only, Monday-Friday.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek">
            <summary>
            DayOfWeek
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeek.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence">
            <summary>
            Specifies on which day the appointment is repeated.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.WeekendDays">
            <summary>
            WeekendDays = Saturday | Sunday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.WeekDays">
            <summary>
            WeekDays = Monday | Tuesday | Wednesday | Thursday | Friday
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.DayOfWeekRecurrence.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrencePatternType">
            <summary>
            Specifies the pattern type for appointment recurrence.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrencePatternType.Daily">
            <summary>
            Appointment recurs daily.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrencePatternType.Weekly">
            <summary>
            Appointment recurs weekly.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrencePatternType.Monthly">
            <summary>
            Appointment recurs monthly.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrencePatternType.Yearly">
            <summary>
            Appointment recurs yearly.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrenceRangeLimitType">
            <summary>
            Specifies the recurrence range type.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrenceRangeLimitType.NoEndDate">
            <summary>
            Recurrence range has no end date specified.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrenceRangeLimitType.RangeEndDate">
            <summary>
            Recurrence ends on date specified by RangeEndDate property.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RecurrenceRangeLimitType.RangeNumberOfOccurrences">
            <summary>
            Recurrence ends after specified number of repeats by RangeNumberOfOccurrences property.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth">
            <summary>
            Specifies the relative day in month for recurrence.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth.None">
            <summary>
            No value specified.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth.First">
            <summary>
            The first occurrence of the specified day in its month. 
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth.Second">
            <summary>
            The second occurrence of the specified day in its month. 
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth.Third">
            <summary>
            The third occurrence of the specified day in its month. 
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth.Fourth">
            <summary>
            The fourth occurrence of the specified day in its month. 
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.RelativeDayInMonth.Last">
            <summary>
            The last occurrence of the specified day in its month. 
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State">
            <summary>
            State
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.RegularProduction">
            <summary>
            Regular Production
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.WorkFor3RdParty">
            <summary>
            Work For 3Rd Party
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.EngineeringRuns">
            <summary>
            Engineering Runs
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.NoOperator">
            <summary>
            No Operator
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.NoProduct">
            <summary>
            No Product
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.NoSuport">
            <summary>
            No Support
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.ProcessExperiments">
            <summary>
            Process Experiments
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.EquipmentExperiements">
            <summary>
            Equipment Experiments
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.MaintenanceDelay">
            <summary>
            Maintenance Delay
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.Repair">
            <summary>
            Repair
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.Changeover">
            <summary>
            Changeover
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.OutofSpecInput">
            <summary>
            Out of Spec Input
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.FacilitiesRelated">
            <summary>
            Facilities Related
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.ProductionTest">
            <summary>
            Production Test
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.PreventiveMaintenance">
            <summary>
            Preventive Maintenance
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.Installation">
            <summary>
            Installation
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.ModificationRebuildUpgrade">
            <summary>
            Modification Rebuild Upgrade
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.OfflineTraining">
            <summary>
            Offline Training
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.ShutdownStartup">
            <summary>
            Shutdown Startup
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.Rework">
            <summary>
            Rework
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.Setup">
            <summary>
            Setup
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.UnworkedShifts">
            <summary>
            Un-worked Shifts
            </summary>
        </member>
        <member name="F:Asm.As.Oib.FactoryCalendar.Proxy.Business.Types.State.Bypass">
            <summary>
            Bypass
            </summary>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CalendarModel">
            <summary>
            CalendarModel
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CalendarModel.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CalendarModel.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CalendarModel.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment">
            <summary>
            Appointment
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Appointment.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentException">
            <summary>
            AppointmentException
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentException.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentException.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentRecurrence">
            <summary>
            AppointmentRecurrence
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentRecurrence.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentRecurrence.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.AppointmentRecurrence.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.DailyRecurrenceSettings">
            <summary>
            DailyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.DailyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.DailyRecurrenceSettings.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.DailyRecurrenceSettings.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WeeklyRecurrenceSettings">
            <summary>
            WeeklyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WeeklyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WeeklyRecurrenceSettings.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WeeklyRecurrenceSettings.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.MonthlyRecurrenceSettings">
            <summary>
            MonthlyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.MonthlyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.MonthlyRecurrenceSettings.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.MonthlyRecurrenceSettings.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.YearlyRecurrenceSettings">
            <summary>
            YearlyRecurrenceSettings
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.YearlyRecurrenceSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.YearlyRecurrenceSettings.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.YearlyRecurrenceSettings.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Team">
            <summary>
            Team
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Team.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Team.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Team.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Resource">
            <summary>
            Resource
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Resource.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Resource.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.Resource.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CalendarOptions">
            <summary>
            CalendarOptions
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CalendarOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WorkDay">
            <summary>
            WorkDay
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WorkDay.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WorkDay.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.WorkDay.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CustomState">
            <summary>
            CustomState
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CustomState.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CustomState.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CustomState.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.GroupReason">
            <summary>
            GroupReason
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.GroupReason.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.GroupReason.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.GroupReason.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.NotificationPacket">
            <summary>
            NotificationPacket
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.NotificationPacket.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CMVariant">
            <summary>
            Variant type container class that can hold all kinds of different types inside. Look at the Type property to see what is contained.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.CMVariant.ToString">
            <summary>
            Returns a string representation of that object
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.UpdatePackage">
            <summary>
            UpdatePackage
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.FactoryCalendarServiceRef.UpdatePackage.ToString">
            <summary>
            Returns a string representation of that object
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.UnsubscribeRequest">
            <summary>
            UnsubscribeRequest
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.UnsubscribeRequest.ToString">
            <summary>
            Returns a string representation of that object
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Subscription">
            <summary>
            Subscription
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Subscription.ToString">
            <summary>
            Returns a string representation of that object
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.SubscribeResult">
            <summary>
            SubscribeResult
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.SubscribeResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.SubscriptionManager">
            <summary>
            SubscriptionManager
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.SubscriptionManager.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Identifier">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Identifier.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Expires">
            <summary>
            Expires
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Expires.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Delivery">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.Delivery.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.RenewResponse">
            <summary>
            RenewResponse
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.RenewResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.RenewResult">
            <summary>
            RenewResult
            </summary>
        </member>
        <member name="M:Asm.As.Oib.FactoryCalendar.Proxy.SubscriptionManagerRef.RenewResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.CallbackCertificateValue">
            <summary>
            Something like "CN=ASM.SW.Service"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.CallbackCertificateCommonName">
            <summary>
            Something like "ASM.SW.Service"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.CallbackCertificateStoreLocation">
            <summary>
            StoreLocation.LocalMachine or StoreLocation.CurrentUser
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.CallbackCertificateX509FindType">
            <summary>
            One of the X509FindType enum values (e.g. X509FindType.FindBySubjectDistinguishedName). The CallbackCertificateValue must match 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.CallbackCertificateStoreName">
            <summary>
            StoreName (typically StoreName.My)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.ClientCertificateValue">
            <summary>
            Something like "CN=ASM.SW.Client"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.ClientCertificateCommonName">
            <summary>
            Something like "ASM.SW.Client"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.ClientCertificateStoreLocation">
            <summary>
            StoreLocation.LocalMachine or StoreLocation.CurrentUser
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.ClientCertificateX509FindType">
            <summary>
            One of the X509FindType enum values (e.g. X509FindType.FindBySubjectDistinguishedName). The CallbackCertificateValue must match 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.FactoryCalendar.Proxy.ProxyEndpointHelper.ClientCertificateStoreName">
            <summary>
            StoreName (typically StoreName.My)
            </summary>
        </member>
    </members>
</doc>
