<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASM.AS.OIB.UserManagement.Proxy</name>
    </assembly>
    <members>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.CacheUpdatedEvent">
            <summary>
            Delegate for cache updates
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.ServiceUnreachableEvent">
            <summary>
            Will be fired whenever the service cannot be reached
            </summary>
            <param name="strServiceEndpoint">Service Endpoint</param>
            <param name="strComment">Comment</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.ServiceReconnectEvent">
            <summary>
            Will be fired whenever the service has reestablished connection and can be reached again
            </summary>
            <param name="strServiceEndpoint">Service Endpoint</param>
            <param name="strComment">Comment</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session">
            <summary>
            Session, the entry class to UM
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.MarshalEventsToSessionCreatorThread">
            <summary>
            If true, all Events will be fired on the thread that created the LineControl class.
            This is helpful if you use the Events to update the UI.
            In order for that to work correctly, you need a SynchronizationContext.Current
            when the LineControl class is created (if this was done on the UI thread, then the SynchronizationContext.Current
            is there by default.
            The default value of this property is true.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CacheUpdated">
            <summary>
            Event that is fired when the cache is updates
            </summary>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ServiceUnreachable">
            <summary>
            Will be fired whenever the service cannot be reached
            </summary>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ServiceReconnect">
            <summary>
            Will be fired whenever the service has reestablished connection and can be reached again
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.IsServiceAlive">
            <summary>
            Gets a value indicating whether this instance is alive.
            </summary>
            <value>
            <c>true</c> if this instance is service alive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.AdminServiceEndpoint">
            <summary>
            Gets the endpoint for the admin service.
            </summary>
            <value>
            The service endpoint.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ServiceComputerName">
            <summary>
            Gets or sets the computer name where the user management service is running.
            </summary>
            <value>The computer name where the user management service is running.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.UseSecureEndpoints">
            <summary>
            If true, uses secure endpoints for communication with the user manager service.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ConnectToBridge">
            <summary>
            If true, uses the bridge secure endpoints for communication with the user manager service.
            Setting this to true will automatically set the UseSecureEndpoints to true as well.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.TcpPortNumber">
            <summary>
            Gets or sets the tcp port number.
            </summary>
            <value>The service port number.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.HttpPortNumber">
            <summary>
            Gets or sets the http port number.
            </summary>
            <value>The service port number.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ServiceProtocol">
            <summary>
            Gets or sets the protocol ("net.tcp" or "http") that is used to connect to the UM Service.
            </summary>
            <value>The protocol("net.tcp" or "http").</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.OpenTimeout">
            <summary>
            Gets or sets the open timeout.
            </summary>
            <value>
            The open timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CloseTimeout">
            <summary>
            Gets or sets the close timeout.
            </summary>
            <value>
            The close timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.OIBCoreAndDbInfo">
            <summary>
            Gets the OIB core and database information.
            The service asks for info only once, due to the info is not going to change on runtime. 
            </summary>
            <value>
            The OIB core and database information.
            </value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.SetCertificateForClientAuthentication(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.X509FindType,System.Security.Cryptography.X509Certificates.StoreName,System.String)">
            <summary>
            Sets the certificate parameters that are used as client credentials to connect to the service
            </summary>
            <param name="storeLocation">The store location.</param>
            <param name="findType">Type of the find.</param>
            <param name="storeName">Name of the store.</param>
            <param name="findValue">The find value.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ToString">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.AssignSynchronizationContext(System.Threading.SynchronizationContext)">
            <summary>
            Assigns the synchronization context.
            </summary>
            <param name="context">The SynchronizationContext.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CheckAlive">
            <summary>
            Checks if the service is alive.
            </summary>
            <returns>True, if service is alive, otherwise false</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ClearObjectCache">
            <summary>
            Clears the object cache.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateAccount(System.String,System.String)">
            <summary>
            Creates the account.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <returns>New Account</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateAllowableValue(System.String)">
            <summary>
            Creates the allowable value.
            </summary>
            <param name="value">The value.</param>
            <returns>New AllowableValue</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateClaimType(System.String,System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType,Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType)">
            <summary>
            Creates the type of the claim.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="displayName">The display name.</param>
            <param name="product">The product.</param>
            <param name="scope">The scope.</param>
            <param name="valueType">Type of the value.</param>
            <returns>New ClaimType</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateProduct(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the product.
            </summary>
            <param name="name">The name.</param>
            <param name="version">The version.</param>
            <param name="description">The description.</param>
            <param name="company">The company.</param>
            <param name="uniqueId">The unique id.</param>
            <returns>New Product</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateRole(System.String,System.String)">
            <summary>
            Creates the role.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <returns>New Role</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateRole(System.String,System.String,System.String)">
            <summary>
            Creates the role.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="adGroupName">Active Directory Group</param>
            <returns>New Role</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateUserNamePasswordCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String,System.String,System.Boolean)">
            <summary>
            Creates the user name password credential.
            </summary>
            <param name="account">The account.</param>
            <param name="product">The product.</param>
            <param name="userName">The user id.</param>
            <param name="password">The password.</param>
            <param name="isLoginCredential">if set to <c>true</c> [is login credential].</param>
            <returns>New Credential</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateSimpleUserNamePasswordCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String,System.String,System.Boolean)">
            <summary>
            Creates the simple user name password credential.
            </summary>
            <param name="account">The account.</param>
            <param name="product">The product.</param>
            <param name="userName">The user id.</param>
            <param name="password">The password.</param>
            <param name="isLoginCredential">if set to <c>true</c> [is login credential].</param>
            <returns>New Credential</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateCustomLoginCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String)">
            <summary>
            Creates the windows credential.
            </summary>
            <param name="account">The account.</param>
            <param name="product">The product.</param>
            <param name="userId">The user id.</param>
            <returns>New Custom Logon Credential</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.CreateWindowsCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String)">
            <summary>
            Creates the windows credential.
            </summary>
            <param name="account">The account.</param>
            <param name="product">The product.</param>
            <param name="userId">The user id.</param>
            <returns>New Windows Credential</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.SynchronizeAdGroups">
            <summary>
            Synchronize Active Directory Groups
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.DeleteObject(System.Object)">
            <summary>
            Deletes the object.
            </summary>
            <param name="objectToDelete">The object to delete.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.DeleteAllowableValues(Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValues)">
            <summary>
            Deleted AllowableValues from Database
            </summary>
            <param name="allowableValues"></param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.DeleteProductAndAllItsClaimTypes(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product)">
            <summary>
            Deletes a product and deletes all the product's claim types first.
            Removes the claims for those claim types from roles, accounts and credentials
            and then deletes the product.
            </summary>
            <param name="product">The product to delete</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ExportData">
            <summary>
            Exports the data.
            </summary>
            <returns>The exported contents of the user management model</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAccount(System.Int32)">
            <summary>
            Gets the account.
            </summary>
            <param name="id">The id.</param>
            <returns>Account, if Id is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAccount(System.Int32,System.Boolean)">
            <summary>
            Gets the account.
            </summary>
            <param name="id">The id.</param>
            <param name="useCache">Uses the account cache. This cache is not updating, so only use if you are not interested in latest updates!</param>
            <returns>Account, if Id is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAccount(System.String)">
            <summary>
            Gets the account.
            </summary>
            <param name="name">The name.</param>
            <returns>Account, if Account with name is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAccount(System.String,System.Boolean)">
            <summary>
            Gets the account.
            </summary>
            <param name="name">The name.</param>
            <param name="useCache">Uses the account cache. This cache is not updating, so only use if you are not interested in latest updates!</param>
            <returns>Account, if Account with name is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAllAccounts">
            <summary>
            Gets all accounts.
            </summary>
            <returns>All Accounts in the system</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAllowableValue(System.String)">
            <summary>
            Gets the allowable value.
            </summary>
            <param name="value">The value.</param>
            <returns>AllowableValue, if AllowableValue with value is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAllProducts">
            <summary>
            Gets all products.
            </summary>
            <returns>All Products that are in the system</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetAllRoles">
            <summary>
            Gets all roles.
            </summary>
            <returns>All Roles in the system</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetClaimType(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String)">
            <summary>
            Gets the type of the claim.
            </summary>
            <param name="product">The product that the claim is associated with.</param>
            <param name="name">The name.</param>
            <returns>ClaimType, if ClaimType with name is present in provided Product, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetClaimType(System.Int32)">
            <summary>
            Gets the type of the claim.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetInstance">
            <summary>
            Gets the Session instance.
            </summary>
            <returns>The Session instance</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetProduct(System.Int32)">
            <summary>
            Gets the product.
            </summary>
            <param name="id">The id.</param>
            <returns>Product, if Id is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetProduct(System.String,System.String)">
            <summary>
            Gets the product.
            </summary>
            <param name="name">The name.</param>
            <param name="version">The version.</param>
            <returns>Product, if Product with name and version is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetProduct(System.String)">
            <summary>
            Gets the product.
            </summary>
            <param name="uniqueId">The unique id.</param>
            <returns>Product, if Product with uniqueId is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetRole(System.Int32)">
            <summary>
            Gets the role.
            </summary>
            <param name="id">The id.</param>
            <returns>Role, if Id is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetRole(System.String)">
            <summary>
            Gets the role.
            </summary>
            <param name="name">The name.</param>
            <returns>Role, if Role with name is present, otherwise null</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetRoles(System.String,System.String)">
            <summary>
            Gets all roles that match the specified claim type and value.
            </summary>
            <param name="claimType">The ClaimType string (including namespace).</param>
            <param name="value">The value.</param>
            <returns>All roles that have such a claim type/value pair as associated RoleClaim</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ImportData(System.String)">
            <summary>
            Imports the data.
            </summary>
            <param name="xml">The XML data in the format that corresponds to what you get with ExportData()</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ImportJson(System.String,Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonType)">
            <summary>
            Imports UM data from json string
            </summary>
            <param name="json">Import data in Json format</param>
            <param name="type">If this is specified, the overwrites the import type (if present in json file)</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ImportJsonFromFile(System.String)">
            <summary>
            Imports UM data from json import file
            </summary>
            <param name="jsonFilePath">Path to the file that contains the data to import</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.IsJsonValid(System.String,System.Collections.Generic.IList{System.String}@)">
            <summary>
            Checks if the json that is passed in matches the excepted schema.
            </summary>
            <param name="json">Import data in Json format</param>
            <param name="errorMessages">The list of error messages in case the json did not match the schema</param>
            <returns>True, if the schema of the json is ok, otherwise returns false</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.GetSettings">
            <summary>
            Gets the User Manager’s settings.
            </summary>
            <returns>The settings</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.SetSettings(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings)">
            <summary>
            Sets the User Manager’s settings.
            </summary>
            <param name="settings">The settings.</param>
            <returns>True, if successful</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ReloadAccount(System.String)">
            <summary>
            Forces a reload of the Account from the service.
            </summary>
            <param name="name">The name.</param>
            <returns>The reloaded Account</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.ReloadRole(System.String)">
            <summary>
            Forces a reload of the Role from the service.
            </summary>
            <param name="name">The name.</param>
            <returns>The reloaded Role</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Architecture.Objects.Session.UpdateObject(System.Object)">
            <summary>
            Updates the provided object (Account, ClaimType, Product, Role or Credential).
            </summary>
            <param name="objecttoUpdate">The object to update.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationEndpointHelper">
            <summary>
            The helper class to supply message's header with authorization information.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationEndpointHelper.GetChannelWithCredential``1(System.ServiceModel.ChannelFactory{``0})">
            <summary>
            Gets the channel with credential.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="channelFactory">The channel factory.</param>
            <returns>TService</returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationValidationHelper">
            <summary>
            The helper to supply with method's validation
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationValidationHelper.AuthorizationActivated">
            <summary>
            If true, the Authorization is activated by the application configuration file
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationValidationHelper.ValidateClaimOnMember(System.Reflection.MemberInfo)">
            <summary>
            Validates the claim on a method.
            </summary>
            <param name="memberInfo">The member information.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationValidationHelper.ValidateClaim(Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute)">
            <summary>
            Validates the claim.
            </summary>
            <param name="attribute">The attribute.</param>
            <exception cref="T:System.Security.SecurityException">The request to service is not authorized.</exception>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationHelper">
            <summary>
            The Authorization helper.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Authorization.AuthorizationHelper.IsWellKnownApplication">
            <summary>
            Gets a value indicating whether this instance is a well known application.
            </summary>
            <value>
              <c>true</c> if this instance is a well known application; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute">
            <summary>
            The class used for annotated service's methods with claim
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute" /> class.
            </summary>
            <param name="claimName">Name of the claim.</param>
            <param name="checkTokenButAllowNull">
            If true and forceValidation is false and useAuthorization in app.config is false,
            will check token and throw exception in case the user does not have the rights, but if Token is null no check is done.
            </param>
            <param name="forceValidation">if set to <c>true</c> do force validation.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute.ClaimName">
            <summary>
            The name of the claim.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute.ForceValidation">
            <summary>
            Do force validation if true. This property used when there is no useAuthorization in app.config file.
            ForceValidation = true is important for annotations in User Manager service.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute.CheckTokenButAllowNull">
            <summary>
            If true and ForceValidation is false and useAuthorization in app.config is false,
            will check token and throw exception in case the user does not have the rights, but if Token is null no check is done.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Authorization.ValidateClaimAttribute.ToString">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account">
            <summary>
            Account model class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.#ctor">
            <summary>
            Only used from UI
            Please use static method CreateAccount to create new Accounts
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.IsLocked">
            <summary>
            Gets or sets a value indicating whether this instance is locked.
            </summary>
            <value>
              <c>true</c> if this instance is locked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.Credentials">
            <summary>
            Gets the credentials.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.Roles">
            <summary>
            Gets the roles.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.Claims">
            <summary>
            Gets the claims.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.CreateAccount(System.String,System.String)">
            <summary>
            Creates the account.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.DeleteAccount(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account)">
            <summary>
            Deletes the account.
            </summary>
            <param name="selectedAccount">The selected account.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.GetAccount(System.String)">
            <summary>
            Gets the account.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.GetAccount(System.String,System.Boolean)">
            <summary>
            Gets the account.
            </summary>
            <param name="name">The name.</param>
            <param name="useCache">Uses the account cache. This cache is not updating, so only use if you are not interested in latest updates!</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.GetAccountForUserId(System.String)">
            <summary>
            Gets the account for user id. Can be either a windows user name of a windows credential
            or a user name of a UserNamePassword credential.
            </summary>
            <param name="userid">The user id.</param>
            <returns>The account associated with the windows credential, null if no such account exists</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.GetAccountsForUserNamePasswordCredential(System.String)">
            <summary>
            Gets the accounts for a user name of a UserNamePassword credential.
            </summary>
            <param name="userid">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.GetAccountForUserNamePasswordCredential(System.String)">
            <summary>
            Gets the accounts for a user name of a UserNamePassword credential.
            </summary>
            <param name="userid">The user id.</param>
            <returns>The account associated with the UserNamePassword credential, null if no such account exists</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.GetAllAccounts">
            <summary>
            Gets all accounts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.ReloadAccount(System.String)">
            <summary>
            Reloads the account.
            </summary>
            <param name="account">The account.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.UpdateAccount(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account)">
            <summary>
            Updates the account.
            </summary>
            <param name="account">The account.</param>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim">
            <summary>
            AccountClaim class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim.#ctor(System.String,Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim" /> class.
            </summary>
            <param name="claimValue">The claim value.</param>
            <param name="claimType">Type of the claim.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim.Account">
            <summary>
            Gets or sets the account.
            </summary>
            <value>
            The account.
            </value>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaims">
            <summary>
            Collection of AccountClaims
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaims.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaims.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountRoles">
            <summary>
            Collection of AccountRoles
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountRoles.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountRoles.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountCredentials">
            <summary>
            Collection of AccountCredentials
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountCredentials.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountCredentials.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypeAllowableValues">
            <summary>
            Collection of ClaimTypeAllowableValues
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypeAllowableValues.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValue)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypeAllowableValues.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResponse">
            <summary>
            ImportJsonResult class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResponse.ImportType">
            <summary>
            The import type that this is the result of
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResponse.ImportJsonResults">
            <summary>
            The result for each object that should be imported
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResponse.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult">
            <summary>
            ImportJsonResult, contains details about the import result for each single object
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult.FailureDescription">
            <summary>
            In case Succeeded is false, this contains a brief description why the operation failed
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult.OperationType">
            <summary>
            Operation type
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult.EntityType">
            <summary>
            EntityType of object
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult.Value">
            <summary>
            Value of the object
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult.Succeeded">
            <summary>
            Succeeded
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonResult.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonType">
            <summary>
            The type of import (delta or sync)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonType.Undefined">
            <summary>
            Import type is undefined
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonType.Delta">
            <summary>
            Delta import (will only add, no deletion of existing objects)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonType.Synchronize">
            <summary>
            Will try to do a complete synchronization of an import (delete / modify accounts according to the json contents)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ImportJsonType.SynchronizeWithRoleAssignments">
            <summary>
            Will try to do a complete synchronization of an import (delete / modify (including removal of role assignments) accounts according to the json contents)
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType">
            <summary>
            Entity (object) Type
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.None">
            <summary>
            Not to be used
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.UserNameCredentialName">
            <summary>
            UserNameCredentialName
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.UserNameCredentialPassword">
            <summary>
            UserNameCredentialPassword
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.WindowsCredentialName">
            <summary>
            WindowsCredentialName
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.AccountRole">
            <summary>
            AccountRole
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.RoleClaim">
            <summary>
            RoleClaim
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.ClaimType">
            <summary>
            ClaimType
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.AllowableValue">
            <summary>
            AllowableValue
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.AccountClaim">
            <summary>
            AccountClaim
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.UserNameCredential">
            <summary>
            UserNameCredential
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.RoleMember">
            <summary>
            RoleMember
            ///
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.SimpleUserNameCredential">
            <summary>
            SimpleUserNameCredential
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.SimpleUserNameCredentialName">
            <summary>
            SimpleUserNameCredentialName
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.SimpleUserNameCredentialPassword">
            <summary>
            SimpleUserNameCredentialPassword
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.EntityType.CustomLogonCredential">
            <summary>
            CustomLogonCredential
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OperationType">
            <summary>
            Operation Type for the object
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OperationType.NotSet">
            <summary>
            Not used
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OperationType.Add">
            <summary>
            Object should be added
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OperationType.Delete">
            <summary>
            Object should be deleted (can only occur in case ImportJsonType.Synchronize is used)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OperationType.Modify">
            <summary>
            Object was present already, but was content was modified
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OperationType.ExistingNotChanged">
            <summary>
            Object was present already and no content was modified
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo">
            <summary>
            OIBCoreAndDbInfo model class
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.#ctor">
            <summary>
            Intended to be use from UI
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo"/> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.#ctor(Asm.As.Oib.UserManagement.Proxy.References.OIBCoreAndDbInfo)">
            <summary>
            Intended to be use from UI
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo"/> class.
            </summary>
            <param name="oibCoreAndDbInfo">The OIB core and database information.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.GetOIBCoreAndDbInfoLocalized(System.String,System.String,System.String)">
            <summary>
            Gets the OIB core and database information localized.
            </summary>
            <param name="databaseInstanceLocalized">The database instance localized.</param>
            <param name="databaseNameLocalized">The database name localized.</param>
            <param name="coreNameLocalized">The core name localized.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.DatabaseInstance">
            <summary>
            Gets or sets the database instance.
            </summary>
            <value>
            The database instance.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.DatabaseName">
            <summary>
            Gets or sets the name of the database.
            </summary>
            <value>
            The name of the database.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.OIBCoreHostName">
            <summary>
            Gets or sets the name of the OIB core host.
            </summary>
            <value>
            The name of the OIB core host.
            </value>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.OIBCoreAndDbInfo.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ProductClaimTypes">
            <summary>
            Collection of ProductClaimTypes
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ProductClaimTypes.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ProductClaimTypes.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ProductCredentials">
            <summary>
            Collection of ProductCredentials
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ProductCredentials.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ProductCredentials.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaims">
            <summary>
            Collection of CredentialClaims
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaims.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaim)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaims.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaims">
            <summary>
            Collection of RoleClaims
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaims.Exists(Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim)">
            <summary>
            Checks if the specified item exists.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaims.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaims.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleMembers">
            <summary>
            Collection of RoleMembers
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleMembers.InsertItem(System.Int32,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleMembers.RemoveItem(System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValue">
            <summary>
            AllowableValue class
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValue.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValue.AllowValue">
            <summary>
            Gets or sets the allow value.
            </summary>
            <value>
            The allow value.
            </value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValue.CreateAllowableValue(System.String)">
            <summary>
            Creates the allowable value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValue.GetAllowableValue(System.String)">
            <summary>
            Gets the allowable value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValue.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.AllowableValues">
            <summary>
            Collection of AllowableValues
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim">
            <summary>
            Claim class
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim._claim">
            <summary>
            Claim
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim.ClaimValue">
            <summary>
            Gets or sets the claim value.
            </summary>
            <value>
            The claim value.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim.ClaimType">
            <summary>
            Gets or sets the type of the claim.
            </summary>
            <value>
            The type of the claim.
            </value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims">
            <summary>
            Collection of Claims
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims.#ctor(System.Collections.Generic.IEnumerable{Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claim})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims" /> class.
            </summary>
            <param name="claimCollection">The claim collection.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims.#ctor(System.Collections.Generic.IEnumerable{Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims" /> class.
            </summary>
            <param name="claimCollection">The claim collection.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims.#ctor(System.Collections.Generic.IEnumerable{Asm.As.Oib.UserManagement.Proxy.Business.Objects.AccountClaim})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims" /> class.
            </summary>
            <param name="claimCollection">The claim collection.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims.#ctor(System.Collections.Generic.IEnumerable{Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaim})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims" /> class.
            </summary>
            <param name="claimCollection">The claim collection.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Claims.GetByClaimTypeName(System.String)">
            <summary>
            Gets the name of the by claim type.
            </summary>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType">
            <summary>
            ClaimType class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.#ctor">
            <summary>
            Only used from UI
            Please use static method CreateClaimType to create new ClaimTypes
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.Id">
            <summary>
            Object Id
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.ClaimTypeString">
            <summary>
            Concatenated String (namespace of product name + "/" + unique id + "/" + Name)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.ClaimTypeProductString">
            <summary>
            Concatenated String (namespace of product name + "/" + unique id)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.DisplayName">
            <summary>
            Display Name
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.ClaimScopeType">
            <summary>
            ClaimScopeType
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.ClaimValueType">
            <summary>
            ClaimValueType
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.AllowableValues">
            <summary>
            AllowableValues
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.UsesAllowableValues">
            <summary>
            Gets a value indicating whether [uses allowable values].
            </summary>
            <value>
            <c>true</c> if [uses allowable values]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.CreateClaimType(System.String,System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType,Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType)">
            <summary>
            Creates the Claim Type.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="displayName">The display name.</param>
            <param name="product">The product.</param>
            <param name="scope">The scope.</param>
            <param name="valueType">Type of the value.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.DeleteClaimType(Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType)">
            <summary>
            Deletes the Claim Type.
            </summary>
            <param name="selectedClaimType">Type of the selected claim.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.GetAllClaimTypes">
            <summary>
            Gets all claim types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.GetAllClaimTypesByScope(Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType)">
            <summary>
            Gets all claim types by scope.
            </summary>
            <param name="claimTypeScope">The claim type scope.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.GetClaimType(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String)">
            <summary>
            Gets the Claim Type.
            </summary>
            <param name="product">The product that the claim is associated with.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.GetClaimType(System.Int32)">
            <summary>
            Gets the Claim Type.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.UpdateClaimType(Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType)">
            <summary>
            Updates the Claim Type.
            </summary>
            <param name="selectedClaimType">Type of the selected claim.</param>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypes">
            <summary>
            Collection of ClaimTypes
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypes" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypes.#ctor(System.Collections.Generic.IEnumerable{Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypes" /> class.
            </summary>
            <param name="collectionToCopy">The collection to copy.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimTypes.GetClaimTypeByName(System.String)">
            <summary>
            Gets the name of the claim type by.
            </summary>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential">
            <summary>
            Credential class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.Claims">
            <summary>
            Gets the claims.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.CredentialType">
            <summary>
            Gets the type of the credential.
            </summary>
            <value>
            The type of the credential.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.WindowsUserName">
            <summary>
            Gets the name of the windows user if this is a windows credential claim type
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.CustomUserName">
            <summary>
            Gets the name of the user if this is a user name / password credential claim type
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.Product">
            <summary>
            Gets or sets the product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.Account">
            <summary>
            Gets or sets the account.
            </summary>
            <value>
            The account.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.IsLoginOnly">
            <summary>
            Gets or sets a value indicating whether this instance is login only.
            </summary>
            <value>
            <c>true</c> if this instance is login only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.Clone(System.Boolean)">
            <summary>
            Clones the specified b deep.
            </summary>
            <param name="bDeep">if set to <c>true</c> [b deep].</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.CreateUserNamePasswordCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String,System.String,System.Boolean)">
            <summary>
            Creates the user name password credential.
            </summary>
            <param name="account">The account.</param>
            <param name="product">The product.</param>
            <param name="userName">The user id.</param>
            <param name="password">The password.</param>
            <param name="isLoginCredential">if set to <c>true</c> [is login credential].</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.CreateSimpleUserNamePasswordCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product,System.String,System.String,System.Boolean)">
            <summary>
            Creates the simple user name password credential.
            </summary>
            <param name="account">The account.</param>
            <param name="product">The product.</param>
            <param name="userName">The user id.</param>
            <param name="password">The password.</param>
            <param name="isLoginCredential">if set to <c>true</c> [is login credential].</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.CreateWindowsCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Account,System.String)">
            <summary>
            Creates the windows credential.
            </summary>
            <param name="account">The account.</param>
            <param name="strUserId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.DeleteCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential)">
            <summary>
            Deletes the credential.
            </summary>
            <param name="selectedCredential">The selected credential.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.UpdateCredential(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential)">
            <summary>
            Updates the credential.
            </summary>
            <param name="credential">The credential.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.UpdateCustomUserPassword(System.String,System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Updates the custom user password.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaim">
            <summary>
            CredentialClaim class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaim.#ctor(Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType,System.String,Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credential)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaim" /> class.
            </summary>
            <param name="claim">The claim.</param>
            <param name="value">The value.</param>
            <param name="credential">The credential.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaim.Credential">
            <summary>
            Gets or sets the credential.
            </summary>
            <value>
            The credential.
            </value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialClaim.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Credentials">
            <summary>
            Collection of Credentials
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.CredentialTypes">
            <summary>
            Collection of CredentialTypes
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableCredentialType">
            <summary>
            DisplayableCredentialType class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableCredentialType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableCredentialType" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableCredentialType.#ctor(Asm.As.Oib.UserManagement.Proxy.Business.Types.CredentialType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableCredentialType" /> class.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="strDisplayName">Display name of the STR.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableCredentialType.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableCredentialType.CredentialType">
            <summary>
            Gets the type of the credential.
            </summary>
            <value>
            The type of the credential.
            </value>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableScope">
            <summary>
            DisplayableScope class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableScope" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableScope.#ctor(Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableScope" /> class.
            </summary>
            <param name="scope">The scope.</param>
            <param name="strDisplayName">Display name of the STR.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableScope.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableScope.Scope">
            <summary>
            Gets the scope.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableValueType">
            <summary>
            DisplayableValueType class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableValueType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableValueType" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableValueType.#ctor(Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableValueType" /> class.
            </summary>
            <param name="valueType">Type of the value.</param>
            <param name="strDisplayName">Display name of the STR.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableValueType.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.DisplayableValueType.ValueType">
            <summary>
            Gets the type of the value.
            </summary>
            <value>
            The type of the value.
            </value>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product">
            <summary>
            Product class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.UniqueIdentifier">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.UniqueProductString">
            <summary>
            Gets the unique product string.
            </summary>
            <value>
            The unique product string.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.Credentials">
            <summary>
            Gets the credentials.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.ClaimTypes">
            <summary>
            Gets the claim types.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.BuildClaimTypeString(System.String)">
            <summary>
            Concatenates the claimTypeName with the product Name and Unique Id
            Helper Method to convert Role ClaimTypes (with product &amp; unique identifier)
            </summary>
            <param name="claimTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.CreateProduct(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the product.
            </summary>
            <param name="name">The name.</param>
            <param name="version">The version.</param>
            <param name="description">The description.</param>
            <param name="company">The company.</param>
            <param name="uniqueId">The unique id.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.DeleteProduct(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product)">
            <summary>
            Deletes the product.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.DeleteProductAndAllItsClaimTypes(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product)">
            <summary>
            Deletes a product and deletes all the product's claim types first.
            Removes the claims for those claim types from roles, accounts and credentials
            and then deletes the product.
            </summary>
            <param name="product">The product to delete</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.GetAllProducts">
            <summary>
            Gets all products.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.GetProduct(System.String,System.String)">
            <summary>
            Gets the product.
            </summary>
            <param name="name">The name.</param>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.GetProduct(System.Int32)">
            <summary>
            Gets the product.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.GetProduct(System.String)">
            <summary>
            Gets the product.
            </summary>
            <param name="uniqueId">The unique id of the product.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.UpdateProduct(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product)">
            <summary>
            Updates the product.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Products">
            <summary>
            Collection of Products
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Products.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Products" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Products.#ctor(System.Collections.Generic.IEnumerable{Asm.As.Oib.UserManagement.Proxy.Business.Objects.Product})">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Products" /> class.
            </summary>
            <param name="collectionToCopy">The collection to copy.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role">
            <summary>
            Role class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.AdGroupName">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.Claims">
            <summary>
            Gets the claims.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.Members">
            <summary>
            Gets the members.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.CreateRole(System.String,System.String)">
            <summary>
            Creates the role.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.CreateRole(System.String,System.String,System.String)">
            <summary>
            Creates the role.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="adGroupName">Active Directory Group</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.DeleteRole(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role)">
            <summary>
            Deletes the role.
            </summary>
            <param name="selectedRole">The selected role.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.GetAllRoles">
            <summary>
            Gets all roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.GetRole(System.Int32)">
            <summary>
            Gets the role.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.GetRole(System.String)">
            <summary>
            Gets the role.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.GetRoles(System.String,System.String)">
            <summary>
            Gets all roles that match the specified claim type and value.
            </summary>
            <param name="claimType">The ClaimType string (including namespace).</param>
            <param name="value">The value.</param>
            <returns>All roles that have such a claim type/value pair as associated RoleClaim</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.ReloadRole(System.String)">
            <summary>
            Reloads the role.
            </summary>
            <param name="role">The role.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.UpdateRole(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role)">
            <summary>
            Updates the role.
            </summary>
            <param name="role">The role.</param>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Role.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim">
            <summary>
            RoleClaim class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim.#ctor">
            <summary>
            Only used from UI
            Please use other public Constructor
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim.#ctor(System.String,Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim" /> class.
            </summary>
            <param name="claimValue">The claim value.</param>
            <param name="claimType">Type of the claim.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.RoleClaim.Role">
            <summary>
            Gets or sets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Roles">
            <summary>
            Collection of Roles
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Scopes">
            <summary>
            Collection of DisplayableScopes
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings">
            <summary>
            The User Manager’s settings including custom (non-Windows) password policy
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings"/> class.
            Ensure a default constructor for XAML support purposes
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.#ctor(Asm.As.Oib.UserManagement.Proxy.References.Settings)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.EnforceInitialPasswordChange">
            <summary>
            Gets or sets a value indicating whether [enforce initial password change].
            </summary>
            <value>
              <c>true</c> if [enforce initial password change]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.AllowSimpleUserNamePasswordCredentials">
            <summary>
            Gets or sets a value indicating whether [simple user name password credentials are allowed].
            </summary>
            <value>
              <c>true</c> if [simple user name password credentials are allowed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.MaximumPasswordAge">
            <summary>
            Gets or sets the maximum password age.
            </summary>
            <value>
            The maximum password age.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.MinimumPasswordLength">
            <summary>
            Gets or sets the minimum length of the password.
            </summary>
            <value>
            The minimum length of the password.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.LockoutThreshold">
            <summary>
            Gets or sets the lockout threshold.
            </summary>
            <value>
            The lockout threshold.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.SynchronizeAdGroupsInHours">
            <summary>
            Set interval for Active Directory Groups synchronization in hours
            0 - disabled
            1 - default 1 hour
            24 * 7 - max once per week
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.AllowCustomLogonCredentials">
            <summary>
            Gets or sets a value indicating whether [custom logon credentials are allowed].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.GetSettings">
            <summary>
            Gets the settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.SetSettings(Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings)">
            <summary>
            Sets the settings.
            </summary>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="E:Asm.As.Oib.UserManagement.Proxy.Business.Objects.Settings.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.UserAccounts">
            <summary>
            Collection of Accounts
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Objects.ValueTypes">
            <summary>
            Collection of DisplayableValueTypes
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType">
            <summary>
            ClaimScopeType
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimScopeType.Credential">
            <summary>
            Credential
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType">
            <summary>
            ClaimValueType
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType.Double">
            <summary>
            Double
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType.Bool">
            <summary>
            Bool
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType.AllowedValue">
            <summary>
            AllowedValue
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ClaimValueType.Int">
            <summary>
            int
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Types.CredentialType">
            <summary>
            CredentialType
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.CredentialType.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.CredentialType.WindowsCredential">
            <summary>
            WindowsCredential
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.CredentialType.UserPasswordCredential">
            <summary>
            UserPasswordCredential
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.CredentialType.SimpleUserPasswordCredential">
            <summary>
            SimpleUserPasswordCredential
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.CredentialType.CustomLogonCredential">
            <summary>
            Custom Logon Credential
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Business.Types.ObjectType">
            <summary>
            ObjectType
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ObjectType.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ObjectType.ClaimType">
            <summary>
            ClaimType
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ObjectType.Credential">
            <summary>
            Credential
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ObjectType.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Business.Types.ObjectType.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.InternalConstants">
            <summary>
            All constant values
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.InternalConstants.SecurityTokenHeaderName">
            <summary>
            SecurityTokenHeaderName
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.InternalConstants.SecurityTokenHeaderNamespace">
            <summary>
            SecurityTokenHeaderNamespace
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.InternalConstants.SecurityTokenRequirementTokenType">
            <summary>
            OIB Client Token Type for SecurityTokenRequirement
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.InternalConstants.SecurityTokenHeaderNoToken">
            <summary>
            Security Token text when no authentication is possible.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription">
            <summary>
            Describes the plugin
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription.Name">
            <summary>
            Name of the plugin
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription.Description">
            <summary>
            Description of the plugin
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription.PluginIcon">
            <summary>
            An optional icon for the plugin. 32x32 pixels, white on transparent background.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription.TranslatedNameAndDescription">
            <summary>
            Optional name and description of the plugin in several languages.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription.GetInfoString">
            <summary>
            Returns a descriptive string from the default Name and Description
            </summary>
            <returns>A string like 'Name:[Description]'</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription.GetInfoString(System.Globalization.CultureInfo)">
            <summary>
            Returns a descriptive string in the provided CultureInfo (if the plugin provides a translation in that locale).
            In case the locale was not provided by the plugin, the default Name and Description is returned.
            </summary>
            <returns>A string like 'Name:[Description]'</returns>
            <param name="info">The CultureInfo for the language</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginLogger.InitializeLifetimeService">
            <inheritdoc />
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginManager.InitializedPlugins">
            <summary>
            Contains all valid initialized plugins. Value describes if it is currently active or not.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginManager.ActivatePlugin(Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription)">
            <summary>
            Activates a specific plugin that is passed in.
            Use this method in case you do not want to activate all plugins at once
            </summary>
            <param name="plugin">The plugin to activate</param>
            <returns>true, if successful, otherwise false</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginManager.ActivatePlugins">
            <summary>
            Activates all plugins. Start listening to login events from hardware.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginManager.DeactivatePlugin(Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription)">
            <summary>
            Deactivates a specific plugin that is passed in.
            Use this method in case you do not want to deactivate all plugins at once
            </summary>
            <param name="plugin">The plugin to deactivate</param>
            <returns>true, if successful, otherwise false</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginManager.DeactivatePlugins">
            <summary>
            Deactivates all plugins. Stop listening to login events from hardware.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginManager.InitializePlugins">
            <summary>
            Initializes the plugins.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginCollector">
            <summary>
            The responsibility of this class is to scan the folder
            C:\ProgramData\SIPLACE\OIB\UserManagement\AuthenticationPlugins
            for Assemblies that are signed with the ASM key and then look
            for public classes that implement Asm.As.Oib.UserManagement.Extensions.IAuthenticationPlugin
            Each of the found classes are then instantiated and put into the return list.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginContainer.InitializeLifetimeService">
            <inheritdoc />
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginDllLoader.LoadHelper">
            <summary>
            The class helps to load a model assembly to repository
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Plugins.PluginDllLoader.LoadHelper.CurrentDomainOnAssemblyLoad2(System.Object,System.AssemblyLoadEventArgs)">
            <summary>
            Creates a collection of desirable only model referenced assemblies.
            Executed on assembly loaded event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.AssemblyLoadEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.AccountLockedMessage">
            <summary>
              Looks up a localized string similar to Login attempt failed: The account locked..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.AccountOnHoldMessage">
            <summary>
              Looks up a localized string similar to Login attempt failed: Too many failed login attempts. You will have to wait for the next opportunity to log in..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.AdditionalLoginOptionsLabel">
            <summary>
              Looks up a localized string similar to Additional login options:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.CancelButton">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.ChangePasswordCheckBox">
            <summary>
              Looks up a localized string similar to Change password.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.ChangePasswordTitle">
            <summary>
              Looks up a localized string similar to Change Password.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.ChangeSimplePasswordCheckBox">
            <summary>
              Looks up a localized string similar to Password is simple.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.DomainLabel">
            <summary>
              Looks up a localized string similar to Domain:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.InvalidPasswordMessage">
            <summary>
              Looks up a localized string similar to Login attempt failed: Bad password..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.InvalidWindowsUserNameMessage">
            <summary>
              Looks up a localized string similar to Login attempt failed: Unknown user name..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LabelConfirmPassword">
            <summary>
              Looks up a localized string similar to Confirm Password:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LabelNewPassword">
            <summary>
              Looks up a localized string similar to New Password:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LabelPasswordStrength">
            <summary>
              Looks up a localized string similar to Password Strength:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginAttemptsMaximumMessage">
            <summary>
              Looks up a localized string similar to You have exceeded the maximum number of login attempts ({0})..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginAttemptSucceededMessage">
            <summary>
              Looks up a localized string similar to Login attempt succeeded..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginFailedTryAgainMessage">
            <summary>
              Looks up a localized string similar to The login attempt failed, please try again..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginFailureMessage">
            <summary>
              Looks up a localized string similar to Login attempt failed: Unknown user name or bad password..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginTypeDialogTitle">
            <summary>
              Looks up a localized string similar to Login.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginTypeLabel">
            <summary>
              Looks up a localized string similar to Login type:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginTypeUserNamePassword">
            <summary>
              Looks up a localized string similar to User name / password.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.LoginTypeWindowsAccount">
            <summary>
              Looks up a localized string similar to Windows Account.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.MessageBoxTitle">
            <summary>
              Looks up a localized string similar to WORKS User Manager.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.OkButton">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.PasswordChangedSuccessfullyMessage">
            <summary>
              Looks up a localized string similar to The password  was changed successfully..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.PasswordChangeErrorMessage">
            <summary>
              Looks up a localized string similar to Failed to change the password. Please check the event log for error..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.PasswordExpiredMessage">
            <summary>
              Looks up a localized string similar to The password is expired. Please set a new password..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.PasswordLabel">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.PasswordWillExpireMessage">
             <summary>
               Looks up a localized string similar to The password will expire in {0} day(s).
            Do you want to change the password now?.
             </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.STSConfigurationExceptionMessage">
            <summary>
              Looks up a localized string similar to The User Management service encountered an internal error when issuing the token. Please check the event log..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.STSNotAvailableMessage">
            <summary>
              Looks up a localized string similar to The User Management service could not be contacted. Please make sure that the service is running..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.UnknownErrorMessage">
            <summary>
              Looks up a localized string similar to An unknown error occurred while attempting the login. Either, an configuration error occurred or STS is available but communication could not be established due to a security exception. Check if the same set of security protocols (SSL/TLS) are activated on both computers. Please check the event logs for further information..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.UseCurrentAccountCheckBox">
            <summary>
              Looks up a localized string similar to Use current Windows Account.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.UserCanceledMessage">
            <summary>
              Looks up a localized string similar to The user canceled the login dialog..
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Properties.Resources.UserIdLabel">
            <summary>
              Looks up a localized string similar to User name:.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.ServiceComputerName">
            <summary>
            Gets or sets the computer name where the user management service is running.
            </summary>
            <value>The computer name where the user management service is running.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.ServiceProtocol">
            <summary>
            Gets or sets the protocol ("net.tcp" or "http") that is used to connect to the UM Service.
            </summary>
            <value>The protocol("net.tcp" or "http").</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.PortNumber">
            <summary>
            Gets or sets the UM service port number.
            </summary>
            <value>The service port number.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.HttpPortNumber">
            <summary>
            Gets or sets the UM service port number.
            </summary>
            <value>The service port number.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.ClientCertificateValue">
            <summary>
            Something like "CN=ASM.SW.Client"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.ClientCertificateCommonName">
            <summary>
            Something like "ASM.SW.Client"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.ClientCertificateStoreLocation">
            <summary>
            StoreLocation.LocalMachine or StoreLocation.CurrentUser
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.ClientCertificateX509FindType">
            <summary>
            One of the X509FindType enum values (e.g. X509FindType.FindBySubjectDistinguishedName). The CallbackCertificateValue must match 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.ProxyEndpointHelper.ClientCertificateStoreName">
            <summary>
            StoreName (typically StoreName.My)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.Account.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.Account.Clear">
            <summary>
            This is used to clear the claims so that we
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.CachedToken">
            <summary>
            CachedToken
            </summary>
            <exclude />
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.CachedToken.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.CachedToken.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.CachedToken.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.CachedToken.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>
            The token.
            </value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.CachedToken.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials">
            <summary>
            OIB Client Credentials
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.#ctor(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.Boolean,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials" /> class.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="showUi">if set to <c>true</c> [opens a dialog to enter credentials].</param>
            <param name="parentUi">The parent UI element (either a a Form or a WPF Window).</param>
            <param name="windowsIdentityProvided">if set to <c>true</c> [windows identity provided].</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.#ctor(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials" /> class.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="strToken">The STR token.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
            <summary>
            The constructor copies WCF ClientCredentials into an empty OIBClientCredentials instance.
            </summary>
            <param name="clientCredentials">The client credentials.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.#ctor(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.String,System.ServiceModel.Description.ClientCredentials)">
            <summary>
            The constructor creates a new instance with OIBClientCredentials together with WCF ClientCredentials.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="strToken">The token as string.</param>
            <param name="clientCredentials">The client credentials.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.ClientCredentialType">
            <summary>
            Gets or sets the type of the client credential.
            </summary>
            <value>The type of the client credential.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.EncryptedToken">
            <summary>
            Gets the encrypted token.
            </summary>
            <value>
            The encrypted token.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.SamlToken">
            <summary>
            Gets the saml token.
            </summary>
            <value>
            The saml token.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.InteractiveLogon">
            <summary>
            Gets or if a Logon Screen will be shown when authenticating.
            </summary>
            <value>InteractiveLogon</value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Authenticate2">
            <summary>
            Authenticates with custom credentials
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Authenticate2(System.Boolean)">
            <summary>
            Authenticates with custom credentials
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Authenticate">
            <summary>
            Authenticates with custom credentials
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Authenticate2(System.Security.Principal.WindowsIdentity)">
            <summary>
            Authenticates with WindowsIdentity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Authenticate(System.Security.Principal.WindowsIdentity)">
            <summary>
            Authenticates with WindowsIdentity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Reauthenticate2">
            <summary>
            Authenticates with custom credentials
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Reauthenticate">
            <summary>
            Authenticates with custom credentials
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="serviceEndpoint">The service endpoint.</param>
            <param name="behavior">The behavior.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.CreateSecurityTokenManager">
            <summary>
            Creates the security token manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.CloneCore">
            <summary>
            Clones the core.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.op_Equality(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials,Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.op_Inequality(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials,Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.Equals(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.AuthenticateInternal(System.Security.Principal.WindowsIdentity)">
            <summary>
            Authenticates with WindowsIdentity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials.AuthenticateInternal(System.Boolean)">
            <summary>
            Authenticates with custom credentials
            </summary>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType">
            <summary>
            Describes the Client Credential Types
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType.Windows">
            <summary>
            Windows credentials
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType.UserNamePassword">
            <summary>
            UserName / PW credentials
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType.All">
            <summary>
            All known credential types
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientTokenManager">
            <summary>
            OIB Client Token Manager
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientTokenManager.#ctor(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientTokenManager" /> class.
            </summary>
            <param name="clientCredentials">The client credentials.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
            <summary>
            Creates the security token provider.
            </summary>
            <param name="tokenRequirement">The token requirement.</param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4">
            <summary>
            OIB Service Credentials. Gets the token and account from header.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.AccountName">
            <summary>
            Gets the name of the account.
            </summary>
            <value>
            The name of the account.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.AccountId">
            <summary>
            Gets the Id of the account.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.IsServiceAccount">
            <summary>
            Determines whether the currently logged on account is the SIPLACE Service account.
            OIB 6.0 and higher: there is no 'OIB Service Account' anymore. 
            This property is here for compatibility reason only. The return value is always false.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.GetClaimValue(System.String)">
            <summary>
            Gets the claim value.
            </summary>
            <param name="strClaim">The claim.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.CheckIsUMClaimAllowed(System.String)">
            <summary>
            Checks the is um claim allowed.
            If not, throws an exception
            </summary>
            <param name="strClaim">The string claim.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.IsUMInternalClaimAllowed(System.String)">
            <summary>
            Determines whether this internal User manager claim is allowed.
            Prepends the User Manager product name and identifier to the claim string.
            </summary>
            <param name="strClaim">The string claim.</param>
            <returns>
              <c>true</c> if [is um internal claim allowed] [the specified string claim]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.IsClaimAllowed(System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">The claim.</param>
            <returns>
            <c>true</c> if the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.IsClaimValue(System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">The STR claim.</param>
            <param name="strValue">The expected value.</param>
            <param name="claimType">Type of the claim.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials4.IsInRole(System.String)">
            <summary>
            Determines whether this credential is in the specified role .
            </summary>
            <param name="strRoleName">Name of the role.</param>
            <returns>
            <c>true</c> if this credential is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials">
            <summary>
            OIB Service Credentials
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.GetAccountId">
            <summary>
            Gets the Id of the account.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.IsServiceAccount">
            <summary>
            Determines whether the currently logged on account is the SIPLACE Service account.
            OIB 6.0 and higher: there is no 'OIB Service Account' anymore. 
            This method is here for compatibility reason only. The return value is always false.
            </summary>
            <returns>
            <c>true</c> if  currently logged on account is the SIPLACE Service account; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.IsClaimAllowed(System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">The claim.</param>
            <returns>
            <c>true</c> if the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.IsInRole(System.String)">
            <summary>
            Determines whether this credential is in the specified role .
            </summary>
            <param name="strRoleName">Name of the role.</param>
            <returns>
            <c>true</c> if this credential is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.IsClaimValue(System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">The STR claim.</param>
            <param name="strValue">The expected value.</param>
            <param name="claimType">Type of the claim.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.GetClaimValue(System.String)">
            <summary>
            Gets the claim value.
            </summary>
            <param name="strClaim">The claim.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials.GetAccountName">
            <summary>
            Gets the name of the account.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2">
            <summary>
            OIB Service Credentials for usage when you pass in the encrypted token as a string
            Can be used in case a non-WCF out of process communication technology is used (such as .Net Remoting)
            and you pass the encrypted token via a normal parameter instead of using the header of a WCF call
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.AccountId">
            <summary>
            Gets the Id of the account.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.AssignToken(System.String)">
            <summary>
            Assigns the token.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.ClearToken">
            <summary>
            Clears the token.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.GetAccountName">
            <summary>
            Gets the name of the account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.GetClaimValue(System.String)">
            <summary>
            Gets the claim value.
            </summary>
            <param name="strClaim">The claim.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.IsClaimAllowed(System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">The claim.</param>
            <returns>
            <c>true</c> if the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.IsClaimValue(System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">The STR claim.</param>
            <param name="strValue">The expected value.</param>
            <param name="claimType">Type of the claim.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.IsInRole(System.String)">
            <summary>
            Determines whether this credential is in the specified role .
            </summary>
            <param name="strRoleName">Name of the role.</param>
            <returns>
            <c>true</c> if this credential is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials2.IsServiceAccount">
            <summary>
            Determines whether the currently logged on account is the SIPLACE Service account.
            OIB 6.0 and higher: there is no 'OIB Service Account' anymore.
            This method is here for compatibility reason only. The return value is always false.
            </summary>
            <returns>
            <c>true</c> if  currently logged on account is the SIPLACE Service account; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3">
            <summary>
            OIB Service Credentials for usage when you pass in the encrypted token as a string
            Can be used in case a non-WCF out of process communication technology is used (such as .Net Remoting)
            and you pass the encrypted token via a normal parameter instead of using the header of a WCF call
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3" /> class.
            </summary>
            <param name="encryptedToken">The encrypted token.</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.IsServiceAccount">
            <summary>
            Determines whether the currently logged on account is the SIPLACE Service account.
            OIB 6.0 and higher: there is no 'OIB Service Account' anymore.
            This property is here for compatibility reason only. The return value is always false.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.AccountId">
            <summary>
            Gets the Id of the account.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.GetAccountName">
            <summary>
            Gets the name of the account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.GetClaimValue(System.String)">
            <summary>
            Gets the claim value.
            </summary>
            <param name="strClaim">The claim.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.IsClaimAllowed(System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="claimName">The claim.</param>
            <returns>
            <c>true</c> if the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.IsClaimValue(System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="claimName">The STR claim.</param>
            <param name="claimValue">The expected value.</param>
            <param name="claimType">Type of the claim.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBServiceCredentials3.IsInRole(System.String)">
            <summary>
            Determines whether this credential is in the specified role .
            </summary>
            <param name="roleName">Name of the role.</param>
            <returns>
            <c>true</c> if this credential is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBTokenProvider.s_cachedTokens">
            <summary>
            Map of cached Tokens
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBTokenProvider.#cctor">
            <summary>
            Initializes the <see cref="T:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBTokenProvider" /> class.
            Sets the Switch.System.IdentityModel.DisableMultipleDNSEntriesInSANCertificate to true
            This must be done for exes that were compiled against .Net 4.6 or higher, otherwise
            they cannot authenticate using the user name/password credential.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBTokenProvider.CacheToken(System.String,Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials)">
            <summary>
            Cache Token in a file
            </summary>
            <param name="strUser">User name as a string</param>
            <param name="credentials">OIB Client Credentials</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBTokenProvider.CheckCustomPassword(Asm.As.Oib.UserManagement.Proxy.Tokens.Account,System.String,System.String)">
            <summary>
            Check if the password matches with one of the passwords in the set of claims
            </summary>
            <param name="account">Account</param>
            <param name="userName">Name of the user.</param>
            <param name="password">Password as string</param>
            <returns>
            True if password matches with one of the passwords in the set of claims
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBTokenProvider.GetTokenFromCache(System.String)">
            <summary>
            Get the token from the cache
            </summary>
            <param name="userid">user id</param>
            <returns>CacheResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Tokens.OIBTokenProvider.GetTokenFromCache(System.String,System.String)">
            <summary>
            Get the token from the cache
            </summary>
            <param name="userid">user name</param>
            <param name="password">password</param>
            <returns>CachedResult</returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton">
            <summary>
            This is a EyeButton implementation that used together with SecureTextBox to switch to/from visible/invisible password text.
            The visible/invisible toggle is 0 character assigned to SecureTextBox.PasswordChar
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton.SecureTextBox">
            <summary>
            Set here the corresponding SecureTextBox to toggle password text visible/invisible.
            </summary>
            <value>
            The secure text box.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton.InitEyeButton">
            <summary>
            Initializes the eye button.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.EyeButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.UI.LoginForm">
            <summary>
            Login Form
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.LoginForm.#ctor(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.UI.LoginForm" /> class.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="parentWindow">parent Window</param>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.LoginForm.NewPasswordRequested">
            <summary>
            NewPasswordRequested
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.UI.LoginForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.LoginForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.LoginForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.UI.NewPasswordForm">
            <summary>
            NewPasswordForm
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.NewPasswordForm.#ctor">
            <summary>
            NewPasswordForm constructor
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.NewPasswordForm.#ctor(System.String,System.Boolean)">
            <summary>
            NewPasswordForm constructor
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.UI.NewPasswordForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.NewPasswordForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.NewPasswordForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.UI.UserSettings">
            <summary>
            The UserSettings store the user selection in the login dialog.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.UserSettings.#ctor">
            <summary>
            With this SettingsKey, settings of different users are stored in the same file.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.UserSettings.Default">
            <summary>
            Returns a default instance of the UserSettings.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.UserSettings.UpdateSettings">
            <summary>
            Utility property for updating existing user settings in case of a schema update.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.UserSettings.LoginType">
            <summary>
            Stores the login type chosen by the user.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.UserSettings.UseCurrentAccount">
            <summary>
            Stores if the user chose to use the current windows account for login.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.UI.SecureStringHelper">
            <summary>
            Helps converting SecureStrings back and forth
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.SecureStringHelper.ConvertToSecureString(System.String)">
            <summary>
            Converts to secure string.
            </summary>
            <param name="unsecureString">The unsecured string.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.SecureStringHelper.ConvertToUnsecureChar(System.Security.SecureString)">
            <summary>
            Converts to unsecured character array.
            </summary>
            <param name="securePassword">The secure password.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.SecureStringHelper.ConvertToUnsecureString(System.Security.SecureString)">
            <summary>
            Converts to unsecured character array.
            </summary>
            <param name="securePassword">The secure password.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.SecureStringHelper.IsEqualTo(System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Compares two secure strings
            </summary>
            <param name="ss1"></param>
            <param name="ss2"></param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox">
            <summary>
            This is a TextBox implementation that uses the System.Security.SecureString as its backing
            store instead of standard managed string instance. At no time, is a managed string instance
            used to hold a component of the textual entry.
            It does not display any text and relies on the 'PasswordChar' character to display the amount of
            characters entered. If no password char is defined, then an 'asterisk' is used.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox.Text">
            <summary>
            The Text property is obsolete! Use instead SecureText.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox.SecureText">
            <summary>
            Gets or sets the secure text.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.UI.SecureTextBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.References.UserManagementFault">
            <summary>
            UserManagementFault
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.UserManagementFault.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportRoot.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportAccount.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportAllowableValue.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportProduct.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportRole.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportRoleClaim.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportRoleClaimType.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.References.ImportUserNamePassword.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.AccountCacheHelper.CreateCacheLocation(System.String)">
            <summary>
            Create the location for the cache
            </summary>
            <param name="cacheFolder">Cache folder "Siplace\\UserManagement</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.AccountCacheHelper.Deserialize``1(System.String,System.String)">
            <summary>
            Deserialize tokens from cache file
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheFolder">Cache Folder path</param>
            <param name="cacheFile">Cache file name</param>
            <returns>If the cache file doesn't exist, an empty dictionary object will be created</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.AccountCacheHelper.GetCacheLocation(System.String)">
            <summary>
            Return the path of the cache folder
            </summary>
            <param name="cacheFolder">Cache folder</param>
            <returns>Path of the cache folder</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.AccountCacheHelper.Serialize``1(``0,System.String,System.String)">
            <summary>
            Serialize tokens into a file. The file will be automatically created, if it doesn't exist.
            </summary>
            <param name="obj">dictionary which should be serialized</param>
            <param name="cacheFolder">Cache Folder path</param>
            <param name="cacheFile">Cache file name</param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimValue">
            <summary>
            ClaimValue
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimValue.Claim">
            <summary>
            Gets or sets the claim.
            </summary>
            <value>
            The claim.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum">
            <summary>
            Type of the claim
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum.Account">
            <summary>
            Account claim
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum.Role">
            <summary>
            Role claim
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum.Credential">
            <summary>
            Credential claim
            </summary>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Utilities.DisplayPluginStatusMessageDelegate">
            <summary>
            Delegate type for the DisplayPluginStatusMessage event
            </summary>
            <param name="message">The message</param>
            <param name="translatedMessage">Optional translated message for different locales.
            <param name="sender">Description of the plugin that sent the message</param>
            Key must be CultureInfo, value is the translated message.
            </param>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager">
            <summary>
            Credential manager class
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.ServiceComputerName">
            <summary>
            Gets or sets the computer name where the user management service is running.
            </summary>
            <value>The computer name where the user management service is running.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.UseSecureEndpoints">
            <summary>
            If true, uses secure endpoints for communication with the user manager service.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.ConnectToBridge">
            <summary>
            If true, uses the bridge secure endpoints for communication with the user manager service.
            Setting this to true will automatically set the UseSecureEndpoints to true as well.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.ServiceProtocol">
            <summary>
            Gets or sets the protocol ("net.tcp" or "http") that is used to connect to the UM Service.
            </summary>
            <value>The protocol("net.tcp" or "http").</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.TcpPortNumber">
            <summary>
            Gets or sets the tcp port number.
            </summary>
            <value>The service port number.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.HttpPortNumber">
            <summary>
            Gets or sets the http port number.
            </summary>
            <value>The service port number.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.CurrentCredential">
            <summary>
            Gets the current credential.
            </summary>
            <value>The current credential.</value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.CurrentCulture">
            <summary>
            Gets or sets the culture that shall be used in the login dialog and the messages it can show.
            If the CurrentCulture is not set, the UI culture of the current thread is used.
            Currently supported languages:
            English (en)
            German (de)
            Chinese (zh-Hans, zh-Hant)
            Czech (cs)
            French (fr)
            Hungarian (hu)
            Italian (it)
            Japanese (ja)
            Korean (ko)
            Polish (pl)
            Portuguese (pt)
            Russian (ru)
            Spanish (es)
            Turkish (tr)
            Estonian (et)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.ApplicationName">
            <summary>
            The ApplicationName is shown in the title of the login window. If set it appears this way:
            ApplicationName - Login
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.CurrentAccountName">
            <summary>
            Gets the current account name
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.CurrentAccountId">
            <summary>
            Gets the current account name
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.InitializedPlugins">
            <summary>
            Contains all valid initialized plugins. Value describes if it is currently active or not.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.CurrentCredentialChanged">
            <summary>
            Gets fired every time the current credential is changed.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.DisplayPluginStatusMessage">
            <summary>
            Gets fired every time a plugin wants to display some status message.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.InitializePlugins">
            <summary>
            Initializes the plugins. Call this method once at startup.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.ActivatePlugins">
            <summary>
            Activates all plugins. Start listening to login events from hardware.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.DeactivatePlugins">
            <summary>
            Deactivates all plugins. Stop listening to login events from hardware.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.ActivatePlugin(Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription)">
            <summary>
            Activates a specific plugin that is passed in.
            Use this method in case you do not want to activate all plugins at once
            </summary>
            <param name="plugin">The plugin to activate</param>
            <returns>true, if successful, otherwise false</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.DeactivatePlugin(Asm.As.Oib.UserManagement.Proxy.Plugins.IAuthenticationPluginDescription)">
            <summary>
            Deactivates a specific plugin that is passed in.
            Use this method in case you do not want to deactivate all plugins at once
            </summary>
            <param name="plugin">The plugin to deactivate</param>
            <returns>true, if successful, otherwise false</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AddUMEndpointBehaviorToFactory(System.ServiceModel.ChannelFactory)">
            <summary>
            Adds the UM endpoint behavior to the factory.
            </summary>
            <param name="channelFactory">
            The channel factory to which the UM behavior should be attached. This causes tokens to be
            passed over the channel.
            </param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateInteractive(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.Object)">
            <summary>
            Authenticates the by displaying a login dialog to the user.  After this is called the client must add the credentials
            to the client ChannelFactory by calling
            AddUMEndpointBehaviorToFactory.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="parentWindow">
            The parent window (either a Form or a WPF window). If null is provided, the owner of the
            Logon Dialog will not be set.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateInteractive(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.ServiceModel.ChannelFactory,System.Object)">
            <summary>
            Authenticates with user interaction.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="channelFactory">
            The channel factory to which the UM behavior should be attached. This causes tokens to be
            passed over the channel.
            </param>
            <param name="parentWindow">
            The parent window (either a Form or a WPF window). If null is provided, the owner of the
            Logon Dialog will not be set.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateInteractive(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.Collections.Generic.List{System.ServiceModel.ChannelFactory},System.Object)">
            <summary>
            Authenticates with user interaction.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="channelFactories">
            The list of channel factories to which the UM behavior should be attached. This causes
            tokens to be passed over the channel.
            </param>
            <param name="parentWindow">
            The parent window (either a Form or a WPF window). If null is provided, the owner of the
            Logon Dialog will not be set.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateInteractive2(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.Object,System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates with user interaction.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="parentWindow">
            The parent window (either a Form or a WPF window). If null is provided, the owner of the
            Logon Dialog will not be set.
            </param>
            <param name="channelFactories">
            The list of channel factories to which the UM behavior should be attached. This causes
            tokens to be passed over the channel.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateInteractiveNew(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentialType,System.Object,System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates with user interaction.
            </summary>
            <param name="credentialType">Type of the credential.</param>
            <param name="parentWindow">
            The parent window (either a Form or a WPF window). If null is provided, the owner of the
            Logon Dialog will not be set.
            </param>
            <param name="channelFactories">
            The list of channel factories to which the UM behavior should be attached. This causes
            tokens to be passed over the channel.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilent(System.String,System.Security.SecureString,System.Boolean,System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates a user credential silently. No login window is displayed. Should be called in case without user's
            interaction.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="bSetCurrentUser">if set to <c>true</c> [b set current user].</param>
            <param name="channelFactories">The channel factories.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilent(System.String,System.Security.SecureString,System.ServiceModel.ChannelFactory)">
            <summary>
            Authenticates a user credential silently. No login window is displayed. Should be called in case without user's
            interaction.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="channelFactories">The channel factories.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilent(System.String,System.String,System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates a user name credential silently. No login window is displayed. Should be called in case without user's
            interaction.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="channelFactories">
            The list of channel factories to which the UM behavior should be attached. This causes
            tokens to be passed over the channel.
            </param>
            <returns>The AuthenticationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilent(System.String,System.String,System.ServiceModel.ChannelFactory)">
            <summary>
            Authenticates a user name credential silently. No login window is displayed. Should be called in case without user's
            interaction.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="channelFactory">
            The channel factory to which the UM behavior should be attached. This causes tokens to be
            passed over the channel.
            </param>
            <returns>The AuthenticationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilent(System.String,System.String)">
            <summary>
            Authenticates a user name credential silently. No login window is displayed. Should be called in case without user's
            interaction.
            The client must add the credentials to the ChannelFactory by calling AddUMEndpointBehaviorToFactory().
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <returns>The AuthenticationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilent(System.String,System.String,System.Boolean)">
            <summary>
            Authenticates a user name credential silently. No login window is displayed. Should be called in case without user's
            interaction.
            The client must add the credentials to the ChannelFactory by calling AddUMEndpointBehaviorToFactory().
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="bSetCurrentUser">
            Specifies if the current user context should be switched. If false the current user will
            not be changed.
            </param>
            <returns>The AuthenticationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilentWithPasswordChange(System.String,System.Security.SecureString,System.Security.SecureString,System.Boolean,System.Collections.Generic.IEnumerable{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates silent with password change.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <param name="bSetCurrentUser">if set to <c>true</c> [b set current user].</param>
            <param name="channelFactories">The channel factories.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent(System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates the current windows identity silently. No login window is displayed. Should be called by a service that
            has no interactive user.
            </summary>
            <param name="channelFactories">
            The list of channel factories to which the UM behavior should be attached. This causes
            tokens to be passed over the channel.
            </param>
            <returns>The AuthenticationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent(System.ServiceModel.ChannelFactory)">
            <summary>
            Authenticates the current windows identity silently. No login window is displayed.  Should be called by a service that
            has no interactive user.
            </summary>
            <param name="channelFactory">
            The channel factory to which the UM behavior should be attached. This causes tokens to be
            passed over the channel.
            </param>
            <returns>The AuthenticationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent">
            <summary>
            Authenticates the current windows identity silently. No login window is displayed. Should be called by a service that
            has no interactive user. The client must
            add the credentials to the ChannelFactory by calling AddUMEndpointBehaviorToFactory().
            </summary>
            <returns>The AuthenticationResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent(System.Security.Principal.WindowsIdentity)">
            <summary>
            Authenticates the given WindowsIdentity silently. No login window is displayed. Should be called by a service that has
            no interactive user.
            </summary>
            <param name="windowsIdentity">The windows identity.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent(System.Security.Principal.WindowsIdentity,System.ServiceModel.ChannelFactory)">
            <summary>
            Authenticates the given WindowsIdentity silently. No login window is displayed. Should be called by a service that has
            no interactive user.
            </summary>
            <param name="windowsIdentity">The windows identity.</param>
            <param name="channelFactory">
            The channel factory to which the UM behavior should be attached. This causes tokens to be
            passed over the channel.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent(System.Security.Principal.WindowsIdentity,System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates the given WindowsIdentity silently. No login window is displayed.  Should be called by a service that has
            no interactive user.
            </summary>
            <param name="windowsIdentity">The windows identity.</param>
            <param name="channelFactories">
            The list of channel factories to which the UM behavior should be attached. This causes
            tokens to be passed over the channel.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent2(System.Boolean,System.Collections.Generic.IEnumerable{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates the current windows identity silently. No login window is displayed. Should be called by a service that
            </summary>
            <param name="bSetCurrentUser">if set to <c>true</c> [b set current user].</param>
            <param name="channelFactories">The channel factories.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent2(System.Security.Principal.WindowsIdentity,System.Boolean,System.ServiceModel.ChannelFactory)">
            <summary>
            Authenticates the current windows identity silently. No login window is displayed. Should be called by a service that
            </summary>
            <param name="windowsIdentity">The windows identity.</param>
            <param name="bSetCurrentUser">if set to <c>true</c> [b set current user].</param>
            <param name="channelFactory">The channel factory.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateWindowsSilent2(System.Security.Principal.WindowsIdentity,System.Boolean,System.Collections.Generic.IEnumerable{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates the current windows identity silently. No login window is displayed. Should be called by a service that
            </summary>
            <param name="windowsIdentity">The windows identity.</param>
            <param name="bSetCurrentUser">if set to <c>true</c> [b set current user].</param>
            <param name="channelFactories">The channel factories.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.ClearCurrentCredentials">
            <summary>
            Clears the current credentials so that next time the client has to
            re-authenticate itself.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.DelegateCurrentToken">
            <summary>
            This method will set the current user context to the passed in credentials from the caller.
            If false is returned the caller did not pass in credentials and the anonymous account has not been set.
            The anonymous account should be used in this case.  Caller must call AddUMEndpointBehaviourToFactory to add the
            credential to the calls.
            </summary>
            <returns>False, if the caller did not pass in credentials and the anonymous account has not been set</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.DelegateCurrentToken(System.ServiceModel.ChannelFactory)">
            <summary>
            This method will set the current user context to the passed in credentials from the caller.
            If false is returned the caller did not pass in credentials and the anonymous account has not been set.
            The anonymous account should be used in this case.
            </summary>
            <param name="channelFactory">
            The channel factory to which the UM behavior should be attached. This causes tokens to be
            passed over the channel.
            </param>
            <returns>
            False, if the caller did not pass in credentials and the anonymous account has not been set
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.DelegateCurrentToken(System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            This method will set the current user context to the passed in credentials from the caller.
            If false is returned the caller did not pass in credentials and the anonymous account has not been set.
            The anonymous account should be used in this case.
            </summary>
            <param name="channelFactories">The channel factories.</param>
            <returns>
            False, if the caller did not pass in credentials and the anonymous account has not been set
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetAccountClaimValue(System.String)">
            <summary>
            Gets the claim value.
            </summary>
            <param name="claimType">The claim.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetAccountClaimValueForAccount(System.String,System.String,System.String)">
            <summary>
            Gets the account claim value for account.
            </summary>
            <param name="claimType">Type of the claim.</param>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetAccountIdForAccount(System.String,System.String)">
            <summary>
            Gets the account Id for an account.
            </summary>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns>Account Id</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetAccountName">
            <summary>
            Gets the name of the account.
            </summary>
            <returns>Account Name</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetAccountNameForAccount(System.String,System.String)">
            <summary>
            Gets the account name for account.
            </summary>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns>Account name</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetCredentialClaimValue(System.String)">
            <summary>
            Gets the claim value.
            </summary>
            <param name="claimType">The claim.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetCredentialClaimValueForAccount(System.String,System.String,System.String)">
            <summary>
            Gets the credential claim value for account.
            </summary>
            <param name="claimType">Type of the claim.</param>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetLastPasswordChangeTime">
            <summary>
            Gets the last password change time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetPasswordExpiry">
            <summary>
            Gets the credential password expiry (number of days until password expire).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetRoleClaimValues(System.String)">
            <summary>
            Gets the claim value.
            </summary>
            <param name="claimType">The claim.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.GetRoleClaimValuesForAccount(System.String,System.String,System.String)">
            <summary>
            Gets the role claim values for account.
            </summary>
            <param name="claimType">Type of the claim.</param>
            <param name="customUserName">Name of the user.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimAllowed(Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="claimType">The ClaimType to check for.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimAllowed(System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="claimType">The ClaimType to check for.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimAllowedForAccount(Asm.As.Oib.UserManagement.Proxy.Business.Objects.ClaimType,System.String,System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="claimType">The ClaimType to check for.</param>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimAllowedForAccount(System.String,System.String,System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="claimType">The ClaimType to check for.</param>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimValue(System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">
            The STR claim.  This must include product name + "/" + product unique id + "/" + claim type
            name.
            </param>
            <param name="strValue">The expected value.</param>
            <param name="claimType">Type of the claim.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimValue(System.String,System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">
            The STR claim.  This must include product name + "/" + product unique id + "/" + claim type
            name.
            </param>
            <param name="strValue">The expected value.</param>
            <param name="denyValue">The deny value. If set and it is found in the claims, the method will return false</param>
            <param name="claimType">Type of the claim.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentException">@unexpected value;claimType</exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimValueForAccount(System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum,System.String,System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">
            The STR claim.  This must include product name + "/" + product unique id + "/" + claim type
            name.
            </param>
            <param name="strValue">The expected value.</param>
            <param name="claimType">Type of the claim.</param>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentException">unexpected value;claimType</exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsInRole(System.String)">
            <summary>
            Determines whether the current credential is in the specified role.
            </summary>
            <param name="strRoleName">Name of the role.</param>
            <returns>
            <c>true</c> the current credential is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsInRoleForAccount(System.String,System.String,System.String)">
            <summary>
            Determines whether the current credential is in the specified role.
            </summary>
            <param name="strRoleName">Name of the role.</param>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns>
            <c>true</c> the current credential is in the specified role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsServiceAccount">
            <summary>
            Determines whether the currently logged on account is the SIPLACE Service account.
            OIB 6.0 and higher: there is no 'OIB Service Account' anymore.
            This method is here for compatibility reason only. The return value is always false.
            </summary>
            <returns>
            <c>true</c> if  currently logged on account is the SIPLACE Service account; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.Reauthenticate">
            <summary>
            Re-authenticates silently. No login window is displayed. Should be called when you want to refresh your token.
            A typical use case would be that the User was given another role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.Reauthenticate(System.ServiceModel.ChannelFactory)">
            <summary>
            Re-authenticates silently. No login window is displayed. Should be called when you want to refresh your token.
            A typical use case would be that the User was given another role.
            </summary>
            <param name="channelFactory">
            The channel factory to which the UM behavior should be attached. This causes tokens to be
            passed over the channel.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.Reauthenticate(System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Re-authenticates silently. No login window is displayed. Should be called when you want to refresh your token.
            A typical use case would be that the User was given another role.
            </summary>
            <param name="channelFactories">The channel factories.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.Reauthenticate2(System.Collections.Generic.List{System.ServiceModel.ChannelFactory})">
            <summary>
            Re-authenticates silently. No login window is displayed. Should be called when you want to refresh your token.
            A typical use case would be that the User was given another role.
            </summary>
            <param name="channelFactories">
            The list of channel factories to which the UM behavior should be attached. This causes
            tokens to be passed over the channel.
            </param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.AuthenticateSilentWithPasswordChangeInternal(System.String,System.Security.SecureString,System.Security.SecureString,System.Boolean,System.Collections.Generic.IEnumerable{System.ServiceModel.ChannelFactory})">
            <summary>
            Authenticates silent with password change.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <param name="setCurrentUser">if set to <c>true</c> [b set current user].</param>
            <param name="channelFactories">The channel factories.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimValueForAccountPrivate(System.String,System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum,System.String,System.String)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="strClaim">
            The STR claim.  This must include product name + "/" + product unique id + "/" + claim type
            name.
            </param>
            <param name="strValue">The expected value.</param>
            <param name="denyValue">The deny value.</param>
            <param name="claimType">Type of the claim.</param>
            <param name="customUserName">Name of the custom user.</param>
            <param name="password">The password.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentException">unexpected value;claimType</exception>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.CredentialManager.IsClaimValuePrivate(Asm.As.Oib.UserManagement.Proxy.Tokens.OIBClientCredentials,System.String,System.String,System.String,Asm.As.Oib.UserManagement.Proxy.Utilities.ClaimTypeEnum)">
            <summary>
            Determines whether the specified claim is allowed.
            </summary>
            <param name="credentials">The credentials.</param>
            <param name="strClaim">
            The STR claim.  This must include product name + "/" + product unique id + "/" + claim type
            name.
            </param>
            <param name="strValue">The expected value.</param>
            <param name="denyValue">
            The deny value. If set (! null or empty) and it is found in the claims, the method will return
            false
            </param>
            <param name="claimType">Type of the claim.</param>
            <returns>
            <c>true</c> the specified claim is allowed; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentException">@unexpected value;claimType</exception>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Utilities.EnumExtension">
            <summary>
            The TryParse() method for .NET 3.5
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.EnumExtension.TryParse``1(System.String,``0@,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-insensitive.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="value">The value.</param>
            <param name="result">The result.</param>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Utilities.RoleClaimValue">
            <summary>
            RoleClaimValue
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.RoleClaimValue.RoleName">
            <summary>
            Gets or sets the name of the role.
            </summary>
            <value>
            The name of the role.
            </value>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult">
            <summary>
            The class holds Service call result 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.AuthenticationResult">
            <summary>
            The authentication result.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.LogonTryDelay">
            <summary>
            The delay to next logon try
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.LockoutThreshold">
            <summary>
            The lockout threshold.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.PasswordExpired">
            <summary>
            Gets or sets a value indicating whether [password expired].
            </summary>
            <value>
              <c>true</c> if [password expired]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.PasswordExpiry">
            <summary>
            The password expiry (number of days until password expire)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.CreateInstance(Asm.As.Oib.UserManagement.Common.Utilities.AuthenticationResult,System.Exception)">
            <summary>
            Creates the instance.
            </summary>
            <param name="resultAsEnum">The result as <see cref="T:System.Enum" />.</param>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.CreateInstance(Asm.As.Oib.UserManagement.Common.Utilities.AuthenticationResult,System.ServiceModel.FaultCode)">
            <summary>
            Creates the instance.
            </summary>
            <param name="resultAsEnum">The result as <see cref="T:System.Enum" />.</param>
            <param name="faultCode">The fault code.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.CreateDefaultInstance(Asm.As.Oib.UserManagement.Common.Utilities.AuthenticationResult)">
            <summary>
            Creates the default instance.
            </summary>
            <param name="authenticationResult">The authentication result.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Utilities.ServiceCallResult.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper">
            <summary>
            The helper for try/catch calls.
            Unfortunately, we could not use here Asm.As.Oib.Common.Logging.Wrappers.MethodCallHelper because it has .NET version
            above this one.
            The implementation of TryServiceCallAuthorized() is identical to TryServiceCall() except only added the
            ValidateClaimOnMember() method.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``2(System.Action{``0},``0,System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the action with request in try / catch / finally and does
            logging.
            Omits a result or log exception.
            </summary>
            <typeparam name="T">The type of the request.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="action">The action.</param>
            <param name="request">The request.</param>
            <param name="memberInfo">The method information.</param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``2(System.Action{``0},``0,System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the action with request in try / catch / finally and does
            logging.
            Omits a result or log exception.
            </summary>
            <typeparam name="T">The type of the request.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="action">The action.</param>
            <param name="request">The request.</param>
            <param name="callerStackBoundaryDeclaringType">
            The declaring type of the method that is the stack boundary into the
            logging system for this call.
            </param>
            <param name="memberInfo">The method information.</param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``2(System.Func{``0},System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the function in try / catch / finally and does logging.
            Either returns result or throws a fault exception.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="memberInfo">The method information.</param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
            <returns>TResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``2(System.Func{``0},System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the function in try / catch / finally and does logging.
            Either returns result or throws a fault exception.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="memberInfo">The method information.</param>
            <param name="callerStackBoundaryDeclaringType">
            The declaring type of the method that is the stack boundary into the
            logging system for this call.
            </param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
            <returns>TResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``3(System.Func{``0,``1},``0,System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the function with request in try / catch / finally and does
            logging.
            Either returns result or throws a fault exception.
            </summary>
            <typeparam name="T">The type of the request</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="request">The request.</param>
            <param name="memberInfo">The method information.</param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
            <returns>TResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``3(System.Func{``0,``1},``0,System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the function with request in try / catch / finally and does
            logging.
            Either returns result or throws a fault exception.
            </summary>
            <typeparam name="T">The type of the request</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="request">The request.</param>
            <param name="memberInfo">The method information.</param>
            <param name="callerStackBoundaryDeclaringType">
            The declaring type of the method that is the stack boundary into the
            logging system for this call.
            </param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
            <returns>TResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``4(System.Func{``0,``1,``2},``0,``1,System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the function with request1 and request2 in try / catch / finally
            and does logging.
            Either returns result or throws a fault exception.
            </summary>
            <typeparam name="T1">The type of the request1.</typeparam>
            <typeparam name="T2">The type of the request2.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="request1">The request1.</param>
            <param name="request2">The request2.</param>
            <param name="memberInfo">The method information.</param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
            <returns>TResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallAuthorized``4(System.Func{``0,``1,``2},``0,``1,System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            The method checks authorization and if it is OK calls the function with request1 and request2 in try / catch / finally
            and does logging.
            Either returns result or throws a fault exception.
            </summary>
            <typeparam name="T1">The type of the request1.</typeparam>
            <typeparam name="T2">The type of the request2.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="request1">The request1.</param>
            <param name="request2">The request2.</param>
            <param name="memberInfo">The method information.</param>
            <param name="callerStackBoundaryDeclaringType">
            The declaring type of the method that is the stack boundary into the
            logging system for this call.
            </param>
            <param name="logInfo">if set to <c>true</c> [log information].</param>
            <returns>TResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallWithFinallyAuthorized``3(System.Func{``0,``1},``0,System.Action,System.Reflection.MemberInfo)">
            <summary>
            Tries the service call with finally action.
            </summary>
            <typeparam name="T">The type of the request.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="request">The request.</param>
            <param name="doFinally">The do finally.</param>
            <param name="memberInfo">The method information.</param>
            <returns>TResult</returns>
        </member>
        <member name="M:Asm.As.Oib.UserManagement.Proxy.Wrappers.MethodCallHelper.TryServiceCallWithFinallyAuthorized``3(System.Func{``0,``1},``0,System.Action,System.Reflection.MemberInfo,System.Type)">
            <summary>
            Tries the service call with finally action.
            </summary>
            <typeparam name="T">The type of the request.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TFault">The type of the fault.</typeparam>
            <param name="func">The function.</param>
            <param name="request">The request.</param>
            <param name="doFinally">The do finally.</param>
            <param name="callerStackBoundaryDeclaringType">
            The declaring type of the method that is the stack boundary into the
            logging system for this call.
            </param>
            <param name="memberInfo">The method information.</param>
            <returns>TResult</returns>
        </member>
    </members>
</doc>
