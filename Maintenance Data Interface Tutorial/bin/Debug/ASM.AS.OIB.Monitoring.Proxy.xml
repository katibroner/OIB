<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASM.AS.OIB.Monitoring.Proxy</name>
    </assembly>
    <members>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.NamespaceDoc">
            <summary>
            The Asm.As.Oib.Monitoring.Proxy.Architecture.Base contains the base classes for supporting the Architecture objects
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1">
            <summary>
            Internal base class for all monitoring proxy classes
            </summary>
            <typeparam name="T">The Type of channel to create</typeparam>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1.Factory">
            <summary>
            The channel factory.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1.Endpoint">
            <summary>
            Gets the endpoint.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1.GetProxy">
            <summary>
            Returns the WCF proxy.
            </summary>
            <returns>The WCF Channel object of type T</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1.CheckDisposed">
            <summary>
            Checks, if the object is disposed (throws ObjectDisposedException in this case).
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1.System#IDisposable#Dispose">
            <summary>
            Dispose of object resources
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Base.ProxyObjectBase`1.OnDispose">
            <summary>
            Called when [dispose].
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Helper.NamespaceDoc">
            <summary>
            The Asm.As.Oib.Monitoring.Proxy.Architecture.Helper contains the helper classes for supporting the Monitoring
            Architecture objects.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Interfaces.NamespaceDoc">
            <summary>
            The Asm.As.Oib.Monitoring.Proxy.Architecture.Interfaces namespace includes the architecture interfaces for supporting
            the architecture objects.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.NamespaceDoc">
            <summary>
            The Asm.As.Oib.Monitoring.Proxy.Architecture namespace contains all the architecture objects, types, interfaces and
            base classes
            for supporting the Monitoring proxy component.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateChange">
            <summary>
            ConnectionStateChange
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateChange.NoChange">
            <summary>
            No changes to before
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateChange.Disconnected">
            <summary>
            Changed from connected to disconnected
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateChange.Connected">
            <summary>
            Changed from disconnected to connected
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails">
            <summary>
            ConnectionStateDetails
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.StateChangeServiceToApplication">
            <summary>
            Gets the state change service to application.
            </summary>
            <value>
            The state change service to application.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.StateChangeServiceToApplicationDetectedUTC">
            <summary>
            Gets the DateTime in UTC when the state change service to application was detected.
            </summary>
            <value>
            The DateTime in UTC when the state change service to application was detected.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.StateChangeServiceToCore">
            <summary>
            Gets the state change service to core.
            </summary>
            <value>
            The state change service to core.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.StateChangeServiceToCoreDetectedUTC">
            <summary>
            Gets the DateTime in UTC when the state change service to core was detected.
            </summary>
            <value>
            The DateTime in UTC when the state change service to core was detected.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.StateChangeProxyToService">
            <summary>
            Gets the state change proxy to service.
            </summary>
            <value>
            The state change proxy to service.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.StateChangeProxyToServiceDetectedUTC">
            <summary>
            Gets the DateTime in UTC when the state change proxy to service was detected.
            </summary>
            <value>
            The DateTime in UTC when the state change proxy to service was detected.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.CurrentlyConnectedServiceToApplication">
            <summary>
            Current connection State from service to application.
            Null in case state is unknown. True if connected.
            </summary>
            <value>
            The currently connected service to application.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.CurrentlyConnectedServiceToCore">
            <summary>
            Current connection State from service to core.
            Null in case state is unknown. True if connected.
            </summary>
            <value>
            The currently connected service to core.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.CurrentlyConnectedProxyToService">
            <summary>
            Current connection State from proxy to service.
            Null in case state is unknown. True if connected.
            </summary>
            <value>
            The currently connected proxy to service.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.MonitoringManager">
            <summary>
            MonitoringManager class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.MonitoringManager.AddInstance(System.String,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Adds the instance.
            </summary>
            <param name="strHostName">Name of the string host.</param>
            <param name="instance">The instance.</param>
            <returns>True, if this a new instance and it was added</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.MonitoringManager.GetOrCreateInstance">
            <summary>
            Gets the or create instance.
            </summary>
            <returns>Monitoring instance</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.MonitoringManager.GetOrCreateInstance(System.String)">
            <summary>
            Gets the or create instance.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
            <returns>Monitoring instance</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.MonitoringManager.GetOrCreateInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Gets the or create instance.
            </summary>
            <param name="endpointAddress">The endpoint address.</param>
            <param name="binding">The binding.</param>
            <returns>Monitoring instance</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.MonitoringManager.GetOrCreateInstance(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.Boolean)">
            <summary>
            Gets the or create instance.
            </summary>
            <param name="endpointAddress">The endpoint address.</param>
            <param name="binding">Optional: the binding. Can be null. In this case the binding is automatically created</param>
            <param name="alwaysCheckCoreConnection">If this is set to true, the connection to the core will always be checked.</param>
            <returns>
            Monitoring instance
            </returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.NamespaceDoc">
            <summary>
            Asm.As.Oib.Monitoring.Proxy.Architecture.Objects contains the Architecture objects for the OIB Monitoring system.
            These currently include subscribing for events and receiving events.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverCallback">
            <summary>
            Callback handler for OneWay receiver of messages
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverCallback.Publish(Asm.As.Oib.Monitoring.Contracts.Message.MonitoringDataMessageRequest)">
            <summary>
            The default method to be called on the client with the Monitoring event
            </summary>
            <param name="request">The Message contract which contains the event data</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManager">
            <summary>
            The receiver manager class
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManager.CreateReceiverAndSubscription(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs)">
            <summary>
            Creates the receiver and subscriber tuple and a subscription is created with corresponding arguments
            </summary>
            <param name="args">The receiver manager arguments, that are used to create receiver and subscription tuple.</param>
            <returns>The receiver instance corresponding to the delivery mode</returns>
            <exception cref="T:System.ArgumentException">This delivery mode is not supported - deliveryMode</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManager.RemoveReceiverAndSubscription(System.String)">
            <summary>
            Removes the receiver and subscriber and unsubscribes the corresponding subscription.
            </summary>
            <param name="strReceiverEp">The receiver endpoint.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManager.RemoveAllReceiversAndSubscription">
            <summary>
            Removes all the receivers and subscribers and unsubscribes the corresponding subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManager.GetReceiver(System.String)">
            <summary>
            Gets the receiver.
            </summary>
            <param name="strReceiverEp">The receiver endpoint.</param>
            <returns>
            The receiver instance
            </returns>
            <exception cref="T:System.ArgumentException">Receiver endpoint address is null or empty</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManager.GetSubscriber(System.String)">
            <summary>
            Gets the subscriber.
            </summary>
            <param name="strReceiverEp">The receiver endpoint.</param>
            <returns>
            The subscriber instance
            </returns>
            <exception cref="T:System.ArgumentException">Receiver endpoint address is null or empty</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManager.InternalCreateReceiverAndSubscription(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs)">
            <summary>
            Internals the create receiver and subscription.
            </summary>
            <param name="args">The receiver manager arguments.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">This delivery mode is not supported - DeliveryMode</exception>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs">
            <summary>
            Receiver manager arguments
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.UnsubscribeOnDispose">
            <summary>
            Gets or sets a value indicating whether unsubscribe on dispose.
            </summary>
            <value>
              <c>true</c> if [unsubscribe on dispose]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.DeliveryMode">
            <summary>
            Gets or sets the delivery mode.
            </summary>
            <value>
            The delivery mode.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.SubscriptionTimeout">
            <summary>
            Gets or sets the subscription timeout.
            </summary>
            <value>
            The subscription timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.SubscriptionIdentifier">
            <summary>
            The existing subscription identifier
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.ReceiverEndpoint">
            <summary>
            Gets or sets the receiver endpoint.
            </summary>
            <value>
            The receiver endpoint.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.ReceiverBinding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>
            The binding.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.AllowDifferentPort">
            <summary>
            Gets or sets the allow different port.
            </summary>
            <value>
            The allow different port.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.SubscriptionManagerEndpoint">
            <summary>
            Gets or sets the subscription manager endpoint.
            </summary>
            <value>
            The subscription manager endpoint.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.SubscriptionManagerBinding">
            <summary>
            Gets or sets the subscription manager binding.
            </summary>
            <value>
            The subscription manager binding.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.XPathFilterAdapter">
            <summary>
            Gets or sets the x path filter adapter.
            </summary>
            <value>
            The x path filter adapter.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.CallbackCertificateStoreLocation">
            <summary>
            StoreLocation.LocalMachine or StoreLocation.CurrentUser
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.CallbackCertificateX509FindType">
            <summary>
            One of the X509FindType enum values (e.g. X509FindType.FindBySubjectDistinguishedName). The CallbackCertificateValue must match 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.CallbackCertificateStoreName">
            <summary>
            StoreName (typically StoreName.My)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.CallbackCertificateValue">
            <summary>
            Something like "CN=ASM.SW.Service"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverManagerArgs.CallbackCertificateCommonName">
            <summary>
            Something like "ASM.SW.Service"
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableBatchReceiver">
            <summary>
            Receiver class for receiving (reliable) SIPLACE Monitoring events.
            The SIPLACE Monitoring events are mapped to a .Net event handler for
            easy handling.
            The receiver opens a service endpoint with the given address and binding which is being called by
            OIB Eventing.
            After having instantiated this class, you need to subscribe for monitoring events
            at OIB Core by using Subscriber proxy.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableBatchReceiver.#ctor">
            <summary>
            Default constructor that reads from the app.config the bindings from the Receiver
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableBatchReceiver.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
            <exception cref="T:System.ArgumentNullException">endpointAddress;A non null endpointAddress must be set</exception>
            <exception cref="T:System.ArgumentException">A valid endpointAddress must be set;endpointAddress</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableBatchReceiver.#ctor(System.String)">
            <summary>
            Overloaded constructor to take the end point to receive the events.
            </summary>
            <param name="strEndpoint">The endpoint address where the service should be hosted.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableBatchReceiver.Asm#As#Oib#Monitoring#Contracts#Service#IPublishBatchDataRequestReply#Publish(Asm.As.Oib.WS.Eventing.Contracts.Messages.BatchSendRequest)">
            <summary>
            The default method to be called on the client with the Monitoring event
            </summary>
            <param name="request">The Message contract which contains the event data</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableBatchReceiverCallback">
            <summary>
            Reliable batch callback receiver for threading messages
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableBatchReceiverCallback.RequestResponse(Asm.As.Oib.WS.Eventing.Contracts.Messages.BatchSendRequest)">
            <summary>
            The default method to be called on the client with the Monitoring event
            </summary>
            <param name="request">The Message contract which contains the event data</param>
            <returns>BatchSendResponse</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiverCallback">
            <summary>
            Reliable callback receiver for threading messages
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiverCallback.Publish(Asm.As.Oib.Monitoring.Contracts.Message.MonitoringDataMessageRequest)">
            <summary>
            The default method to be called on the client with the Monitoring event
            </summary>
            <param name="request">The Message contract which contains the event data</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter">
            <summary>
            Class for converting Monitoring Data Filters into XPathFilter expressions.
            By default, a client subscribing for Monitoring Events receives all events from lines being connected to this OIB Core.
            The XmlPathFilterAdapter allows to define a filter which filters out Monitoring events at the OIB Core level for
            specific lines,
            stations or by a factory layout elements so that this specific client does not receive all monitoring events of the
            full factory.
            This reduces the system load significantly.
            </summary>
            <example>
            Simple example of creating an XPath filter for filtering all Monitoring messages with ISA95 Path = Enterprise.
            <code lang="C#">
            XPathFilterAdapter xPathFilter = new XPathFilterAdapter(XPathFilterDataType.Isa95Path,"Enterprise");
            monitoringProxy.Subscribe(xPathFilter, new EndpointAddress("http:\\MyTestEndpoint"), DeliveryModeType.PushReliable);
            </code>
            </example>
            <remarks>
            All types are queried with the Equals operator. So if you want a complex expression that for instance returns all the
            Stations underneath an Isa95Path (Factory Layout Element) Path such as
            Enterprise:Site:ProductionLine:SiplaceLine, you need to use the advanced XPath query (not the XPathFilterAdapter
            object). The XPathFilterAdapter object only builds simple queries using the = operator currently.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.#ctor(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType,System.String)">
            <summary>
            The constructor for initializing the Adapter with a Data Type and Data value.
            </summary>
            <param name="xPathFilterDataType">The Data Type upon which to build the filter with.</param>
            <param name="value">The Value associated with the Data Type selected.</param>
            <remarks>
            All types are queried with the Equals operator. So if you want a complex expression that for instance returns all the
            Stations underneath an Isa95Path (Factory Layout Element) Path such as
            Enterprise:Site:ProductionLine:SiplaceLine, you need to use the advanced XPath query (not the XPathFilterAdapter
            object). The XPathFilterAdapter object only builds simple queries using the = operator currently.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.#ctor(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType,System.Collections.Generic.List{System.String})">
            <summary>
            The constructor for initializing the Adapter with a Data Type and Data value.
            </summary>
            <param name="xPathFilterDataType">The Data Type upon which to build the filter with.</param>
            <param name="values">
            A List of Values associated with the Data Type selected. These will be concatenated to form a OR
            filter string.
            </param>
            <remarks>
            All types are queried with the Equals operator. So if you want a complex expression that for instance returns all the
            Stations underneath an Isa95Path (Factory Layout Element) Path such as
            Enterprise:Site:ProductionLine:SiplaceLine, you need to use the advanced XPath query (not the XPathFilterAdapter
            object). The XPathFilterAdapter object only builds simple queries using the = operator currently.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.#ctor(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType,System.String,System.Boolean)">
            <summary>
            The constructor for initializing the Adapter with a Data Type and Data value.
            </summary>
            <param name="xPathFilterDataType">The Data Type upon which to build the filter with.</param>
            <param name="value">The Value associated with the Data Type selected.</param>
            <param name="caseInvariant">if set to <c>true</c> the filter will be case invariant.</param>
            <remarks>
            All types are queried with the Equals operator. So if you want a complex expression that for instance returns all the
            Stations underneath an Isa95Path (Factory Layout Element) Path such as
            Enterprise:Site:ProductionLine:SiplaceLine, you need to use the advanced XPath query (not the XPathFilterAdapter
            object). The XPathFilterAdapter object only builds simple queries using the = operator currently.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.#ctor(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            The constructor for initializing the Adapter with a Data Type and Data value.
            </summary>
            <param name="xPathFilterDataType">The Data Type upon which to build the filter with.</param>
            <param name="values">
            A List of Values associated with the Data Type selected. These will be concatenated to form a OR
            filter string.
            </param>
            <param name="caseInvariant">if set to <c>true</c> the filter will be case invariant.</param>
            <remarks>
            All types are queried with the Equals operator. So if you want a complex expression that for instance returns all the
            Stations underneath an Isa95Path (Factory Layout Element) Path such as
            Enterprise:Site:ProductionLine:SiplaceLine, you need to use the advanced XPath query (not the XPathFilterAdapter
            object). The XPathFilterAdapter object only builds simple queries using the = operator currently.
            </remarks>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.DataType">
            <summary>
            The DataType associated with the XPathFilter
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.DataValue">
            <summary>
            The Data Value associated with the XPathFilter
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.DataValues">
            <summary>
            The Data Values associated with the XPathFilter
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.CaseInvariant">
            <summary>
            Gets or sets a value indicating whether the filter will be case invariant.
            </summary>
            <value>
            <c>true</c> if the filter will be case invariant; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.CreateXPathMessageFilter">
            <summary>
            Helper Method to create the XPath Filter given a ISA95 Line Path, a SIPLACE Pro Full Line Path, a SIPLACE Pro full
            station path or a SIPLACE Pro Station OID
            The XPathMessageFilter expression for WS-Eventing filtering of Monitoring messages associated with a particular ISA 95
            Line Path
            </summary>
            <returns>
            The XPathMessageFilter expression for WS-Eventing filtering of Monitoring messages associated with a particular ISA 95
            Line Path
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.CreateXPathMessageFilterDataInput(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType,System.String,System.Boolean)">
            <summary>
            Helper Method to create the XPath Filter given a ISA95 Line Path, a SIPLACE Pro Full Line Path, a SIPLACE Pro full
            station path or a SIPLACE Pro Station OID
            </summary>
            <param name="xPathFilterDataType">The Data Type to build the XPathFilter</param>
            <param name="strValue">The Value associated with Data Type (i.e.ISA 95 Line Path)</param>
            <param name="caseInvariant">if set to <c>true</c> [case invariant].</param>
            <returns>
            The XPathMessageFilter expression for WS-Eventing filtering of Monitoring messages associated with a particular ISA 95
            Line Path
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.CreateXPathMessageFilterDataInput(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Helper Method to create the XPath Filter given a ISA95 Line Path, a SIPLACE Pro Full Line Path, a SIPLACE Pro full
            station path or a SIPLACE Pro Station OID
            </summary>
            <param name="xPathFilterDataType">The Data Type to build the XPathFilter</param>
            <param name="listValues">The Values associated with Data Type (i.e.ISA 95 Line Path)</param>
            <param name="caseInvariant">if set to <c>true</c> [case invariant].</param>
            <returns>
            The XPathMessageFilter expression for WS-Eventing filtering of Monitoring messages associated with a particular ISA 95
            Line Path
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter.ToString">
            <summary>
            xPathFilterAdapter To String
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType">
            <summary>
            The XPathFilter data type to be used to create the XPathFilters
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType.Isa95Path">
            <summary>
            The ISA95 Path associated with the Configuration Manager Object for the Station
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType.LineFullPath">
            <summary>
            The SIPLACE Pro Line Full Path
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType.StationFullPath">
            <summary>
            The SIPLACE Pro Station Full Path
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterDataType.StationId">
            <summary>
            The SIPLACE Pro Station OID
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateChangedEvent">
            <summary>
            This event is fired whenever a connection state change is detected
            </summary>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConnectionStateDetails" /> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring">
            <summary>
            The Monitoring proxy enables the client to directly connect to a OIB Monitoring Adapter.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ConnectionStateChanged">
            <summary>
            Occurs when the proxy detects a connection state change.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.s_checkAliveFrequency">
            <summary>
            The check alive frequency in ms
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ClearObjectCacheFrequency">
            <summary>
            Frequency of when the object cache should be cleared. The behavior depends on the MaxObjectCacheLifeSpan
            and ClearOnlyIfNumberOfObjectsInCacheAreGreaterThanProperties.
            Default is one 10 minutes. Can be set either through this field or in the app.config under
            "Asm.As.Oib.Monitoring.Proxy.ClearObjectCacheFrequency"
            Valid range is from 1 minute to 7 days.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._cache">
            <summary>
            The _cache
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._connectionCheckLock">
            <summary>
            The s_ connection check lock
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._adapterTimeZone">
            <summary>
            The _adapter time zone
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._checkConnectionStateTimer">
            <summary>
            The _check connection state timer
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._currentStateProxyToService">
            <summary>
            The _current state proxy to service
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._currentStateServiceToApplication">
            <summary>
            The _current state service to application
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._currentStateServiceToCore">
            <summary>
            The _current state service to core
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._machineErrorStrings">
            <summary>
            The machine error strings for the current culture
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.s_machineErrorStringsPerAvailableCulture">
            <summary>
            The machine error strings by cultures
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring._machineName">
            <summary>
            The _machine name
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.#ctor(System.String)">
            <summary>
            Constructor using the configured endpoint name in the application configuration file.
            </summary>
            <param name="endpointConfigurationName">Endpoint Name</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.OnDispose">
            <summary>
            Called when [dispose].
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.AdapterEndpointAddress">
            <summary>
            EndpointAddress of connected Monitoring Adapter
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.MaxObjectCacheLifeSpan">
            <summary>
            Maximum time span that objects will be cached in the Object Cache after last access.
            If an object has been used in between, it will not be removed by the automatic logic.
            Default is one 8 hours. Can be set either through this field or in the app.config under
            "Asm.As.Oib.Monitoring.Proxy.MaxObjectCacheLifeSpan"
            For immediate removal, set this to TimeSpan.Zero.
            Valid range is from TimeSpan.Zero to 7 days.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.UseSecureEndpointsWhenConnectingToAdapter">
            <summary>
            When the client receives an event from a Monitoring Adapter and the client has not yet initialized a connection to the adapter
            previously, then this Monitoring Proxy will automatically connect to it when trying to load objects for the first time.
            These objects are typically: A Station / Line Property in an event, a Recipe, TrackEntries, FeederLocations, PickupErrors.
            Inside the event data are also endpoints so that this proxy knows where the adapter can be reached. It sends the secure and un-secure endpoints.
            If set to true, the secure endpoint will be used to contact the Monitoring Adapter (which means that the adapter's certificate needs to be trusted on
            the computer where this client application is running). If set to false, the un-secure endpoint is used instead.
            <remarks>
            This property is initialized with true if not explicitly set to false.
            You can also set this property via the app.config under appSettings, key "Asm.As.Oib.Monitoring.Proxy.UseSecureEndpointsWhenConnectingToAdapter"
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ClearOnlyIfNumberOfObjectsInCacheAreGreaterThan">
            <summary>
            Automatic removal of cached objects is only done if the amount of cached objects exceeds this number.
            By default it is 0 (always remove). Can be set either through this field or in the app.config under
            "Asm.As.Oib.Monitoring.Proxy.ClearOnlyIfNumberOfObjectsInCacheAreGreaterThan"
            Valid range is from 0 to 10000
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.CurrentStateServiceToApplication">
            <summary>
            Gets the current state service to application.
            </summary>
            <value>
            The current state service to application.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.CurrentStateServiceToCore">
            <summary>
            Gets the current state service to core.
            </summary>
            <value>
            The current state service to core.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.CurrentStateProxyToService">
            <summary>
            Gets the current state proxy to service.
            </summary>
            <value>
            The current state proxy to service.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.MachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <value>
            The name of the machine.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.CheckConnectionStateFrequency">
            <summary>
            Gets or sets the check alive frequency in ms.
            This value must be greater or equal to 10 seconds (10000) and less or equal to 30 minutes (1800000).
            Default value is 60000 (1 minute)
            Can also be set in the application configuration file appSettings like so, value is in milliseconds:
            <add key="Asm.As.Oib.Monitoring.Proxy.CheckConnectionStateFrequency" value="60000" />
            </summary>
            <value>
            The check alive frequency in ms.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.MachineErrorStringsPerAvailableCulture">
            <summary>
            Gets the machine error strings per available culture.
            </summary>
            <value>
            The machine error strings per available culture.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.MachineErrorStrings">
            <summary>
            Gets the machine error strings in the current UI language.
            Maps an ErrorType integer value to the description.
            </summary>
            <value>
            The machine error strings.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.AdapterVersion">
            <summary>
            Gets the OIB adapter version.
            </summary>
            <value>
            The OIB adapter version.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.MonitoringServiceVersion">
            <summary>
            Gets the OIS/SIS Monitoring Service version.
            </summary>
            <value>
            The OIS/SIS Monitoring Service version.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.HasAdapterLicense">
            <summary>
            Checks if an Line Control adapter license is available.
            </summary>
            <returns>True, if license is available.</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetConnectionStateDetails">
            <summary>
            Gets the connection state details.
            </summary>
            <returns>
            ConnectionStateDetails
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetConfiguration">
            <summary>
            Return the configuration of the SIPLACE Monitoring Service managed by the adapter.
            </summary>
            <returns>
            Configuration
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.Start">
            <summary>
            Starts the events from the Monitoring Service
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.Stop">
            <summary>
            Stops the events from the Monitoring Service
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.StartPickupObservation(System.String,System.TimeSpan,System.Guid)">
            <summary>
            Start Pickup Observation for a given station
            </summary>
            <param name="stationFullPath">The Unique Station Full path to observe pickups from.</param>
            <param name="timsSpan">The Time Span to observe the Pickups</param>
            <param name="sessionId">The Unique Id (cookie) for this client</param>
            <remarks>
            After starting the Pickup Observation mechanism, the Monitoring service sends Pickup Observation events periodically.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.StopPickupObservation(System.Guid)">
            <summary>
            Stop Pickup Observation for the given station
            </summary>
            <param name="sessionId">The Unique Id (Cookie) for which to stop send events for.</param>
            <returns>
            PickupObservationData
            </returns>
            <remarks>
            After the Stop Pickup Observation command has been received, the Monitoring Service stops gathering Pickup Error and
            consumption related data.
            The Data that has been gathered since the last Pickup Observation Events was send will be sent
            immediately after the Stop Pickup Observation command has been received.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetPassmodeForStation(System.String)">
            <summary>
            Method to retrieve the current Pass mode status of a given station
            </summary>
            <param name="stationFullPath">The Full Path of the Station</param>
            <returns>
            A "PassmodeCollection" contains one or more Pass mode status information for certain processing locations of a given
            station
            </returns>
            <remarks>
            Monitoring adapter requests the Pass mode status Monitoring retrieved the requested states from the internal states
            and returns a Pass mode collection containing Pass mode flags for all processing locations of the station.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetPassmodeForLine(System.String)">
            <summary>
            Method to request the Pass mode status for the whole Line
            </summary>
            <param name="strLineFullPath">The Full Path of the Line to return data for</param>
            <returns>
            Array of PassmodeCollection
            </returns>
            <remarks>
            Monitoring adapter requests the Pass mode status for the whole Line
            Monitoring retrieved the requested states from the internal states and returns an
            Array of Pass mode collection to the monitoring adapter.
            Each Pass mode Collection contains Pass mode flags for all processing locations contained in the referred station.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetActiveRecipesForStation(System.String)">
            <summary>
            Method returns the current recipe IDs for the given station
            </summary>
            <param name="stationFullPath">unique path for the Station/Line pair</param>
            <returns>
            The RecipeCollection containing Recipe objects for each processing location of the station.
            If station is not found, returns null.
            </returns>
            <remarks>
            Monitoring adapter requests the current recipe IDs for the given station
            Monitoring retrieves the requested RecipeIDs from the internal tables and returns a RecipeCollection to the monitoring
            adapter.
            The RecipeCollection contains RecipeIDs for each processing location of the station.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetActiveRecipesForLine(System.String)">
            <summary>
            Method returns the current recipe IDs for the an entire Line
            </summary>
            <param name="strLineFullPath">The Full Path of the Line</param>
            <returns>
            Current recipe IDs for the an entire Line
            </returns>
            <remarks>
            Monitoring adapter requests the RecipeIDs  for the whole Line
            Monitoring service retrieves the requested IDs from the internal states and returns an Array of Pass mode collection to
            the monitoring adapter
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ToLocalProxyTime(System.DateTime)">
            <summary>
            This method converts DateTime objects retrieved from the Monitoring Adapter
            into the local time. Use this for client-server scenarios where you span over time zones.
            </summary>
            <param name="serverTime">Time returned from the adapter</param>
            <returns>
            Time converted to local time
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ToUtcTime(System.DateTime)">
            <summary>
            This method converts DateTime objects retrieved from the Monitoring Adapter
            into UTC time. Use this for client-server scenarios where you span over time zones
            and work uniquely with UTC on your side.
            </summary>
            <param name="serverTime">Time returned from the adapter</param>
            <returns>
            Time converted to local time
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetTrackEntry(System.Int32)">
            <summary>
            Get the Track Entry for a Given TrackId
            </summary>
            <param name="nTrackEntryId">The TrackId</param>
            <returns>
            The Associated Track Entry for the given TrackId
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetTrackEntryLong(System.Int64)">
            <summary>
            Get the Track Entry for a Given TrackId
            </summary>
            <param name="trackEntryId">The TrackId</param>
            <returns>
            The Associated Track Entry for the given TrackId
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetTrackIdEntries(System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets the track entries for the given track entry IDs
            </summary>
            <param name="trackEntryIds">The track entry ids.</param>
            <returns>
            List of track entries
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetTrackIdEntriesLong(System.Collections.Generic.List{System.Int64})">
            <summary>
            Gets the track entries for the given track entry IDs
            </summary>
            <param name="trackEntryIds">The track entry ids.</param>
            <returns>
            List of track entries
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetLastDownloadRecipesForStation(System.String)">
            <summary>
            Get the Last Download Recipes for the provided Station
            </summary>
            <param name="strStationFullPath">The provided Station Full Path entry id.</param>
            <returns>
            The associated Download Recipes for the given Station
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetLastDownloadRecipesForLine(System.String)">
            <summary>
            Get the Last Download Recipes for the provided Line
            </summary>
            <param name="strLineFullPath">The provided Line Full Path entry id.</param>
            <returns>
            The associated Download Recipes for the given Line
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ClearObjectCache">
            <summary>
            Clears ALL contents of the object cache (contains Recipe, Station and TrackEntry objects for quicker lookup).
            Use this method to release all those instances, no matter what the values of MaxObjectCacheLifeSpan and
            ClearOnlyIfNumberOfObjectsInCacheAreGreaterThan are.
            After doing so, Recipes, Stations and TrackEntries will need to be loaded again from the Monitoring Adapter
            Once these properties are accessed again.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetPassmodeForDevice(System.String,System.Int32)">
            <summary>
            Get the Passmode data for the given device
            </summary>
            <param name="deviceFullPath">The device full path.</param>
            <param name="machineType">Type of the machine (PlacementMachine = 0, Printer = 1)</param>
            <returns>
            Collection of pass mode information for the given device
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetActiveRecipesForDevice(System.String,System.Int32)">
            <summary>
            Get the currently active Recipes for a given device
            </summary>
            <param name="deviceFullPath">The device full path.</param>
            <param name="machineType">Type of the machine (PlacementMachine = 0, Printer = 1)</param>
            <returns>
            The RecipeCollection containing Recipe objects for each processing location of the device.
            If device is not found, returns null.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetLastDownloadRecipesForDevice(System.String,System.Int32)">
            <summary>
            Get the Last Download Recipes for a given device
            </summary>
            <param name="deviceFullPath">The device full path.</param>
            <param name="machineType">Type of the machine (PlacementMachine = 0, Printer = 1)</param>
            <returns>
            The associated Download Recipes for the given device
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.SetCertificateForClientAuthentication(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.X509FindType,System.Security.Cryptography.X509Certificates.StoreName,System.String)">
            <summary>
            Sets the client certificate parameters for authentication to the MonitoringService.
            Needs to be provided in case OIB Core services require a client certificate.
            </summary>
            <param name="storeLocation">The store location.</param>
            <param name="findType">Type of the find.</param>
            <param name="storeName">Name of the store.</param>
            <param name="findValue">The find value.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetConnectionStateDetails(System.Boolean)">
            <summary>
            Gets the connection state details.
            </summary>
            <returns>
            ConnectionStateDetails
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetConfigurationInternal">
            <summary>
            Gets the configuration internal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetTrackEntryInternal(System.Int64)">
            <summary>
            Gets the track entry internal.
            </summary>
            <param name="trackEntryId">The track entry identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetTrackEntriesInternal(System.Collections.Generic.List{System.Int64})">
            <summary>
            Gets the track entry internal.
            </summary>
            <param name="trackEntryIds">The track entry identifiers.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.GetRecipeInternal(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.MonitoringReference)">
            <summary>
            Return recipe composite for a given recipe Id
            </summary>
            <param name="refRecipe">The Recipe Reference (id)</param>
            <returns>
            The Recipe data
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.PopulateUsedDetails(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe,System.Collections.Generic.List{Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail})">
            <summary>
            Populates the used details.
            </summary>
            <param name="recipe">The recipe.</param>
            <param name="listUsedDetails">The list used details.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.CheckConnectionStateTimerOnElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Checks the connection state timer on elapsed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="elapsedEventArgs">The <see cref="T:System.Timers.ElapsedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.PopulateStationDictionary(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration)">
            <summary>
            Populates the station dictionary.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.PopulateTrackEntryDictionary(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe)">
            <summary>
            Populates the track entry dictionary.
            </summary>
            <param name="recipe">The recipe.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache">
            <summary>
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache._dictRecipeReferences">
            <summary>
            The dictionary recipe references
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache._dictStationReferences">
            <summary>
            The dictionary station references
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache._dictTrackEntryReferences">
            <summary>
            The dictionary track entry references
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache._objectCacheCleanupTimer">
            <summary>
            The CleanupTimer for the object cache
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.AddRecipeReference(System.Int64,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe)">
            <summary>
            Adds the recipe reference.
            </summary>
            <param name="recipeReferenceId">The reference identifier.</param>
            <param name="recipe">The recipe.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.GetRecipe(System.Int64)">
            <summary>
            Gets the recipe.
            </summary>
            <param name="recipeReferenceId">The reference identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.GetRecipeReferenceIdsInCache">
            <summary>
            Gets the recipe reference ids in cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.AddStationReference(System.Int64,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station)">
            <summary>
            Adds the station reference.
            </summary>
            <param name="stationReferenceId">The reference identifier.</param>
            <param name="station">The station.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.AddStationReferences(System.Collections.Generic.List{Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station})">
            <summary>
            Adds the station references.
            </summary>
            <param name="stations">The stations.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.GetStation(System.Int64)">
            <summary>
            Gets the station.
            </summary>
            <param name="stationReferenceId">The reference identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.GetStationReferenceIdsString">
            <summary>
            Gets the station reference ids in cache as string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.AddTrackEntryReference(System.Int64,Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry)">
            <summary>
            Adds the track entry reference.
            </summary>
            <param name="trackEntryId">The reference identifier.</param>
            <param name="trackEntry">The track entry.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.AddTrackEntryReferences(System.Collections.Generic.List{Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry})">
            <summary>
            Adds the track entry references.
            </summary>
            <param name="trackEntries">The track entries.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.GetTrackEntry(System.Int64)">
            <summary>
            Gets the track entry.
            </summary>
            <param name="trackEntryId">The reference identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.GetTrackEntries(System.Collections.Generic.List{System.Int64},System.Collections.Generic.Dictionary{System.Int64,Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry}@)">
            <summary>
            Gets the track entries.
            </summary>
            <param name="trackEntryIds">The reference identifiers.</param>
            <param name="trackEntries">The track entries.</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.GetTrackEntryReferenceIdsInCache">
            <summary>
            Gets the track entry reference ids in cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.SetupTimer">
            <summary>
            Setups the timer.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring.ObjectCache.ObjectCacheCleanupTimerTimerOnElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            The timer on elapsed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="elapsedEventArgs">The <see cref="T:System.Timers.ElapsedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher">
            <summary>
            The Publisher proxy for publishing data to the Monitoring service
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher.#ctor(System.String)">
            <summary>
            Constructor using the configured endpoint name in the application configuration file.
            </summary>
            <param name="endpointConfigurationName">Endpoint Name</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher.Finalize">
            <inheritdoc />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher.PublishData(System.ServiceModel.Channels.Message)">
            <summary>
            Publish data via a Message request
            </summary>
            <param name="message">Message request containing monitoring data</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Publisher.PublishMonitoringData(System.String,Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData)">
            <summary>
            Publishing monitoring data with an associated Topic
            </summary>
            <param name="strTopic">the topic to publish</param>
            <param name="monitoringData">The monitoring data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.BoardProcessedEvent">
            <summary>
            Occurs when a board is completed within a station (when the board is leaving the station).
            Comprises all events, state transitions, pickup errors and consumption data for a board in a given station
            </summary>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ConfigurationChangedEvent">
            <summary>
            Occurs when whenever the ASM SIPLACE Pro line configuration changes. Contains the complete line configuration from ASM SIPLACE Pro
            </summary>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.StationEvent">
            <summary>
            Occurs when a state transition is triggered in WORKS OIS state machine by a station event.
            </summary>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeChangeEvent">
            <summary>
            <b>Only for SSW 70x and later.</b>
            Occurs whenever WORKS OIS detected a line job guid change with the <b>production start</b> of a board at station.
            </summary>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
            <remarks>
            WORKS OIS evaluates the LineJobGuid and sends an EventRecipeChange message whenever the LineJobGuid changes with production start of a board.
            There are rare occurrences that SSW cannot assign the LineJobGuid before it sends the production started message. In this case, the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeChangeEvent"/>
            occurs when the board leaves station. For SSW 60x and earlier, please use <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeActivationChangeEvent"/>.
            </remarks>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.PickupObservationEvent">
            <summary>
            Occurs periodically when predefined seconds have passed.
            </summary>
            <remarks>
            The pickup related data is stored in PickupComposite containers which contain accumulated PickupError and Consumption
            information for a given station and a predefined time span. 
            This messages contains a consumption entry (UsedDetail entries) for each feeder location where pickups occurred in the
            given time span.
            It also contains a list of all pickup errors which came up for the given station during the given time scope
            </remarks>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.PassmodeEvent">
            <summary>
            Occurs when the bypassed flag in the Recipe changes or whenever a station sends a
            bypassed event, indicating, that the station has been set to pass through mode.
            </summary>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
            <remarks>
            The station notifies the WORKS OIS about the deactivation of certain parts of the station or about the
            deactivation of the whole station.
            WORKS OIS sends a PassmodeEvent to the monitoring adapter.
            The Passmode collection contains Passmode flags for those processing locations of the station where the Passmode flag
            has changed.
            </remarks>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeActivationChangeEvent">
            <summary>
            <b>Only SSW 60x and earlier!</b>
            Fired after the first board of a new recipe finished production at station (<b>board is moving out of station</b>).
            A RecipeCollection contains a recipe ID for each processing location where a recipe change has been detected.
            </summary>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
            <remarks>
            WORKS OIS evaluates the board message (containing recipe and board name) from station and
            retrieves the RecipeID based on these properties. Whenever it finds a change in the RecipeID WORKS OIS fires this event.
            Since this event only occurs AFTER the first board was produced, it is not supported with SSW 70x and higher.
            Instead used <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeChangeEvent"/>, which is triggered when the first board of a new recipe STARTS production within station.
            </remarks>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.SetupUpdateEvent">
            <summary>
            Occurs when WORKS OIS recognizes the occurrence of an alternative component.
            </summary>
            <remarks>The args contains the SetupCollection with a list of Track entries: one entry for each detected alternative component.</remarks>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent">
            <summary>
            Occurs when WORKS OIS receives a download event from ASM SIPLACE Pro for a station/conveyor-lane combination.
            This does not imply that the recipe is active on the station yet.
            Note: In case of a job download (barcode mode) this event will not get fired for station software 40x and 50x.
            In case you want to subscribe to setup downloads, use the SPI Adapter oder Line Control Adapter instead.
            </summary>
            <remarks>
            The event takes place a few seconds after a recipe download has been performed from LineControl to the station(s).
            A download usually gets performed for all station of a line simultaneously if no station wise download is active.
            If station wise download is active a download starts with the first station of the line, and the download for the
            consecutive stations gets performed whenever the stations are ready to download.
            A DownloadRecipe contains all recipe related properties (recipe, tracks, Boards, Heads, RecipeAddon)
            WORKS OIS sends a Download Recipe Event for each station/conveyor-lane combination.
            </remarks>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.SpliceEvent">
            <summary>
            Occurs when WORKS OIS receives one or more splice events from the station.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpliceEventArgs"/> instance containing the event data.</param>
            <exclude />
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.HeartBeatEvent">
            <summary>
            Is fired typically every 5 minutes. You can use this event to see if the eventing communication is still alive
            and if you have received all events until a certain point in time.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.HeartBeatEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.PickupErrorEvent">
            <summary>
            Occurs when WORKS OIS received a single pickup error from station.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.StationAvailablilityEvent">
            <summary>
            Occurs whenever a station signals an availability state change, e.g. Producing -> Standby
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationAvailabilityEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.FeederErrorEvent">
            <summary>
            Occurs when a station signals a feeder error like foil torn without pick-up activity.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.FeederErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.BoardTrackingEvent">
            <summary>
            Occurs when a board production step was finished by station.
            Is fired for each board tracking event in a conveyor section and a conveyor lane.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardTrackingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.BoardCanceledEvent">
            <summary>
            Occurs when a board is canceled by operator at station GUI.
            </summary>
            <param name="sender">The sender of the event (this object)</param>
            <param name="args">The Event args describing the contents.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.LineJobGuidChangedEvent">
            <summary>
            <b>SSW 70x or 605 is required.</b><br/>
            Occurs when OIS detected a change in the line job guid to the previous one produced at given processing location. This event is
            independent of the timing of <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent" />.
            <para>
            What is its difference to <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeActivationChangeEvent"/>?<br/>
            Answer: the RecipeActivationChangeEvent is signaled after <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent"/> and when board finished production in station.
            </para>
            <para>
            What is its difference to <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeChangeEvent"/>?<br/>
            Answer: the RecipeChangeEvent is signaled after <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent"/> and when board started production in station. 
            </para>
            For SSW (&lt; 715 including 605) this event is signaled when either board measurement or component pickup process was started for the first
            board with the different line job guid.<br/>
            For SSW 715 and newer the event is triggered when station switches production of new boards to this recipe (= "StartJobCompleted").
            <para>In order to lookup recipe details of the active recipe you must lookup the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent"/>
            with same line job guid and the latest start time before. 
            Please keep in mind, that you may not yet have received the latest <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent"/> information,
            since setup changes during board production (= alternative components) will result in recipe updates.
            In some cases, the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent"/> will only triggered after <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.LineJobGuidChangedEvent"/></para>
            </summary>
            <param name="sender">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase"/> sender.</param>
            <param name="args">Forwarded details of the recipe activation event.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.SpeedLossReasonChangedEvent">
            <summary>
            <b>SSW 715 or later is required</b><br/>
            Occurs when station software intentionally changes performance. Reasons can be, for example,
            operator interaction or temperature changes.
            </summary>
            <param name="sender">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase"/> sender.</param>
            <param name="args">Forwarded details of the currently active speed loss reasons.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase">
            <summary>
            The base class for the Reliable and Non Reliable receiving of events.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase._callbackThreadId">
            <summary>
            CallbackThreadId
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase._callbackEndpointAddress">
            <summary>
            Uri
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.BatchMode">
            <summary>
            Batch Mode
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.MarshalEventsToSessionCreatorThread">
            <summary>
            If true, all Events will be fired on the thread that created the Session.
            This is helpful if you use the Events to update the UI.
            In order for that to work correctly, you need a SynchronizationContext.Current
            when the Session is created (if this was done on the UI thread, then the SynchronizationContext.Current
            is there by default.
            The default value of this property is true.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.Reliable">
            <summary>
            Reliable
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase"/> class.
            </summary>
            <param name="reliableCallback">if set to <c>true</c> [reliable callback].</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.CallbackCertificateCommonName">
            <summary>
            Something like "ASM.SW.Service"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.CallbackCertificateValue">
            <summary>
            Something like "CN=ASM.SW.Service"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.CallbackCertificateStoreLocation">
            <summary>
            StoreLocation.LocalMachine or StoreLocation.CurrentUser
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.CallbackCertificateX509FindType">
            <summary>
            One of the X509FindType enum values (e.g. X509FindType.FindBySubjectDistinguishedName). The CallbackCertificateValue must match 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.CallbackCertificateStoreName">
            <summary>
            StoreName (typically StoreName.My)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.CallbackEndpointString">
            <summary>
            Gets the callback endpoint string.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.CallbackEndpointAddress">
            <summary>
            Gets the callback endpoint address.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.DataCount">
            <summary>
            the amount of events received. Used for development purposes/debugging
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StateChangeFilterEnabled">
            <summary>
            Flag for Enabling the State Change Filter. So, only events that contain State Changes will be sent to Client.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StateChangeFilterRuleExceptions">
            <summary>
            A list of State Change Filter exceptions
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StartListener(System.Boolean,System.String,System.ServiceModel.Channels.Binding,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            To start receiving events, call this method.
            </summary>
            <param name="bReliable">if set to <c>true</c> [b reliable].</param>
            <param name="receiverAddress">The receiver address.</param>
            <param name="binding">The binding.</param>
            <param name="bBatchMode">if set to <c>true</c> [b batch mode].</param>
            <param name="allowDifferentPort">if set to <c>true</c> [allow different port].</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StartListenerInternal(System.Boolean,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters,System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            To start receiving events, call this method.
            </summary>
            <param name="bReliable">if set to <c>true</c> [b reliable].</param>
            <param name="securityParameters">ServiceSecurityParameters</param>
            <param name="receiverAddress">The receiver address.</param>
            <param name="binding">The binding.</param>
            <param name="bBatchMode">if set to <c>true</c> [b batch mode].</param>
            <param name="allowDifferentPort">if set to <c>true</c> [allow different port].</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StopListener">
            <summary>
            To stop receiving events, call this method.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StateChangeFilterPassed(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite)">
            <summary>
            Check if the Event message contains a State Change
            </summary>
            <param name="stationEventComposite">The Station Event args</param>
            <returns></returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.Dispose">
            <summary>
            Disposable method to properly shut done the event sink. Should always be called when done with object
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.BoardProcessedEventReceived">
            <summary>
            Fired when a board is completed within a station (when the board is leaving the station).
            Comprises all events, state transitions, pickup errors and consumption data for a board in a given station
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.ConfigurationChangedEventReceived">
            <summary>
            Fired when whenever the ASM SIPLACE Pro line configuration changes. Contains the complete line configuration from ASM SIPLACE Pro
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StationEventReceived">
            <summary>
            Fired when a state transition is triggered in WORKS OIS state machine by a station event.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.RecipeChangeEventReceived">
            <summary>
            <b>Only for SSW 70x and later.</b>
            Fired whenever WORKS OIS detected a line job guid change with the <b>production start</b> of a board at station.
            </summary>
            <remarks>
            WORKS OIS evaluates the LineJobGuid and sends an EventRecipeChange message whenever the LineJobGuid changes with production start of a board.
            There are rare occurrences that SSW cannot assign the LineJobGuid before it sends the production started message. In this case, the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeChangeEvent"/>
            occurs when the board leaves station. For SSW 60x and earlier, please use <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeActivationChangeEvent"/>.
            </remarks>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.PickupObservationEventReceived">
            <summary>
            Fired periodically when predefined seconds have passed.
            </summary>
            <remarks>
            The pickup related data is stored in PickupComposite containers which contain accumulated PickupError and Consumption
            information for a given station and a predefined time span. 
            This messages contains a consumption entry (UsedDetail entries) for each feeder location where pickups occurred in the
            given time span.
            It also contains a list of all pickup errors which came up for the given station during the given time scope
            </remarks>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.PassmodeEventReceived">
            <summary>
            Fired when the bypassed flag in the Recipe changes or whenever a station sends a
            bypassed event, indicating, that the station has been set to pass through mode.
            </summary>
            <remarks>
            The station notifies the WORKS OIS about the deactivation of certain parts of the station or about the
            deactivation of the whole station.
            WORKS OIS sends a <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.PassmodeEvent"/>to the monitoring adapter.
            The Passmode collection contains Passmode flags for those processing locations of the station where the Passmode flag
            has changed.
            </remarks>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.RecipeActivationChangeEventReceived">
            <summary>
            <b>Only SSW 60x and earlier!</b>
            Fired after the first board of a new recipe finished production at station (<b>board is moving out of station</b>).
            A RecipeCollection contains a recipe ID for each processing location where a recipe change has been detected.
            </summary>
            <remarks>
            WORKS OIS evaluates the board message (containing recipe and board name) from station and
            retrieves the RecipeID based on these properties. Whenever it finds a change in the RecipeID WORKS OIS fires this event.
            Since this event only occurs AFTER the first board was produced, it is not supported with SSW 70x and higher.
            Instead used <see cref="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.RecipeChangeEventReceived"/>, which is triggered when the first board of a new recipe STARTS production within station.
            </remarks>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.SetupUpdateEventReceived">
            <summary>
            Fired when WORKS OIS recognizes the occurrence of an alternative component.
            </summary>
            <remarks>The args contains the SetupCollection with a list of Track entries: one entry for each detected alternative component.</remarks>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.RecipeDownloadEventReceived">
            <summary>
            Fired when WORKS OIS receives a download event from ASM SIPLACE Pro for a station/conveyor-lane combination.
            This does not imply that the recipe is active on the station yet.
            Note: In case of a job download (barcode mode) this event will not get fired for station software 40x and 50x.
            In case you want to subscribe to setup downloads, use the SPI Adapter oder Line Control Adapter instead.
            </summary>
            <remarks>
            The event takes place a few seconds after a recipe download has been performed from LineControl to the station(s).
            A download usually gets performed for all station of a line simultaneously if no station wise download is active.
            If station wise download is active a download starts with the first station of the line, and the download for the
            consecutive stations gets performed whenever the stations are ready to download.
            A DownloadRecipe contains all recipe related properties (recipe, tracks, Boards, Heads, RecipeAddon)
            WORKS OIS sends a <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.RecipeDownloadEvent"/>for each station/conveyor-lane combination.
            </remarks>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.SpliceEventReceived">
            <summary>
            Fired when WORKS OIS receives one or more splice events from the station.
            </summary>
            <exclude />
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.HeartBeatEventReceived">
            <summary>
            Is fired typically every 5 minutes. You can use this event to see if the eventing communication is still alive
            and if you have received all events until a certain point in time.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.PickupErrorEventReceived">
            <summary>
            Fired when WORKS OIS received a single pickup error from station.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.StationAvailablilityEventReceived">
            <summary>
            Fired whenever a station signals an availability state change, e.g. Producing -> Standby
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.FeederErrorEventReceived">
            <summary>
            Fired when a station signals a feeder error like foil torn without pick-up activity.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.LineJobGuidChangedEventReceived">
            <summary>
            Fired when OIS detected a change in the line job guid active at a processing location.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.BoardTrackingEventReceived">
            <summary>
            Fired when a station signals that a board step was done.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.BoardCanceledEventReceived">
            <summary>
            Fired when a station signals that a operator canceled a board.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.SpeedLossReasonChangedEventReceived">
            <summary>
            Fired when station intentionally changes performance.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReceiverBase" /> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver">
            <summary>
            Receiver class for receiving (reliable) SIPLACE Monitoring events.
            The SIPLACE Monitoring events are mapped to a .Net event handler for
            easy handling.
            The receiver opens a service endpoint with the given address and binding which is being called by
            OIB Eventing.
            After having instantiated this class, you need to subscribe for monitoring events
            at OIB Core by using Subscriber proxy.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor">
            <summary>
            Default constructor that reads from the app.config the bindings from the Receiver
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Default constructor that reads from the app.config the bindings from the Receiver
            </summary>
            <param name="allowDifferentPort">
            If set to <c>true</c>, the callback host will chose a different port if the specified port is already in use.
            If set to <c>false</c> and the specified port is already in use, an exception will be thrown.
            If set to <c>null</c>, the callback host will depend on the TcpPortSharing
            </param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.Nullable{System.Boolean})">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
            <param name="allowDifferentPort">
            If set to <c>true</c>, the callback host will chose a different port if the specified port is already in use.
            If set to <c>false</c> and the specified port is already in use, an exception will be thrown.
            If set to <c>null</c>, the callback host will depend on the TcpPortSharing
            </param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor(System.String)">
            <summary>
            Overloaded constructor to take the end point to receive the events.
            </summary>
            <param name="strEndpoint">The endpoint address where the service should be hosted.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Overloaded constructor to take the end point to receive the events.
            </summary>
            <param name="strEndpoint">The endpoint address where the service should be hosted.</param>
            <param name="allowDifferentPort">
            If set to <c>true</c>, the callback host will chose a different port if the specified port is already in use.
            If set to <c>false</c> and the specified port is already in use, an exception will be thrown.
            If set to <c>null</c>, the callback host will depend on the TcpPortSharing
            </param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor(System.String,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters,System.Nullable{System.Boolean})">
            <summary>
            Overloaded constructor to take the end point to receive the events.
            </summary>
            <param name="strEndpoint">The endpoint address where the service should be hosted.</param>
            <param name="securityParameters">The security parameters for hosting a secure callback that uses a certificate. If null, a normal (un-secure) service is hosted.</param>
            <param name="allowDifferentPort">
            If set to <c>true</c>, the callback host will chose a different port if the specified port is already in use.
            If set to <c>false</c> and the specified port is already in use, an exception will be thrown.
            If set to <c>null</c>, the callback host will depend on the TcpPortSharing
            </param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver.#ctor(System.Boolean)">
            <summary>
            Constructor which will not start a callback endpoint right away.
            Is used by new ReceiverManager methods to create a pair of Subscriber and Receiver
            </summary>
            <param name="reliableCallback">if set to <c>true</c> [reliable callback].</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Receiver">
            <summary>
            Receiver class for receiving (one-way) SIPLACE Monitoring events.
            The SIPLACE Monitoring events are mapped to a .Net event handler for
            easy handling.
            The receiver opens a service endpoint with the given address and binding which is being called by
            OIB Eventing.
            After having instantiated this class, you need to subscribe for monitoring events
            at OIB Core by using Subscriber proxy.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Receiver.#ctor">
            <summary>
            Default constructor that reads from the app.config the bindings from the Receiver.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Receiver.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Receiver.#ctor(System.String)">
            <summary>
            Overloaded constructor to take the end point to receive the events.
            </summary>
            <param name="strEndpoint">The endpoint address where the service should be hosted.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Receiver.#ctor(System.String,Asm.As.Oib.Common.Utilities.ServiceSecurityParameters,System.Nullable{System.Boolean})">
            <summary>
            Overloaded constructor to take the end point to receive the events.
            </summary>
            <param name="strEndpoint">The endpoint address where the service should be hosted.</param>
            <param name="securityParameters">The security parameters for hosting a secure callback that uses a certificate. If null, a normal (un-secure) service is hosted.</param>
            <param name="allowDifferentPort">
            If set to <c>true</c>, the callback host will chose a different port if the specified port is already in use.
            If set to <c>false</c> and the specified port is already in use, an exception will be thrown.
            If set to <c>null</c>, the callback host will depend on the TcpPortSharing
            </param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Receiver.#ctor(System.Boolean)">
            <summary>
            Constructor which will not start a callback endpoint right away.
            Is used by new ReceiverManager methods to create a pair of Subscriber and Receiver
            </summary>
            <param name="reliableCallback">if set to <c>true</c> [reliable callback].</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.SubscriptionStateInvalidEvent">
            <summary>
            This event is fired whenever this proxy detects that its subscription was disabled.
            The proxy tries to enable the subscription again by calling Renew. In case there
            is still a persistent problem with delivering the events to this proxy (network problem)
            then you will still not get any events and the subscription will get disabled again after a while.
            </summary>
            <param name="args">The <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SubscriptionStateInvalidDetailsEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber">
            <summary>
            This class is a proxy to subscribe for monitoring events at OIB Core.
            Before subscribing you should instantiate a Receiver object.
            </summary>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.ReliableReceiver" />
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.s_lastInstanceId">
            <summary>
            The last instance identifier
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber._instanceId">
            <summary>
            The instance identifier
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber._syncContext">
            <summary>
            The synchronize
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber._lastRenewDateTime">
            <summary>
            The last renew date time
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber._subscription">
            <summary>
            The _id
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber._subscriptionTimer">
            <summary>
            The subscription timer
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber._subscriptionTimeout">
            <summary>
            The subscription timeout
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.MarshalEventsToObjectCreatorThread">
            <summary>
            If true, all Events will be fired on the thread that created this Object.
            This is helpful if you use the Events to update the UI.
            In order for that to work correctly, you need a SynchronizationContext.Current
            when the Subscriber class is created (if this was done on the UI thread, then the SynchronizationContext.Current
            is there by default).
            The default value of this property is true.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.#ctor(System.String)">
            <summary>
            Constructor using the configured endpoint name in the application configuration file.
            </summary>
            <param name="endpointConfigurationName">Endpoint Name</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Will not be used and can be left null. A correct binding is created internally.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.#ctor(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.Boolean)">
            <summary>
            Constructor using the given endpoint address and binding.
            </summary>
            <param name="endpointAddress">Endpoint Address of service</param>
            <param name="binding">Binding to use</param>
            <param name="unsubscribeOnDispose">if set to <c>true</c> [unsubscribe on dispose].</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.UnsubscribeOnDispose">
            <summary>
            Gets a value indicating whether [unsubscribe on dispose].
            </summary>
            <value>
            <c>true</c> if [unsubscribe on dispose]; otherwise, <c>false</c>.
            if <c>true</c> subscription will be unsubscribed on dispose, otherwise paused
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.SubscriptionTimeout">
            <summary>
            Gets or sets the subscription timeout.
            </summary>
            <value>
            The subscription timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.DefaultSubscriptionTimeout">
            <summary>
            The TimeSpan, which is added to the current time when renewing the subscription to Setup Center Events
            This is only used when bNonPermanentSubscription is true when calling SubscribeToCoreEvents.
            The value must be greater or equal than one hour. The subscription is renewed every TimeSpan/3 hours.
            I.e. you provide 6 hours, the SC proxy renews the subscription every 2 hours.
            </summary>
            <value>
            The subscription timeout.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.SingleSubscription">
            <summary>
            Gets the single subscription.
            </summary>
            <value>
            The single subscription.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.DefaultTopic">
            <summary>
            The topic to receive SIPLACE Monitoring messages.
            </summary>
            <value>
            The default topic.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.SubscriberIdent">
            <summary>
            Gets the subscriber ident.
            </summary>
            <value>
            The subscriber ident.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.SetCertificateForClientAuthentication(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.X509FindType,System.Security.Cryptography.X509Certificates.StoreName,System.String)">
            <summary>
            Sets the client certificate parameters for authentication to the WS Eventing Core Service.
            Needs to be provided in case OIB Core services require a client certificate.
            </summary>
            <param name="storeLocation">The store location.</param>
            <param name="findType">Type of the find.</param>
            <param name="storeName">Name of the store.</param>
            <param name="findValue">The find value.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.GetStatus(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier)">
            <summary>
            Get the Current status of a subscription. currently, the status is only the expiration date/time of the subscription.
            </summary>
            <param name="id">Unique Subscription Id.</param>
            <returns>
            The Status for the Subscription Id
            </returns>
            <remarks>
            Parameter based method call.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.GetStatus(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,Asm.As.Oib.WS.Eventing.Contracts.Data.GetStatus)">
            <summary>
            Get the Current status of a subscription. currently, the status is only the expiration date/time of the subscription.
            </summary>
            <param name="id">Unique Subscription Id.</param>
            <param name="status">Status data. Not currently used.</param>
            <returns>
            The Status for the Subscription Id
            </returns>
            <remarks>
            Parameter based method call.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.GetStatus(Asm.As.Oib.WS.Eventing.Contracts.Messages.GetStatusRequest)">
            <summary>
            Get the Current status of a subscription. currently, the status is only the expiration date/time of the subscription.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id associated for the Get Status request</param>
            <returns>
            The Status for the Subscription Id
            </returns>
            <remarks>
            Message based method call.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.GetSubscriptions">
            <summary>
            Get all the list of Subscriptions
            </summary>
            <returns>
            list of Subscriptions
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.GetSubscriptions(System.String)">
            <summary>
            Get all the list of Subscriptions
            </summary>
            <param name="strTopic">Search criteria based upon Topic.</param>
            <returns>
            list of Subscriptions
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.GetSubscriptions(Asm.As.Oib.WS.Eventing.Contracts.Data.SubscriptionDescriptor)">
            <summary>
            Get a list of Subscriptions based upon search criteria.
            </summary>
            <param name="searchCriteria">Search criteria based upon Id, Name , Topic, etc.</param>
            <returns>
            list of Subscriptions
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Pause(Asm.As.Oib.WS.Eventing.Contracts.Messages.PauseRequest)">
            <summary>
            Pause a particular Subscription for an indefinite period of time.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id for the Pause request</param>
            <returns>
            Message Response containing the Pause Response, currently no fields.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Renew(Asm.As.Oib.WS.Eventing.Contracts.Messages.RenewRequest)">
            <summary>
            Renew a particular Subscription for a longer period of time (expiration).
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id with the new expiration date/time</param>
            <returns>
            Message Response containing the new Expiration.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Resume(Asm.As.Oib.WS.Eventing.Contracts.Messages.ResumeRequest)">
            <summary>
            Resume a particular Subscription from a previous Pause event.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id for the Resume request</param>
            <returns>
            Message Response containing the Resume Response, currently no fields.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.WS.Eventing.Contracts.Messages.SubscribeRequest)">
            <summary>
            Message Based subscription request/response.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id associated with the subscribe request</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,Asm.As.Oib.WS.Eventing.Contracts.Data.Subscribe)">
            <summary>
            Service Based subscription.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="subscribe">The detailed information upon which to subscribe to.</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.String)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.Uri)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri."</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="endpointAddress">Endpoint Address</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.EndpointAddress,System.DateTime)">
            <summary>
            Service Based subscription. Default settings imply PushMode.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.String,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.Uri,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri"</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.String,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.Uri,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri"</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.EndpointAddress,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.EndpointAddress,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <exception cref="T:System.ArgumentException">A duplicate exception with endpoint:  + endpointAddress +  exists!</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.EndpointAddress,System.Boolean,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="isSecureCallback">True, if Delivery.IsSecure should be set</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <exception cref="T:System.ArgumentException">A duplicate exception with endpoint:  + endpointAddress +  exists!</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.String)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.Uri)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri."</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.ServiceModel.EndpointAddress)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="endpointAddress">Endpoint Address</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.ServiceModel.EndpointAddress,System.DateTime)">
            <summary>
            Service Based subscription. Default settings imply PushMode.
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.String,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.Uri,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri"</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.String,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.Uri,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri"</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.ServiceModel.EndpointAddress,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter,System.ServiceModel.EndpointAddress,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="xPathFilterAdapter">The XPathFilterAdapter to convert Monitoring Filters into XPathFilter expressions</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <seealso cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.XPathFilterAdapter" />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.String)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.Uri)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The filter path</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri."</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.ServiceModel.EndpointAddress)">
            <summary>
            Service Based subscription. Default settings imply PushMode and no expiration.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="endpointAddress">Endpoint Address</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.ServiceModel.EndpointAddress,System.DateTime)">
            <summary>
            Service Based subscription. Default settings imply PushMode.
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.String,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.Uri,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri"</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.String,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="strEndpointAddress">Endpoint Address in the form of a string like: "http://host/endpoint."</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.Uri,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="uriEndpointAddress">Endpoint Address in the form of a Uri"</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.ServiceModel.EndpointAddress,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Subscribe(System.String,System.ServiceModel.Dispatcher.XPathMessageFilter,System.ServiceModel.EndpointAddress,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Unsubscribe(Asm.As.Oib.WS.Eventing.Contracts.Messages.UnsubscribeRequest)">
            <summary>
            Unsubscribe to a particular subscription.
            </summary>
            <param name="request">Message containing the Subscription Topic and/or Id associated with the Unsubscribe request</param>
            <returns>
            Response Message. Currently an empty Message and reserved for future use.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Unsubscribe(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,System.String)">
            <summary>
            Unsubscribe parameter based method.
            </summary>
            <param name="identifier">The unique Id</param>
            <param name="strSubscriptionTopic">The Topic</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Unsubscribe(Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,System.String,System.ServiceModel.EndpointAddressAugust2004)">
            <summary>
            Unsubscribe parameter based method.
            </summary>
            <param name="identifier">The unique Id</param>
            <param name="strSubscriptionTopic">The Topic</param>
            <param name="endpoint">The Endpoint to unsubscribe to. Currently not used in this context</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.UpdateSubscription(Asm.As.Oib.WS.Eventing.Contracts.Data.UpdateSubscriptionRequest)">
            <summary>
            Updates the subscription.
            You can update the subscription's endpoint, xpath filter or Delivery Mode.
            You must pass in the subscription's GUID string (mandatory) and the updated endpoint and/or xpath filter and/or
            Delivery Mode.
            This method only works for PushWithAck or PushWithAckUnreliable subscriptions.
            </summary>
            <param name="request">The request containing the details about the update to be done.</param>
            <returns>The response containing the updated subscription</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.FireSubscriptionStateInvalidEvent(Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SubscriptionStateInvalidDetailsEventArgs)">
            <summary>
            Fires the subscription state invalid event event.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.SubscribeInternal(System.String,System.ServiceModel.EndpointAddress,System.Boolean,System.DateTime,Asm.As.Oib.WS.Eventing.Contracts.Data.DeliveryModeType,Asm.As.Oib.WS.Eventing.Contracts.Data.Identifier,System.ServiceModel.Dispatcher.XPathMessageFilter,System.Boolean)">
            <summary>
            Service Based subscription with explicit settings (see below)
            </summary>
            <param name="strTopic">The Topic to subscribe to</param>
            <param name="endpointAddress">Endpoint Address</param>
            <param name="isSecureCallback">True, if Delivery.IsSecure should be set</param>
            <param name="dtExpires">The explicit expiration time of the subscription</param>
            <param name="modeType">The Delivery Mode Type (Push, PushWithAck, etc)</param>
            <param name="subscriptionId">The subscription identifier.</param>
            <param name="xPathMessageFilter">The Filter to apply to the messages being sent from the publisher</param>
            <param name="saveSubscription">if set to <c>true</c> [save subscription].</param>
            <returns>
            The Subscribe Result containing the Id of the Subscription
            </returns>
            <exception cref="T:System.ArgumentException">A duplicate exception with endpoint: " + endpointAddress + " exists!</exception>
            <exception cref="T:System.ArgumentException">A duplicate exception with endpoint:  + endpointAddress +  exists!</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Unsubscribe">
            <summary>
            Unsubscribe with internal administrated subscription.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.SubscriptionTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Handles the Elapsed event of the m_subscriptionTimer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Timers.ElapsedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.OnDispose">
            <summary>
            Called when [dispose].
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber" /> class.
            </summary>
        </member>
        <member name="E:Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Subscriber.SubscriptionStateInvalid">
            <summary>
            Occurs whenever this proxy detects that its subscription was disabled.
            The proxy tries to enable the subscription again by calling Renew. In case there
            is still a persistent problem with delivering the events to this proxy (network problem)
            then you will still not get any events and the subscription will get disabled again after a while.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.LineBase">
            <summary>
            The base class for Line data objects
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.LineBase.FullPath">
            <summary>The name and folders of the line originally from SIPLACE Pro.</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.LineBase.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.RecipeBase">
            <summary>
            The Recipe data associated with this Monitoring packet
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.RecipeBase.#ctor">
            <summary>
            Protected constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.RecipeBase.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.MonitoringData,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the (OIS) Monitoring Service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.RecipeBase.Station">
            <summary>SIPLACE Monitoring station configuration</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.RecipeBase.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.StationBase">
            <summary>
            Base class that contains the Station related data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.StationBase.#ctor">
            <summary>
            Protected constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.StationBase.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.MonitoringData)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the (OIS) Monitoring Service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.StationBase.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.MonitoringData,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the (OIS) Monitoring Service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.StationBase.Station">
            <summary>
            SIPLACE Monitoring station configuration
            If not loaded yet, calling the getter of this property will cause the Proxy to load the station from the Adapter.<br />
            Can be null in case the Monitoring Service does not know the station any more. This might be true in one of these
            cases:<br />
            <ul>
            <li>The Monitoring Service (OIS) was reconfigured to another line.</li>
            <li>The Monitoring Service (OIS) was reinstalled.</li>
            </ul>
            </summary>
            <value>
            The station if found, otherwise null.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.StationBase.CompletionStatusType">
            <summary> Completion Status of the message</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.StationBase.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase">
            <summary>
            The base class for all Monitoring objects
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.#ctor(Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.MessageOID">
            <summary>
            Gets the message OID. This is for debugging purposes and contains the OIB Core Database OID for this message.
            It is filled with -1 in case a non PushWithAck subscription is used to subscribe for Monitoring events or if this
            object does not belong to an event.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.MonitoringInstance">
            <summary>
            Gets the instance of the Monitoring class that this object belongs to.
            Can be used to communicate with the correct Monitoring Adapter.
            </summary>
            <value>
            The Monitoring class instance.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase,Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase,Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase.Equals(Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringBase)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData">
            <summary>
            The base data contract for the Event data coming from OIS Monitoring Service
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.BaseData">
            <summary>
            The _DC monitoring data
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.#ctor">
            <summary>
            Protected constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.MonitoringData)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the (OIS) Monitoring Service </param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.MonitoringData,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the (OIS) Monitoring Service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.DataContractBase">
            <summary> Completion Status of the message</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.FactoryLayoutPath">
            <summary>
            The Path associated with the Factory Configuration
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.MessageSendTime">
            <summary>
            Gets time in UTC when the Monitoring Adapter sent this message
            </summary>
            <value>
            The message send time in UTC.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.HostName">
            <summary>
            Host Name where the Monitoring Adapter is running.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData,Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData,Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.InitializeBase(Siemens.Siplace.Oib.Monitoring.Contracts.Data.MonitoringData)">
            <summary>
            Initializes the base.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.CheckAndSetOwningInstance">
            <summary>
            Checks the and set owning instance.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData.Equals(Asm.As.Oib.Monitoring.Proxy.Business.BaseClasses.MonitoringData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardCanceledEventArgs">
            Maps to void IMonEvent.EventBoardCanceled(BoardCanceledEventData data)
            <summary>
            Board canceled event
            </summary>
            <remarks>
            Triggered by station operator, when board is canceled in station GUI.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardCanceledEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardProcessedEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardCanceledEventArgs.BoardCanceledEventData">
            <summary>
            The board processed data of the event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardCanceledEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardProcessedEventArgs">
            <summary>
            The Board Processed Event data
            </summary>
            <remarks>
            Maps to void IMonEvent.EventBoardStationComposite(BoardStationComposite boardStationComposite);
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardProcessedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardProcessedEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardProcessedEventArgs.BoardProcessedData">
            <summary>
            The board processed data of the event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardProcessedEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardTrackingEventArgs">
            <summary>
            The Board Step Event data
            </summary>
            <remarks>
            Is fired for each board tracking event in a conveyor section and a conveyor lane.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardTrackingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardTrackingEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardTrackingEventArgs.BoardTrackingEventData">
            <summary>
            The board step data of the event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.BoardTrackingEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.ConfigurationChangedEventArgs">
            <summary>
            The Configuration Changed Event data
            </summary>
            <remarks>
            Maps to void IMonEvent.EventLineCollection(Line _line);
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.ConfigurationChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.ConfigurationChangedEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.ConfigurationChangedEventArgs.Configuration">
            <summary>
            The configuration of one SIPLACE Monitoring Service.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.ConfigurationChangedEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.FeederErrorEventArgs">
            <summary>
            The feeder error event arguments data. Contains feeder location and error code.
            </summary>
            <remarks>
            The event occurs when a station signals a feeder error like foil torn without pick-up activity.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.FeederErrorEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.FeederErrorEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.FeederErrorEventArgs.FeederErrorEventData">
            <summary>
            The data of a station event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.FeederErrorEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.LineJobGuidChangedEventArgs">
            <summary>
            Contains data for the recipe activation (OIS => 18.0)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.LineJobGuidChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.LineJobGuidChangedEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.LineJobGuidChangedEventArgs.LineJobGuidChangedEventData">
            <summary>
            The data of a recipe changed event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.LineJobGuidChangedEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupErrorEventArgs">
            <summary>
            The Pickup Error Event Arguments
            </summary>
            <remarks>
            The event occurs when Monitoring Service received a single pickup error from station.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupErrorEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupErrorEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupErrorEventArgs.PickupErrorEventData">
            <summary>
            Gets Heart Beat event data.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupErrorEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.HeartBeatEventArgs">
            <summary>
            The Heart Beat Event Arguments
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.HeartBeatEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.HeartBeatEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.HeartBeatEventArgs.HeartBeatEventData">
            <summary>
            Gets Heart Beat event data.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.HeartBeatEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpeedLossReasonChangedEventArgs">
            Maps to void IMonEvent.EventSpeedLossReasonChanged(SpeedLossReasonChangedEventData data
            <summary>
            Change of intentional performance reduction.
            </summary>
            <remarks>
            Triggered by station software, when either operator or station software intentionally change speed reductions.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpeedLossReasonChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpeedLossReasonChangedEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpeedLossReasonChangedEventArgs.SpeedLossReasonChangedEventData">
            <summary>
            The board processed data of the event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpeedLossReasonChangedEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpliceEventArgs">
            <summary>
            The SpliceEventArgs class.
            Contains data that belongs to a splice event.
            </summary>
            <remarks>
            The event occurs when Monitoring Service receives one or more splice events from the station.
            </remarks>
            <exclude />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpliceEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpliceEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpliceEventArgs.SpliceEventData">
            <summary>
            Gets splice event data.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SpliceEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.DownloadRecipeEventArgs">
            <summary>
            The DownloadRecipeEventArgs class with DownloadRecipe.
            </summary>
            <remarks>
            A DownloadRecipe contains all recipe related properties (recipe, tracks, Boards, Heads, RecipeAddon)
            Monitoring Service sends a Download Recipe Event for each station/conveyor-lane combination.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.DownloadRecipeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.DownloadRecipeEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.DownloadRecipeEventArgs.DownloadRecipe">
            <summary>
            Gets the download recipe.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.DownloadRecipeEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PassmodeEventArgs">
            <summary>
            The PassmodeEventArgs class.
            </summary>
            <remarks>
            The Event information for when The station notifies the Monitoring Service about the deactivation
            of certain parts of the station or about the deactivation of the whole station.
            Monitoring Service sends a PassmodeEvent to the monitoring adapter. The Passmode collection contains Passmode
            flags for those processing locations of the station where the Passmode flag has changed.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PassmodeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PassmodeEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PassmodeEventArgs.PassModeCollection">
            <summary>
            The data of a Pass Mode changed event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PassmodeEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupObservationEventArgs">
            <summary>
            The PickupObservationEventArgs for the given station
            </summary>
            <remarks>
            The event occurs periodically when predefined seconds have passed.
            The pickup related data is stored in PickupComposite containers which contain accumulated PickupError and Consumption
            information for a given station and a predefined time span. 
            This messages contains a consumption entry (UsedDetail entries) for each feeder location where pickups occurred in the
            given time span.
            It also contains a list of all pickup errors which came up for the given station during the given time scope
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupObservationEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupObservationEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupObservationEventArgs.PickupObservationData">
            <summary>
            The data of a Pickup Observation Data changed event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.PickupObservationEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeActivationChangeEventArgs">
            <summary>
            Whenever a new recipe gets active on a certain station or on a certain conveyor of a station a Recipe Change
            notification gets triggered.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeActivationChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeActivationChangeEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeActivationChangeEventArgs.RecipeCollection">
            <summary>
            The data of a Recipe Collection changed event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeActivationChangeEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeChangeEventArgs">
            <summary>
            The RecipeChangeEventArgs class.
            </summary>
            <remarks>
            The event occurs when Monitoring Service detects a change of active recipe within a station board message.
            Monitoring Service evaluates the Board Message (containing the Recipe and Board name) from the station (also works for non Sirio stations) and 
            retrieves the RecipeID based on these properties. Whenever it finds a change in the RecipeID it fires this event.
            Since the generation of this message is based on the station board message (sent by the station after the board
            processing steps have been finished), the Monitoring Service sends this message after the board left the station (board is leaving the station).
            A RecipeCollection contains a recipe ID for each processing location where a recipe change has been detected.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeChangeEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeChangeEventArgs.RecipeChange">
            <summary>
            The data of a recipe changed event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.RecipeChangeEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SetupCollectionEventArgs">
            <summary>
            The SetupCollectionEventArgs class.
            </summary>
            <remarks>
            The event occurs when Monitoring Service recognizes the occurrence of an alternative component.
            Contains the SetupCollection with a list of Track entries: one entry for each detected alternative component.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SetupCollectionEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SetupCollectionEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SetupCollectionEventArgs.SetupCollection">
            <summary>
            The data of a Setup Collection changed event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SetupCollectionEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationAvailabilityEventArgs">
            <summary>
            The StationAvailabilityEventArgs class.
            Contains the processing location state changes.
            </summary>
            <remarks>
            The event occurs whenever a station signals an availability state change, e.g. Producing -> Standby
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationAvailabilityEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationAvailabilityEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationAvailabilityEventArgs.StationAvailabilityCollection">
            <summary>
            The data of a station event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationAvailabilityEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationEventArgs">
            <summary>
            The StationEventArgs class.
            </summary>
            <remarks>
            The event occurs when an Monitoring Service state machine transition is triggered by a station event.
            </remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationEventArgs" /> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationEventArgs.StationEventComposite">
            <summary>
            The data of a station event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.StationEventArgs.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SubscriptionStateInvalidDetailsEventArgs">
            <summary>
            SubscriptionStateInvalidDetails
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SubscriptionStateInvalidDetailsEventArgs.#ctor(Asm.As.Oib.WS.Eventing.Contracts.Data.Subscription)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SubscriptionStateInvalidDetailsEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SubscriptionStateInvalidDetailsEventArgs.Subscription">
            <summary>
            Gets the subscription.
            </summary>
            <value>
            The subscription.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.EventArgs.SubscriptionStateInvalidDetailsEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData">
            <summary>
            Contains data such as BoardIdentifier, VirtualLane and TimeStamp of one board cancel event for one station.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.Identifier">
            <summary>
            A collection of identifiers for this board.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.VirtualLane">
            <summary>
            The virtual conveyor lane where the board is produced. A virtual lane id is defined by which physical lane of a
            dual-lane machine is connected to this lane.
            Normally the virtual lane id of a machine is identical to the physical lane identifier (1->1 (=right lane), 2->2 (=left
            lane)).
            But in case of back-to-back solutions this changes (printer 1: 1->1 (=right lane), printer 2: 1->2 (= left lane)).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.TimeStamp">
            <summary>
            Timestamp when user triggered board cancellation in UTC at station GUI.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">Must be an <see cref="T:Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardCanceledEventData" /></param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardCanceledEventData)">
            <summary>
            Constructor for creating the BoardCanceledEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardCanceledEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardCanceledEventData,System.Int32)">
            <summary>
            Constructor for creating the BoardCanceledEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier">
            <summary>
            Collection of all known board identifiers.
            </summary>
            <remarks>
            <para>Within a station, boards are identified by several identifiers. This collection contains current and previously signaled identifiers for the board.</para>
            <para>Please keep in mind, that manually removing/entering boards as well as restart of station software will trigger new ids.
            WORKS OIS tries to recover the identity of a board with station restart. This will only succeed, if station signals at least one of the previously known identifiers.
            If it fails (no identifier could be matched), a new transaction GUID is created.</para>
            </remarks>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.OisTrackingGuid">
            <summary>
            This GUID is generated by OIS when board individual was first reported.
            </summary>
            <remarks>Scope: one station</remarks>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.WhisperGuidsList">
            <summary>
            Each member if this container is a valid guid used by station to identify this board.
            Please be aware that event whispered guids may be changed.</summary>
            <remarks>Scope: one station (no whispering) / one line (whispering) </remarks>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.BarcodeList">
            <summary>
            Each member if this container is a valid barcode used by station to identify this board.
            Please be aware that different barcode readers may result in different barcodes (top / bottom problem).
            </summary>
            <remarks>Scope: all machines with barcode reader</remarks>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.BoardNumber">
            <summary>
            This identifier is generated by station when board individual is first detected.
            It is a round trip value, so tracking boards using this ID is only possible during a short period. During machine power up, the value is reset.
            </summary>
            <remarks>Scope: one station, reset with power on, round trip value</remarks>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardIdentifier,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier,Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier,Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData">
            <summary>
            The object BoardProcessedData contains the data of one board being produced by one station. There
            are special cases for synchronous dual lane mode. In these cases, more than one board
            in the stations is being produced as one large, virtual board. In this case, all these
            boards are included in one BoardProcessedData object.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.#ctor">
            <summary>
            Public constructor to be used within the Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.BoardStationComposite,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.ProcessedBoards">
            <summary>
            List of processed boards. This list contains usually exactly one board.
            In case of the options Virtual PCB Stack or Combined PCB more than one board is included.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.StationEvents">
            <summary> List of board specific station events </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.UsedDetails">
            <summary> List of detailed consumption data</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.PickupErrors">
            <summary> List of pickup Errors</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.Recipe">
            <summary>Recipe data for the production of this board.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.ContentSummaryType">
            <summary> Comment </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardProcessedData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum">
            <summary>
            Describes what type of board tracking event was triggered.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.Unknown">
            <summary>
            Board step is not known.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.Appearance">
            <summary>
            Board is first signaled by station.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.ProcessingSectionEnter">
            <summary>
            Conveyor started board movement into processing section.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.ProcessingSectionArrived">
            <summary>
            Conveyor stopped board movement at next processing section. Clamping follows immediately.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.ProductionStarted">
            <summary>
            Station started production at processing section.
            Be aware that it may also happen with early pick up, thus board may not yet be clamped.
            This step is only transmitted, if board recipe has at least one production step at this section.
            Sequence of <see cref="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.ProcessingSectionArrived"/> and <see cref="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.ProductionStarted"/> is not fixed.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.ProductionFinished">
            <summary>
            Station finished production at processing section. Removing clamping follows immediately.
            This step is only transmitted, if board recipe has at least one production step at this section.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.ProcessingSectionDepart">
            <summary>
            Board is moving out of a processing section. Clamping was removed.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.StationDepart">
            <summary>
            Board is moving out of station.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum.DisAppearance">
            <summary>
            Station no longer signals this board.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData">
            <summary>
            The object BoardTrackingEventData contains the data of one or more board events for one station.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.Identifier">
            <summary>
            A collection of identifiers for this board.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.VirtualLane">
            <summary>
            The virtual conveyor lane where the board is produced. A virtual lane id is defined by which physical lane of a
            dual-lane machine is connected to this lane.
            Normally the virtual lane id of a machine is identical to the physical lane identifier (1->1 (=right lane), 2->2 (=left
            lane)).
            But in case of back-to-back solutions this changes (printer 1: 1->1 (=right lane), printer 2: 1->2 (= left lane)).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.Section">
            <summary>
            The conveyor section number. When the board tracking event was triggered, 
            the board was in this conveyor section. 
            The same section number may be reported for several <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingStepEnum"/>
            For our placement machines, valid values are in between [0,6].
            </summary>
            <remarks>
            The conveyor is physically divided into several belt sections. It depends on machine and conveyor type, how many belt sections exist.
            Our default single processing area placement machines signal:
            <list type="table">
            <item>1</item><description>Station input section: relates to Appearance</description>
            <item>2</item><description>Processing section of processing area 1: relates to ProcessingSectionEnter, ProductionStarted, ProcessingSectionArrived, ProductionFinished</description>
            <item>3</item><description>Output section of station: relates to ProcessingSectionDepart</description>
            <item>4</item><description>External lane connected to station output section: relates to StationDepart</description>
            </list>
            Our default dual processing area placement machines signal:
            <list type="table">
            <item>1</item><description>Station input section: relates to Appearance</description>
            <item>2</item><description>Processing section of processing area 1: relates to ProcessingSectionEnter, ProductionStarted, ProcessingSectionArrived, ProductionFinished</description>
            <item>3</item><description>Middle section in between processing area 1 and 2: relates to ProcessingSectionDepart</description>
            <item>4</item><description>Processing section of processing area 2: relates to ProcessingSectionEnter, ProductionStarted, ProcessingSectionArrived, ProductionFinished</description>
            <item>5</item><description>Output section of station: relates to ProcessingSectionDepart</description>
            <item>6</item><description>External lane connected to station output section: relates to StationDepart</description>
            </list>
            Special case 0 = undefined: when a board no longer is known within station software, its disappearance is signaled with
            section=0.
            </remarks>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.Step">
            <summary>
            Which tracking step was reached by a board.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.TimeStamp">
            <summary>
            When was the given production step finished in UTC.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.Panels">
            <summary>
            The list of panels is transmitted once for each <see cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardIdentifier.OisTrackingGuid"/> with the first board event after all panels were scanned.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">Must be an <see cref="T:Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardTrackingEventData" /></param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardTrackingEventData)">
            <summary>
            Constructor for creating the BoardTrackingEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.BoardTrackingEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardTrackingEventData,System.Int32)">
            <summary>
            Constructor for creating the BoardTrackingEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration">
            <summary>
            This class consists of the configuration of one OIS Monitoring Service.
            This allows a client to query the lines managed by this OIB Monitoring Service.
            The client can query the existing Monitoring Adapters via the service locator when stating up
            and query each adapter for the currently managed line.
            During the operation, the client is notified about changed configurations
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.LineCollection,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.LineCollection,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
            <value>
            The data contract.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.Lines">
            <summary>
            A list consisting the lines managed by the OIS Monitoring Service.
            </summary>
            <value>
            The lines.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.AdapterVersion">
            <summary>
            Returns the product version of the monitoring adapter.
            </summary>
            <value>
            The adapter version.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.MonitoringVersion">
            <summary>
            Returns the version of the Monitoring Service (OIS/SIS).
            </summary>
            <value>
            The Monitoring Service version.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.HostName">
            <summary>
            Host Name where the Monitoring Adapter is running.
            </summary>
            <value>
            The name of the host.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.ProductVersion">
            <summary>
            Product version.
            </summary>
            <returns>AdapterVersion</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>
            Properties and their values
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj" /> parameter is null.</exception>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Configuration)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData">
            <summary>
            The class contains information on an error.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.Code">
            <summary>Station code for error</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.Timestamp">
            <summary>Timestamp of error</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.ErrorData,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ErrorData)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData">
            <inheritdoc />
            <summary>
            Class containing Feeder Error event data 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.FeederLocation">
            <summary>The Feeder Location </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.ErrorData">
            <summary>The error timestamp</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.Station">
            <summary>SIPLACE Monitoring station configuration</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.FeederErrorEventData)">
            <summary>
            Constructor for creating the FeederErrorEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.FeederErrorEventData,System.Int32)">
            <summary>
            Constructor for creating the FeederErrorEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederErrorEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation">
            <summary>
            The class contains all information necessary to locate a feeder on station.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.FeederLocation,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.TableLocation">
            <summary>
            Number of Table [0:n]
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.Track">
            <summary>
            Number of Track [0:n]
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.Tower">
            <summary>
            Number of Tower [0:n]
            Only relevant for tower feeders
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.Level">
            <summary>
            Number of Level [0:n]
            Only relevant for tower feeders
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.Division">
            <summary>
            Number of Division [0:n]
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.FeederTypeName">
            <summary>
            SIPLACE Pro name of feeder type.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.FeederID">
            <summary>
            Unique FeederId (serial number) of the Feeder. Only valid in case of xFeeder.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.FeederCode">
            <summary>
            Feeder Code (Siplace Pro Spurart)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.FeederType">
            <summary>
            SIPLACE Pro Resource Id [0:n] as integer value (OID)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation,Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation,Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.FeederLocation)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData">
            <inheritdoc />
            <summary>
            Contains data such as the new LineJobGuid, LocationId and the time stamp for recipe activation event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.LineJobGuidChangedEventData)">
            <summary>
            Constructor for creating the LineJobGuidChangedEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.LineJobGuidChangedEventData,System.Int32)">
            <summary>
            Constructor for creating the LineJobGuidChangedEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.Station">
            <summary>SIPLACE Monitoring station configuration</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.LocationId">
            <summary>
            Defines the processing location where the change of 'LineJobGuid' was detected.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.StationTime">
            <summary>Timestamp in UTC when station sent this message</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.LineJobGuid">
            <summary>LineJobGuid that differs from previously used line job guid.</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.LineJobGuidChangedEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel">
            <summary>
            The panel class contains information about a panel of a board.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.Panel,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.Barcode">
            <summary>The barcode of this panel.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.Name">
            <summary>
            An optional name for this panel.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.MatrixIndexX">
            <summary>
            Indicates the panel position within the board in combination with <see cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.MatrixIndexY"/>. Valid values are [0; infinite].
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.MatrixIndexY">
            <summary>
            Indicates the panel position within the board in combination with <see cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.MatrixIndexX"/>. Valid values are [0; infinite]. 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.IsCircuit">
            <summary>
            Indicates whether this panel is a circuit.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.SkipState">
            <summary>
            Indicates whether this panel is skipped.
            <list type="0">
            <item>0: panel is produced</item>
            <item>1: panel is skipped</item>
            </list>
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Panel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData">
            <summary>
            Class containing Pickup Error event data 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.PickupError">
            <summary>The Pickup Error</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.Station">
            <summary>SIPLACE Monitoring station configuration</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.PickupErrorEventData)">
            <summary>
            Constructor for creating the PickupErrorEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.PickupErrorEventData,System.Int32)">
            <summary>
            Constructor for creating the PickupErrorEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupErrorEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState">
            <summary>
            ProcessingLocationAvailabilityState
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.PlocAvailabilityState,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.StateChangeTriggers">
            <summary>
            List of state change triggers in this processing location that lead to the current state.
            Only filled for Unscheduled Downtime of type Assist (50e1).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.ProcessingLocationId">
            <summary>
            Processing Location Identifier (contains conveyor lane, virtual lane and processing area)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.CurrentStateCode">
            <summary>
            E58 code of currently active state based on machine view.
            Unscheduled downtime is a machine/process failure and standby a missing supply (components, data, product, etc.).
            Since this view is irrelevant for MES systems, a new encoding was introduced with OIB 6.2 SP1 HF6 that maps halts due to missing component supply
            to unscheduled downtime. This encoding is found at <see cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.CurrentStateCodeMes"/>.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.CurrentStateCodeMes">
            <summary>
            E58 code of currently active state based on MES view.
            Unscheduled downtime is a machine halt during production including component supply.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.CurrentStateBegin">
            <summary>
            Line server timestamp when current state was entered as UTC.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.PreviousStateCode">
            <summary>
            E58 code of currently active state based on machine view.
            Unscheduled downtime is a machine/process failure and standby a missing supply (components, data, product, etc.).
            Since this view is irrelevant for MES systems, a new encoding was introduced with OIB 6.2 SP1 HF6 that maps halts due to missing component supply
            to unscheduled downtime. This encoding is found at <see cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.PreviousStateCodeMes"/>.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.PreviousStateCodeMes">
            <summary>
            E58 code of currently active state based on MES view.
            Unscheduled downtime is a machine halt during production that includes component supply.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.PrimaryErrorNo">
            <summary>
            Shortcut to first <seealso cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.ErrorNo"/> in error chain, if set. Otherwise null.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAvailabilityState)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId">
            <summary>
            ProcessingLocationId class, containing information about conveyor lane, virtual lane, etc.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.ProcessingLocationId,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.Conveyor">
            <summary>
            Conveyor belt 1/2.
            0: Undefined (all)
            1: Right
            2: Left
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.ProcessingArea">
            <summary>
            Processing area 1/2.
            For printers this is always 1.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.VirtualLane">
            <summary>
            Virtual Lane association of conveyor belt.
            1: Right
            2: Left
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationId.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel">
            <summary>
            The class ProducedPanel contains data of a PCB.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.ProducedPanel,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.CountAsAssembledPcb">
            <summary>
            If set to true, this means that this type of panel has been marked in SIPLACE Pro to be counted as
            singe circuit.
            SIPLACE Pro 11.0 and higher allows to mark Panel Matrix elements to be counted as
            Assembled PCB. It is up to the user to set or reset this flag. Station SW >= 707
            forwards this information to the Monitoring Service. Other station SW versions
            don't provide this flag. If the CountAsAssembledPcb is not available Monitoring Service
            sets this value to null.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.CountOmitted">
            <summary>Count of panels which have been omitted</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.CountProduced">
            <summary>Count of panels which have been produced</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.PlacementListName">
            <summary>
            Name of the Placement List for this panel type that is associated
            with the PanelMatrix element this entry is based on
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProducedPanel)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason">
            <summary>
            A reason why station performance is reduced.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.Id">
            <summary>
            Unique identifier of station for each active reason.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.Type">
            <summary>
            Description of speed loss reason:
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Description</description>
            </listheader>
            <item><term>0</term><description>Unknown type. In this case station signals speed loss, but type is unknown to WORKS OIS version.</description></item>
            <item><term>1</term><description>A segment was deactivated</description></item>
            <item><term>2</term><description>PCB measurement done after placement (GUI setting)</description></item>
            <item><term>3</term><description>Periodic SPS check active (GUI setting)</description></item>
            <item><term>4</term><description>Station runs in emergency mode</description></item>
            </list>
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.SpeedLossReason,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason,Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason,Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData">
            <summary>
            SpeedLossReasonChangedEventData contains all active <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReason"/> of a single station
            at given <see cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.TimeStamp"/>. The event is triggered whenever station detects a change.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.TimeStamp">
            <summary>
            Timestamp when station signaled changes in active speed loss reasons.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.ActiveSpeedLossReasons">
            <summary> List of active speed loss reasons. May be empty if all intentional reasons were reset.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">Must be an <see cref="T:Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.BoardCanceledEventData" /></param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.SpeedLossReasonChangedEventData)">
            <summary>
            Constructor for creating the SpeedLossReasonChangedEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpeedLossReasonChangedEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.SpeedLossReasonChangedEventData,System.Int32)">
            <summary>
            Constructor for creating the SpeedLossReasonChangedEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent">
            <summary>
            SpliceEvent class. Contains all details for one detected splice. 
            </summary>
            <exclude />
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.SpliceEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.SpliceEvent,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.TableLocation">
            <summary>Table Location number for the Splice Event (1..4). </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.Track">
            <summary>TrackNr for the Splice Event. </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.Division">
            <summary>Number of Division for the Splice Event. </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.ComponentName">
            <summary>Name of the Component which comes after the splice</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.SpliceTime">
            <summary>DateTime in UTC when the station detected the splice</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.RemainingQuantity">
            <summary>
            The splice connects two packagings: the preceding and the succeeding packaging.
            This splice event is fired on packaging changeover. 
            However, when the feeder is removed after the beginning of the splice plate and 
            before the packaging changeover, the station fires the splice event on
            feeder removal.
            
            The RemainingQuantity of a SpliceEvent is the amount of components left on the 
            preceding packaging,  i.e. the amount of components until the packaging changeover 
            is expected.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent,Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent,Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEvent.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe">
            <summary>
            Recipe Change Composite (Comes up if Monitoring Service recognizes a recipe change)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe" /> class.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.DownloadRecipe)">
            <summary>
            Initializes a new instance of the <see cref="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe" /> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.DownloadRecipe,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.Recipe">
            <summary>Recipe data for the production of this board.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.DownloadTime">
            <summary>
            Gets the download time in *local* time of monitoring adapter.
            This is the same value as in SIPLACE Pro.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.DownloadRecipe.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>
            Properties and their values
            </returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState">
            <summary>
            GantryState
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.GantryState,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.State">
            <summary>Gantry number within the processing area</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.GantryNumber">
            <summary>Gantry number within the processing area.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.ErrorReason">
            <summary>Error Reason</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.BoardNumber">
            <summary> OisBoard ID generated from station</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.StationTime">
            <summary> Timestamp in UTC when station sent this message</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState,Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState,Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.GantryState)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState">
            <summary>
            ProcessingLocationState
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.PlocState,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.Conveyor">
            <summary>Conveyor belt</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.State">
            <summary>Processing location state</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.SequenceNumber">
            <summary>
            Sequence number used as reference to the state transition table
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.StationTime">
            <summary>Timestamp in UTC when station sent this message</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.SequenceIdentifier">
            <summary>
            Sequence number used as reference to the state transition table
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationState)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head">
            <summary>
            The head class contains information about a head.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Sis.Head,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.HeadNumber">
            <summary>Number of the head on the gantry. Always 1 except there are two heads on one gantry (e.g.F5).</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.GantryNumber">
            <summary>Number of gantry where this head is mounted</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.HeadType">
            <summary>Type of Head</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.Bypassed">
            <summary>Indicates, if the head is used to produce the products in the recipe.</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Head)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Line">
            <summary>
            The line class contains the configuration of a line in SIPLACE Monitoring.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Line.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Line.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Line.Name">
            <summary>Name of the line</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Line.Stations">
            <summary>List of stations order their sequence in the line.</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Line.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Line.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference">
            <summary>
            Monitoring Reference internal used in the proxy.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.MonitoringReference,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.Reference">
            <summary>
            Monitoring Reference Id
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference,Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference,Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>
            Properties and their values
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.MonitoringReference)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection">
            <summary>
            Contains a List of Pass mode states
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.PassmodeCollection)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.PassmodeCollection,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.PassmodeStates">
            <summary> List of Pass mode Status objects </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.Station">
            <summary>SIPLACE Monitoring station configuration</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.StationTime">
            <summary>Timestamp in UTC when station sent this message</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeCollection.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeLocation">
            <summary>
            Information regarding the Recipe's pass model information
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeLocation.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeLocation.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.PassmodeLocation)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeLocation.DataContractPassmodeLocation">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeLocation.PassmodeStatusType">
            <summary>The Pass mode Status</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeLocation.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PassmodeLocation.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData">
            <summary>
            Container which contain cumulated PickupError and Consumption information for a given station and a predefined time
            span
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.PickupComposite)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.PickupComposite,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.SessionId">
            <summary> Session Id of the pickup observation session </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.PeriodStart">
            <summary> Time stamp in UTC when this period started (Station Time) </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.PeriodEnd">
            <summary> Time stamp in UTC when this period ended (Station Time)</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.UsedDetails">
            <summary> List of detailed consumption data</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.PickupErrors">
            <summary> List of pickup Errors</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.Recipes">
            <summary>Unique recipe references</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.Station">
            <summary>SIPLACE Monitoring station configuration</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupObservationData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError">
            <summary>
            The PickupError class contains detailed information about pickup error for a specific board.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.StationTime">
            <summary>Time stamp in UTC by when the error has occurred at the station.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.Head">
            <summary>
            Number of head on the gantry (usually 1, if the gantry has two heads (e.g. F5), the heads have number 1 and
            2).
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.Segment">
            <summary> Number of segment on the head. Counting from 1 to 20 (at a CP20 Head).</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.Nozzle">
            <summary>Number of nozzle</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.ErrorType">
            <summary>Station Error Number</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.ErrorDescription">
            <summary>
            Error description lookup from the ErrorType. This is translated into the current thread's culture
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.Gantry">
            <summary>
            Number of Gantry (Valid range is 1-4)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.TrackEntryId">
            <summary>
            Internally used to get TrackEntry object.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.FeederId">
            <summary>
            Unique FeederId (serial number) of the Feeder. Only valid in case of xFeeder
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.TrackEntry">
            <summary>OIS TrackEntry</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.Classification">
            <summary>
            A classification of the <see cref="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.ErrorType"/> according to ASM AS rules implemented in SSW708 and above.
            Possible values are
            <list type="table">
            <term>Value</term><description>Description</description>
            <term>11</term><description>error occurred during component placement</description>
            <term>12</term><description>error occurred during component pickup</description>
            <term>14</term><description>error occurred during component measurement</description>
            <term>15</term><description>error occurred during component treatment</description>
            </list>
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.PickupError,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError,Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError,Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.PickupError)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard">
            <summary>
            The class ProcessedBoard contains data of a processed board which consists of one or more PCBs.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard._producedPanels">
            <summary>
            List of Produced Panels. In case of StationSW less than 707 this List
            is usually empty. With 707 this list should contain valid entries
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.ProcessedBoard,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.StationTime">
            <summary>Timestamp when station sent this message</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BoardName">
            <summary>Name of board originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BoardNumber">
            <summary>Board ID generated from station.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.Conveyor">
            <summary>
            Conveyor on which the board was produced.
            
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.Barcode">
            <summary>The barcode on the PCB in case the station has a PCB barcode scanner and this scanner was active.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.Status">
            <summary>PCB status </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.PanelCount">
            <summary>
            Count of panels. These are the produced panels. Panels are not produced, if they have an inkspot.
            Supported only by station software 703 and higher. Lower versions set this value to 0.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.SubConveyor">
            <summary>
            SubConveyor
            Usually, the value is SubConveyorType.Undefined. Only in case the board
            was produced on station with Quad Lane Options, the sub-conveyors are set.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BoardSide">
            <summary>
            The board side, which was selected in the SIPLACE Pro recipe. Supported only by station software 703 and
            higher.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BoardFullPath">
            <summary>Full path including name and folders of the board originally from SIPLACE Pro.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BuildTimePa1">
            <summary>
            Build time in processing area 1 in milliseconds. This information is only available
            if the board has been produced by a station with station SW 7xx. -1 indicates an invalid entry.
            <remarks>
            This represents the time a station used to process a certain board in a given processing area. This definition conforms
            to the IPC 9850 specification. It includes
            <ul>
            <li>Fiducial Read</li>
            <li>Nozzle Exchange</li>
            <li>Placement Time</li>
            </ul>
            <br />
            Transferred to the SIPLACE station terminology this is the time between the
            <ul>
            <li>First Measuring activity</li>
            <li>Last Placement activity</li>
            </ul>
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BuildTimePa2">
            <summary>
            Build time in processing area 2 in milliseconds. This information is only available
            if the board has been produced by a station with station SW 7xx. -1 indicates an invalid entry.
            <remarks>
            This represents the time a station used to process a certain board in a given processing area. This definition conforms
            to the IPC 9850 specification. It includes
            <ul>
            <li>Fiducial Read</li>
            <li>Nozzle Exchange</li>
            <li>Placement Time</li>
            </ul>
            <br />
            Transferred to the SIPLACE station terminology this is the time between the
            <ul>
            <li>First Measuring activity</li>
            <li>Last Placement activity</li>
            </ul>
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.PCBGuid">
            <summary>
            Unique PCB reference.
            This is also known as PCB IndividualGUID!
            PCB individual ID is the Identifier for a PCB individual, which is assigned by the station software and whispered
            to other stations down the line in case whispering is active.
            </summary>
            <value>
            The Unique PCB reference.
            </value>
             /// <remarks>
            This information requires OIS 14.1 or later.
            </remarks>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.ProducedPanels">
            <summary>
            List of produced panels. In case of StationSW less than 707 this List
            is usually empty. With 707 and higher this list should contain valid entries
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BuildTime">
            <summary>Build time in seconds. For stations less than 7xx this value comes from the station and for 7xx and
            higher is filled with the maximum value of BuildTimePa1 and BuildTimePa2</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.BuildTimeInt">
            <summary>Build time in seconds. For stations less than 7xx this value comes from the station and for 7xx and
            higher is filled with the maximum value of BuildTimePa1 and BuildTimePa2</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessedBoard)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress">
            <summary>
            ProcessingLocationAddress
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.ProcessingLocationAddress)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.ProcessingLocationAddress,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.Conveyor">
            <summary>Conveyor</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.SubConveyor">
            <summary>SubConveyor</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress,Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.ProcessingLocationAddress)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe">
            <summary>
            The Recipe class contains data from a SIPLACE Pro recipe for one station.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Sis.Recipe,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.BoardFullPath">
            <summary>Full Path of the board</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.BoardName">
            <summary>Name of board</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.ConveyorMode">
            <summary>
            Conveyor Mode of the recipe, one of the following choices
            1: Single Conveyor
            2: DualAsynchronous
            3: DualSynchronous
            4: QuadLane in single conveyor mode
            5: QuadLane in asynchronous mode.
            6: QuadLane in synchronous mode
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.EndTime">
            <summary>End time stamp in UTC for the recipe</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.RecipeId">
            <summary>
            Unique recipe identifier.
            Will be set from SIS server
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.RecipeId_Long">
            <summary>
            Unique recipe identifier.
            Will be set from SIS server
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.LineJobGuid">
            <summary>
            GUID that identifies uniquely a download of a job to a production line 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.ParallelProcessingFactorValid">
            <summary>Is the value ParallelProcessingFactor in  SIPLACE Pro set?</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.LineName">
            <summary>The name of the line from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.LineFullPath">
            <summary>The full path of the line including name and folders of the line originally from SIPLACE Pro.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.StationName">
            <summary>The name of the station originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.StationFullPath">
            <summary>Full path including name and folders of the station originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.StartTime">
            <summary>Time in UTC by when the recipe data was transferred to the station.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.Conveyor">
            <summary>The transport side this recipe was schedule to.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.RecipeName">
            <summary>The name of recipe originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.RecipeFullPath">
            <summary>The full path including name and folders of the recipe originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.SetupName">
            <summary>The name of setup originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.SetupFullPath">
            <summary>The full path including name and folders of the setup originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.CycleTime">
            <summary>Cycle time calculated by SIPLACE PRO</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.ComponentBarcode">
            <summary>Component barcode</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.StationCycleTimeValid">
            <summary>Is the value StationCycleTime in  SIPLACE Pro set?</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.StationCycleTime">
            <summary>Cycle time calculated from optimizer</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.ParallelProcessingFactor">
            <summary>
            The value it 2 if station runs in IPlacement mode; it is n  if the station runs in a cluster of n parallel stations;
            it is 2*n,  if station runs in I-Placement mode and if it runs in a cluster of n parallel stations;
            it is 1 in all other cases
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.Bypassed">
            <summary>Indicates if board of this recipe will have a placement content on this station.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.OrderId">
            <summary>
            The Order ID is a property, which can be set by an external MES system in the production schedule element.
            This can then be propagated by the Monitoring service for correlating consumption to the proper board.
            <remarks>
            This property is available for OIB 2.5 and higher together with SIPLACE OIS 9.3 and higher.
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.Heads">
            <summary>List of heads referenced in the recipe</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.TargetBoards">
            <summary>List of boards referenced in the recipe</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.TrackEntries">
            <summary>List of tracks entries containing pickup locations with the components in the recipe</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.RecipeAddOnEntries">
            <summary>
            List of The Recipe Add On information in the recipe. This list gets filled if SIPLACE Pro version 8.0 and higher is
            installed
            Otherwise the list is empty
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.LBOActive">
            <summary>
            LBOActive for StationSetup
            false: if Long Board Option is not active in the SIPLACE Pro StationSetup
            true: if Long Board Option is active in the SIPLACE Pro StationSetup
            <remarks>
            This information requires a OIS 13.0 or later.
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.LBOActiveStationInLine">
            <summary>
            LBO Active for StationInLine
            false: if Long Board Option is not active in the SIPLACE Pro StationInLine
            true: if Long Board Option is active in the SIPLACE Pro StationInLine.
            <remarks>
            This information requires OIS 13.0 or later.
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.DownloadMode">
            <summary>
            DownloadMode
            0: Unknown
            1: LineWiseDownload
            2: StationWiseDownload
            3: BarcodeDrivenAutoDownload
            <remarks>
            This information requires OIS 13.0 or later.
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.ProductionMode">
            <summary>
            0: undefined
            1: normal production
            2: new product introduction
            </summary>
             /// <remarks>
            This information requires OIS 14.1 or later.
            </remarks>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Recipe)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn">
            <summary>
            The Recipe Add On information. This information is available with SIPLACE Pro version 8.0 and higher
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Sis.RecipeAddOn,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.PlacementMode">
            <summary>
            0: Undefined
            1: Alternating (Both gantries work on both lanes)
            2: I-Placement (Right gantry places on right lane, left gantry places on left lane)
            3: Virtual I-Placement Right (heads in the first placement area are placing alternating on the right conveyor and heads of the second placement area are placing alternating on the left conveyor)
            4: Virtual I-Placement Left (heads in the first placement area are placing alternating on the left conveyor and heads of the second placement area are placing alternating on the right conveyor)
            5: Alternating optimized with option ‘Equal cycle times for left and right lane’ (Only occurs with SIPLACE Pro 16.0 or higher.)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.BuildTime">
            <summary>Time from first Measurement to last placement activity in milliseconds</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.StationTactTime">
            <summary>lStationTactTime = BuildTime + TransportTime in milliseconds</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.ParallelProcessingFactor">
            <summary>
            •	2  if station runs in IPlacement mode
            •	n  if the station runs in a cluster of n parallel stations
            •	2*n,  if station runs in I-Placement mode and if it runs in a cluster of n parallel stations
            •	1   in all other cases
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.SteppingActive">
            <summary>
            false if the HeadSteps are using only one stopper position
            true if the HeadSteps are using more than one stopper position.
            <remarks>
            This information requires a OIS 13.0 or later.
            </remarks>
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn,Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn,Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeAddOn)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange">
            <summary>
            Data of a recipe change for an individual processing location. A processing location is
            defined by the processing area and the transport side.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.RecipeChangeComposite,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.Recipe">
            <summary>
            The recipe data for this station.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.Conveyor">
            <summary>Conveyor the recipe change has happened for.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.SubConveyor">
            <summary>
            The Sub Conveyor the recipe change has happened for. Usually, the Sub Conveyor is 'Undefined' -
            only lines with the Quad Lane Option have the conveyor defined.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.StationTime">
            <summary>Timestamp in UTC by when the station has sent the message</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.LineJobGuid">
            <summary>
            GUID that identifies uniquely a download of a job to a production line 
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeChange.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection">
            <summary>
            A RecipeCollection contains RecipeIDs for the whole station in processing location granularity
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.RecipeCollection)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.RecipeCollection,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.RecipeLocations">
            <summary> List of Recipe Location information </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.StationTime">
            <summary> Timestamp in UTC when station sent this message</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeCollection.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeLocation">
            <summary>
            The Recipe associated with a Processing Area
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeLocation.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeLocation.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.RecipeLocation,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeLocation.DataContractRecipeLocation">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeLocation.Recipe">
            <summary>Recipe data for the production of this board.</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeLocation.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RecipeLocation.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo">
            <summary>Detailed consumption data</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.RejectInfo,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentAbsenceAfterPick">
            <summary>
            Components not detected after pick. Default value is -1.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentAbsenceBeforePlace">
            <summary>
            Components not detected after place. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentMaterialDefect">
            <summary>
            Components rejected after material defect was detected by
            either vision or coplanarity module. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.TreatmentError">
            <summary>
            Components which had to be rejected after dipping or gluing error.
            Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.DroppedError">
            <summary>
            Components rejected i. e. after board abortion. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentPresenceAfterPlace">
            <summary>
            Components detected at nozzle after placing. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.IdentError">
            <summary>
            Components rejected after vision or coplanarity module measurement failed due
            to wrong pickup. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.PickupRetries">
            <summary>
            Pickup retries that are not counted for track empty error.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentAbsenceAfterPick_Int">
            <summary>
            Components not detected after pick. Default value is -1.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentAbsenceBeforePlace_Int">
            <summary>
            Components not detected after place. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentMaterialDefect_Int">
            <summary>
            Components rejected after material defect was detected by
            either vision or coplanarity module. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.TreatmentError_Int">
            <summary>
            Components which had to be rejected after dipping or gluing error.
            Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.DroppedError_Int">
            <summary>
            Components rejected i. e. after board abortion. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ComponentPresenceAfterPlace_Int">
            <summary>
            Components detected at nozzle after placing. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.IdentError_Int">
            <summary>
            Components rejected after vision or coplanarity module measurement failed due
            to wrong pickup. Default value is -1
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.PickupRetries_Int">
            <summary>
            Pickup retries that are not counted for track empty error.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo,Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo,Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.RejectInfo)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection">
            <summary>
            Setup information
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.SetupCollection,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.Station">
            <summary>SIPLACE Monitoring station configuration</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.TrackEntries">
            <summary>
            List of OisBoard OisStation Composite References which comprises all OisBoard OisStation Composites for a given board
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection,Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection,Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.SetupCollection)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData">
            <summary>
            Class containing heart beat event data
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.IsAdapterConnectedToMon">
            <summary>
            Status if the Adapter is connected to the Monitoring Service Process.
            If null, the check was not done since it was not requested.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.AdapterToMonStateChangeDetected">
            <summary>
            DateTime in UTC when the connection change (Adapter to Monitoring Service Process) was detected
            DateTime.MinValue in case there was no change yet or check was not done since it was not requested.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.IsAdapterConnectedToCore">
            <summary>
            Status if the Adapter is connected to the OIB Core
            If null, the check was not done since it was not requested.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.AdapterToCoreStateChangeDetected">
            <summary>
            DateTime in UTC when the connection change (Adapter to OIB Core) was detected
            DateTime.MinValue in case there was no change yet or check was not done since it was not requested.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.Stations">
            <summary>
            List of stations in the same order of their sequence in the line.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.HeartBeatEventData)">
            <summary>
            Constructor for creating the HeartBeatEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.HeartBeatEventData,System.Int32)">
            <summary>
            Constructor for creating the HeartBeatEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.HeartBeatEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData">
            <summary>
            The object SpliceEventData contains the data of one or more splice events for one station.
            </summary>
            <exclude />
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData.SpliceEvents">
            <summary>
            Collection of Splice Events
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.SpliceEventData)">
            <summary>
            Constructor for creating the SpliceEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.SpliceEventData.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.SpliceEventData,System.Int32)">
            <summary>
            Constructor for creating the SpliceEventData objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason">
            <summary>
            StateChangeReason
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.StateChangeReason,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.AssistId">
            <summary>
            Gets or sets the identifier of this assist. This must be defined by the assist source and must be maintained
            consistently for the lifetime and the scope for one source id.
            The Ids can be reused when the assists have been removed by the originator.
            The assists do not need to survive a "reboot" of the data source.  The assists are being considered to be new, when an
            assist source has been restarted. This value is mandatory
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.ErrorNo">
            <summary>
            Gets or sets the error no. This corresponds to the ScenarioId in the Operator Assist interface.
            </summary>
            <value>
            The error no.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.DescriptionTranslations">
            <summary>
            Gets or sets the description translations for other languages than English. This is a dictionary of language tags and
            the corresponding translation in that language.
            The key values are either Cultures or Locales as defined in Culture names and identifiers . Max length of key is 10
            characters.
            Max length of value is 256 characters which might include multi-line text.
            Filling this collection is optional. The CultureInfo class specifies a unique name for each culture, based on RFC 4646.
            The name is a combination of an ISO
            639 two-letter lowercase culture code associated with a language and an ISO 3166 two-letter uppercase subculture code
            associated with a country or region.
            The language needs to be associated with the particular region where it is spoken, and this is done by using locale
            (language + location).
            For example: fr is the code for French language. fr-FR means French language in France. So, fr specifies only the
            language whereas fr-FR is the locale
            </summary>
            <value>
            The description translations.
            </value>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeReason.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger">
            <summary>
            StateChangeTrigger class containing information about state change reasons and the time when the change was triggered
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Ois.StateChangeTrigger,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.TimeStamp">
            <summary>
            Station time stamp of trigger event as UTC.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.StateChangeReasons">
            <summary>
            Reason codes of the trigger. May be an assist ID or and error ID.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateChangeTrigger.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition">
            <summary>
            The new state for a processing location. Events may cause state transitions.
            On each event, the Monitoring Service determine the state transition for all
            processing locations and add them to the event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.StateTransition,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.StationState">
            <summary>The new state.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.Conveyor">
            <summary>
            Conveyor belt 1/2.
            0: Undefined (all)
            1: Right
            2: Left
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StateTransition)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station">
            <summary>
            Contains the configuration setting for a station in SIPLACE Monitoring.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.#ctor">
            <summary>
            Public constructor to be used internally
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.Station,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.LineName">
            <summary>Name of the line originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.LineFullPath">
            <summary>Full path including name and folders of the line originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.Name">
            <summary>Name of the station originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.FullPath">
            <summary>Full path including name and folders of the station originally from SIPLACE Pro</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.ProcessingAreaCount">
            <summary>Count of processing areas. Station can have one or two processing areas.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.Text">
            <summary>
            This is a comment which can be set by the user when configuring the station in SIPLACE Monitoring / Line
            Config Tool.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.ComputerAddress">
            <summary>TCP/IP-Address or computer name of the station</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.StationId">
            <summary>Unique ID of the station.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.MachineId">
            <summary>
            Machine Id of the station. The machine ID is defined during the installation of the machine and
            can be scanned from barcode labels attached to the station locations.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.SoftwareVersion">
            <summary>Software version of the station</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.TypeName">
            <summary>TypeName of  the station</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.MachineType">
            <summary>
            Gets or sets the type of the machine (station or printer).
            </summary>
            <value>
            The type of the machine.
            </value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.StationOrder">
            <summary>Order of the station in the line</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.Isa95Path">
            <summary>
            The Isa95 Path associated with the Factory Configuration for this station (if found in OIB Configuration Manager)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station,Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.Station)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection">
            <summary>
            This class contains the availability information of a station. Only for OIS 16.0 and higher
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection.#ctor">
            <summary>
            Constructor not to be used
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.StationAvailabilityEventData)">
            <summary>
            Constructor for creating the StationAvailabilityCollection objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection.#ctor(Asm.As.Oib.Monitoring.Contracts.Data.Monitoring.StationAvailabilityEventData,System.Int32)">
            <summary>
            Constructor for creating the StationAvailabilityCollection objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection.ProcessingLocationAvailabilityStates">
            <summary>
            An unordered list of the E58 based availability interpretation for given base event.
            For each processing location (PLOC) of a machine one entry may be added. Thus a placement machine with 
            2 processing areas and 2 conveyors may send up to 4 PlocAvailabilityState entries.
            <remarks>
            This is only filled for Monitoring Service 16.0 or higher
            </remarks>
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationAvailabilityCollection.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent">
            <summary>
            Data about an event which has occurred on the station consisting of the event itself and state changes for the
            processing areas.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.StationEvent,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.BoardNumber">
            <summary>
            The Board number is a station internal number which identifies the board in the machine,
            when it travels through the machine.
            <remarks>
            The Board number is only set for those event types, which have a board context like PCB_BEGIN and
            PCB_END. The default value is 0 (zero).
            The board number is unique in the scope of the machine. The Board number can not be used to track
            one board through the line. Therefore a potentially used barcode can be used.
            Be aware, that the counter will be reset, when it exceeds a maximum value and when the station will
            be restarted. So it is unique only for a period of time.
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.StationTime">
            <summary>
            Timestamp in UTC when the station sent the message
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.Conveyor">
            <summary>The transport side the event has occurred on.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.StationEventType">
            <summary>Event Number.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.ProcessingMode">
            <summary>Processing mode 1/2.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.SubConveyor">
            <summary>
            The sub conveyor the event has occurred on. It is 'Undefined' except
            the line has the Quad Lane Option.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent,Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEvent)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite">
            <summary>
            This class contains data of a station event.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Monitoring.EventComposite,System.Int32)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="messageOID">The message OID.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.StateTransitions">
            <summary>
            State transitions related to the base event
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.ProcessingLocationStates">
            <summary>
            Processing location related states
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.GantryStates">
            <summary>
            Gantry related states
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.BoardNumber">
            <summary>
            The Board number is a station internal number which identifies the board in the machine,
            when it travels through the machine.
            <remarks>
            The Board number is only set for those event types, which have a board context like PCB_BEGIN and
            PCB_END. The default value is 0 (zero).
            The board number is unique in the scope of the machine. The Board number can not be used to track
            one board through the line. Therefore a potentially used barcode can be used.
            Be aware, that the counter will be reset, when it exceeds a maximum value and when the station will
            be restarted. So it is unique only for a period of time.
            </remarks>
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.StationTime">
            <summary>Timestamp in UTC when the station sent the message</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.Conveyor">
            <summary>The transport side the event has occurred on.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.StationEventType">
            <summary>Event Number.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.ProcessingArea">
            <summary>
            Processing area 1/2.
            0 means all processing areas.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.ProcessingMode">
            <summary>Processing mode 1/2.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.SubConveyor">
            <summary>
            The sub-conveyor the event has occurred on. It is 'Undefined' except
            the line has the Quad Lane Option.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.StationEventComposite.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard">
            <summary>
            This class contains SIPLACE Pro data of the board to be produced.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Sis.TargetBoard,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.LotSize">
            <summary>Count of boards for the given recipe</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.PanelLotSize">
            <summary>Count of Panels to be produced</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.BoardName">
            <summary>Name of board originally from SIPLACE Pro.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.BoardFullPath">
            <summary>Name and folders of the board originally from SIPLACE Pro.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.OrderId">
            <summary>Free definable customer order id which can be set in Line Control.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.BoardSide">
            <summary>The side of the board to be produced by this recipe.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.SubConveyor">
            <summary>
            It is 'Undefined' except
            the line has the Quad Lane Option.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.ComponentCount">
            <summary>Count of components</summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.OnInitialize(System.Object)">
            <summary>
            Called when [initialize].
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard,Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard,Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.TargetBoard)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry">
            <summary>
            Track Entry information which related to the Recipe Composite
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Sis.TrackEntry,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningIstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.TableLocation">
            <summary>Number of table at the station. Values 1..4.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.Track">
            <summary>Start track of the feeder. Range for X-Table: 1..40.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.Tower">
            <summary>Number of tower  MTC only. Value is 0 for other feeders.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.Level">
            <summary>Number of level only WPC and MTC. Value is 0 for other feeders.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.Division">
            <summary>Number of Division</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.FeederType">
            <summary>Type of feeder</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.ComponentName">
            <summary>Name of component</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.ComponentFullPath">
            <summary>Full Path of component</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.ComponentShapeName">
            <summary>Name of component shape</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.ComponentShapeFullPath">
            <summary>Full Path of component shape</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.FeederLongType">
            <summary>SIPLACE Pro number of feeder type</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.FeederTypeName">
            <summary>SIPLACE Pro name of feeder type.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.TableTypeName">
            <summary>SIPLACE Pro name of table type.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.Used">
            <summary>Indicates whether this track entry is used by the recipe. Family setups may contain more material.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.TrackEntryId">
            <summary>Unique track entry identifier. Will  be set from SIS server </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.TableType">
            <summary>SIPLACE Pro number of table type.</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.TrackEntryId_Long">
            <summary>Unique track entry identifier. Will  be set from SIS server </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry,Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry,Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.TrackEntry)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail">
            <summary>
            Detailed consumption data for a specific pickup position in the setup.
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.#ctor">
            <summary>
            Public constructor to be used within Proxy
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.#ctor(Siemens.Siplace.Oib.Monitoring.Contracts.Data.Ois.UsedDetail,Asm.As.Oib.Monitoring.Proxy.Architecture.Objects.Monitoring)">
            <summary>
            Internal Constructor for creating the Monitoring objects
            </summary>
            <param name="data">The data coming from the OIS service</param>
            <param name="owningInstance">The owning instance.</param>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.DataContract">
            <summary>
            Gets the internal data contract.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.AccessTotal">
            <summary>Total count of picked components</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.RejectIdent">
            <summary>
            Count of rejects caused by identification errors (camera errors)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.RejectVacuum">
            <summary>
            Count of rejects caused by vacuum errors
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.TrackEntryId">
            <summary>
            lIdTrackEntry: used as reference into the OisUsedDetail table.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.TrackEntry">
            <summary>
            Details of the pickup location (Location, Track, Division, Component...)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.TrackEmpty">
            <summary>
            Tack Empty count: This value will be set by the station whenever a TrackEmpty gets detected.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.FeederId">
            <summary>
            Unique FeederId of the Feeder. Only valid in case of xFeeder
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.PlacedComponents">
            <summary>
            Count of successfully placed components sent by SIRIO stations
            Default value is -1, meaning no PlacedComponents information available
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.ExtendedRejects">
            <summary>
            Detailed information about why rejects occurred.
            The reference is null for any OIS version before 12.0 and for Stations with SW version &lt; 708
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.AccessTotal_Int">
            <summary>Total count of picked components</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.RejectIdent_Int">
            <summary>
            Count of rejects caused by vision measurement.
            Only  valid for Stations with SW version &lt; 708. Please use ExtendedRejects instead for 708 and higher!
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.RejectVacuum_Int">
            <summary>
            Count of overall rejects except vision errors and except track empty errors
            Only  valid for Stations with SW version &lt; 708. Please use ExtendedRejects instead for 708 and higher!
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.TrackEmpty_Int">
            <summary>
            Tack Empty count: This value will be set by the station whenever a TrackEmpty gets detected.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.PlacedComponents_Int">
            <summary>
            Count of successfully placed components sent by SIRIO stations
            Default value is -1, meaning no PlacedComponents information available
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.OnInitialize(System.Object)">
            <summary>
            Method for initializing the data using generics
            </summary>
            <param name="data">The data contract associated with this object</param>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.ToString">
            <summary>
            Overloaded, returns all Properties and their values as string
            </summary>
            <returns>Properties and their values</returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise,
            false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode" /> is suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.op_Equality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail,Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.op_Inequality(Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail,Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail.Equals(Asm.As.Oib.Monitoring.Proxy.Business.Objects.UsedDetail)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardSideType">
            <summary>Enum for the board side selected in a recipe.</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardSideType.Undefined">
            <summary>BordSide is not defined (not available)</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardSideType.Top">
            <summary>The board side selected in the recipe is top</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardSideType.Bottom">
            <summary>The board side selected in the recipe is bottom</summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType">
            <summary>
            Enum of the board status type.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType.Cancelled">
            <summary>
            Canceled (PCB was aborted / removed or no time set in board)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType.PartlyPlaced">
            <summary>
            Partly Placed (in case auto recovery mode is active)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType.CombinedPCB">
            <summary>
            Combined PCB -- never used
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType.Reserved1">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType.Reserved2">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.BoardStatusType.Reserved3">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType">
            <summary>Enum for completion status</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.StatusUnknown">
            <summary>Status is not known</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.MessageComplete">
            <summary>Message is complete</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.MessageForced">
            <summary>Sending of messages has been forced</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.MessageTimeout">
            <summary>Message sent after timout</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.Reserved1">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.Reserved2">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.Reserved3">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.CompletionStatusType.Reserved4">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType">
            <summary>Enum for Content Summary</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.Initial">
            <summary>Initial Type</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.PcbBegPa1">
            <summary>PCB_BEGIN for processing area 1</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.PcbEndPa1">
            <summary>PCB_END for processing area 1</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.PcbBegPa2">
            <summary>PCB_BEGIN for processing area 2</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.PcbEndPa2">
            <summary>PCB_END for processing area 2</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.Board">
            <summary>Board Entry available</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.CompsPa1">
            <summary>Consumption data Processing area 1 available</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.CompsPa2">
            <summary>Consumption data Processing area 1 available</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.Reserved1">
            <summary>Reserved</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ContentSummaryType.Reserved2">
            <summary>Reserved</summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.ConveyorType">
            <summary>Enum for the conveyor.</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ConveyorType.Undefined">
            <summary>
            Conveyor is not defined.
            This indicates the data refers to the full station.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ConveyorType.Right">
            <summary>
            Right transport lane.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ConveyorType.Left">
            <summary>
            Left transport lane.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.GantryEventType">
            <summary>Enum that contains all Gantry event types.</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.GantryEventType.Undefined">
            <summary>
            State is undefined
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.GantryEventType.Idle">
            <summary>
            State is Idle, Gantry is waiting for jobs to perform
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.GantryEventType.Interrupted">
            <summary>
            State is Interrupted, Error caused the Gantry to stop working
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.GantryEventType.Processing">
            <summary>
            State is Processing, Gantry is either measuring picking or placing
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.PassmodeStatusType">
            <summary>Enum with all passmode status types</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.PassmodeStatusType.Undefined">
            <summary>Status is not known or not initialized</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.PassmodeStatusType.NotBypassed">
            <summary>Not Bypassed</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.PassmodeStatusType.BypassedByRecipe">
            <summary>Processing Location was bypassed by Recipe</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.PassmodeStatusType.BypassedByStation">
            <summary>Processing Location was bypassed by Station</summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.NamespaceDoc">
            <summary>
            The Asm.As.Oib.Monitoring.Proxy.Business.Types namespace contains all the business types (enums) for supporting the
            business
            objects for Monitoring.
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.ProcessingModeType">
            <summary>Enum for processing mode.</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ProcessingModeType.Undefined">
            <summary></summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ProcessingModeType.Alternating">
            <summary>The heads inside a processing location place the board together.</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ProcessingModeType.IPlacement">
            <summary>
            The left head inside a processing area places the board on the left conveyor while the head of the right side
            places the board on the right conveyor.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ProcessingModeType.Right">
            <summary>
            Virtual I-Placement Right means that the heads in the first placement area are placing alternating on the right conveyor
            and the heads of the second placement area are placing alternating on the left conveyor.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ProcessingModeType.Left">
            <summary>
            Virtual I-Placement left means that the heads in the first placement area are placing alternating on the left conveyor
            and the heads of the second placement area are placing alternating on the right conveyor.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.ProcessingModeType.AlternatingEqualCycleTimes">
            <summary>
            Alternating optimized with option ‘Equal cycle times for left and right lane’
            <remarks>
            Only occurs with SIPLACE Pro 16.0 or higher.
            </remarks>
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType">
            <summary>Enum with all event types</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Invalid">
            <summary>Event invalid</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.PCBBegin">
            <summary>Start of production for a certain processing area on conveyor 1</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.PCBBegin2">
            <summary>Start of production for a certain processing area on conveyor 2</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.PCBEnd">
            <summary>End of production for a certain processing area on conveyor 1</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.PCBEnd2">
            <summary>End of production for a certain processing area on conveyor 2</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.BreakBegin">
            <summary>Production has been interrupted</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.EmergencyStop">
            <summary>Emergency stop was initiated</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Air">
            <summary>Not enough air</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Stop">
            <summary>Stop button was pressed on the machine</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.BreakEnd">
            <summary>Production has been resumed</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Start">
            <summary>Start button has been pressed</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.WaitPCBIn">
            <summary>Waiting for PCB in the input area</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.WaitPCBInside">
            <summary>Waiting for PCB in the middle area</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.WaitPCBOut">
            <summary>Wait until the output area is no longer occupied</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.WaitData">
            <summary>Waiting for data from the line computer</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Placing">
            <summary>Machine is placing on conveyor 1</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Placing2">
            <summary>Machine is placing on conveyor 2</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.FiducialError">
            <summary>Fiducial Error</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.TrackError">
            <summary>All Feeders for a required component are empty. Station stops producing</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.MachineError">
            <summary>Fatal machine error occurred</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.TransportError">
            <summary>Transport error occurred</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.BarcodeError">
            <summary>Barcode Error occurred</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.ErrorEnd">
            <summary>Problem has been fixed</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.HeadStepBegin">
            <summary>Head step mode</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.KeySlowBegin">
            <summary>Slow mode active</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.VisionBegin">
            <summary>Vision active</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.FunctionBegin">
            <summary>Single mode active</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.InitBegin">
            <summary>Machine is in init state</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.HeadStepEnd">
            <summary>Head step mode turned off</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.KeySlowEnd">
            <summary>Slow mode turned off</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.VisionEnd">
            <summary>Vision mode turned off</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.FunctionEnd">
            <summary>Single mode turned off</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.InitEnd">
            <summary>Machine init end</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.HolidayBegin">
            <summary>Holiday mode</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.MaintenanceBegin">
            <summary>Maintenance mode</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.SetupBegin">
            <summary>Machine setup start</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.DownPlanBegin">
            <summary>Machine down planned</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.DownIllBegin">
            <summary>Machine down unplanned</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.PrototypeBegin">
            <summary>Prototype mode</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.UsereventEnd">
            <summary>Manual input end</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.StandAloneBegin">
            <summary>Stand alone mode start</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.StandAloneEnd">
            <summary>Stand alone mode end</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Dispensing">
            <summary>
            The printer is dispensing
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Kneading">
            <summary>
            The printer is kneading
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Printing">
            <summary>
            The printer is printing
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Inspection">
            <summary>
            The printer is doing inspection
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.Cleaning">
            <summary>
            The printer is cleaning
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationEventType.StationDisconnect">
            <summary>Station disconnect</summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.MachineType">
            <summary>
            Enum for the type of the machine (SIPLACE placement machine or DEK printer)
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.MachineType.PlacementMachine">
            <summary>
            Placement machine type
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.MachineType.Printer">
            <summary>
            Printer type
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType">
            <summary>Enum that contains all station state types.</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Invalid">
            <summary>State invalid</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.PCBBegin">
            <summary>Placing PCB on conveyor 1</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.PCBBegin2">
            <summary>Placing PCB on conveyor 2</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.PCBEnd">
            <summary>Placing end on conveyor 1</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.PCBEnd2">
            <summary>Placing end on conveyor 2</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.BreakBegin">
            <summary>State Interruption</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.EmergencyStop">
            <summary>StateEmergencyStop</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Air">
            <summary>Not enough air</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Stop">
            <summary>Machine has been stopped</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.WaitPCBIn">
            <summary>Waiting for PCB in input area</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.WaitPCBInside">
            <summary>Waiting for PCB in middle area</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.WaitPCBOut">
            <summary>Waiting for leaving the machine</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.WaitData">
            <summary>Waiting for data from SIPLACE Pro Line Control</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.FiducialError">
            <summary>Station stopped on a fiducial error</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.TrackError">
            <summary>All Feeders for a required component are empty. Station stops producing</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.MachineError">
            <summary>Station stopped on a machine error</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.TransportError">
            <summary>Station stopped on a transport error</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.BarcodeError">
            <summary>Station stopped on a barcode error</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.HeadStep">
            <summary>Station in head step mode</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.KeySlow">
            <summary>Station in slow mode</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Vision">
            <summary>vision active</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Function">
            <summary>Station in single mode</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Init">
            <summary>Station is booting up</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Holiday">
            <summary>Holiday</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Maintenance">
            <summary>Maintenance</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Setup">
            <summary>Setup</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.DownPlan">
            <summary>Planned Downtime</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.DownIll">
            <summary>Ill</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Prototype">
            <summary>Prototype</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.StandAloneBegin">
            <summary>Stand Alone Begin</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.StandAloneEnd">
            <summary>Stand Alone End</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Rx1">
            <summary>Rx1 Internal state</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Rx2">
            <summary>Rx2 Internal state</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Rx3">
            <summary>Rx3 Internal state</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Dispensing">
            <summary>
            The printer is dispensing
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Kneading">
            <summary>
            The printer is kneading
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Printing">
            <summary>
            The printer is printing
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Inspection">
            <summary>
            The printer is doing inspection
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.StationStateType.Cleaning">
            <summary>
            The printer is cleaning
            </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.SubConveyorType">
            <summary>Sub conveyor type. In case the station has the Quad Lane option, a subconveyor is defined.</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.SubConveyorType.Undefined">
            <summary>The station has no Quad Lane option</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.SubConveyorType.Right">
            <summary>Right subconveyor</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.SubConveyorType.Left">
            <summary>Left subconveyor </summary>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Business.Types.UsedType">
            <summary>
            The used type indicates, if the stations picks up from a specific track for the current recipe. In case of
            family setup there are usually no used track. This feature is supported with SIPLACE Pro 7.0 or higher.
            </summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.UsedType.Undefined">
            <summary>SIPLACE Pro versions lower than 7.0</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.UsedType.True">
            <summary>Track is used</summary>
        </member>
        <member name="F:Asm.As.Oib.Monitoring.Proxy.Business.Types.UsedType.False">
            <summary>Track is not used</summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.SubscriptionTimeout">
            <summary>
            Gets the subscription timeout.
            </summary>
            <value>The subscription timeout.</value>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.CallbackCertificateValue">
            <summary>
            Something like "CN=ASM.SW.Service"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.CallbackCertificateStoreLocation">
            <summary>
            StoreLocation.LocalMachine or StoreLocation.CurrentUser
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.CallbackCertificateX509FindType">
            <summary>
            One of the X509FindType enum values (e.g. X509FindType.FindBySubjectDistinguishedName). The CallbackCertificateValue must match 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.CallbackCertificateStoreName">
            <summary>
            StoreName (typically StoreName.My)
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.CallbackCertificateCommonName">
            <summary>
            Something like "ASM.SW.Service"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.ClientCertificateValue">
            <summary>
            Something like "CN=ASM.SW.Client"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.ClientCertificateCommonName">
            <summary>
            Something like "ASM.SW.Client"
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.ClientCertificateStoreLocation">
            <summary>
            StoreLocation.LocalMachine or StoreLocation.CurrentUser
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.ClientCertificateX509FindType">
            <summary>
            One of the X509FindType enum values (e.g. X509FindType.FindBySubjectDistinguishedName). The CallbackCertificateValue must match 
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.ClientCertificateStoreName">
            <summary>
            StoreName (typically StoreName.My)
            </summary>
        </member>
        <member name="M:Asm.As.Oib.Monitoring.Proxy.ProxyEndpointHelper.GetCallbackAddressOfGateway(System.String)">
            <summary>
            Uses app configuration entries "Asm.As.Oib.Proxies.GatewayComputer" and "Asm.As.Oib.Monitoring.Proxy.CallbackGatewayPort"
            to replace Host and Port of Callback Endpoint Address in gateway scenario.
            </summary>
            <param name="callbackEndpoint"></param>
            <returns></returns>
        </member>
        <member name="T:Asm.As.Oib.Monitoring.Proxy.Resources.ErrorStringTemplate">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Resources.ErrorStringTemplate.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Asm.As.Oib.Monitoring.Proxy.Resources.ErrorStringTemplate.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
